selected_tag:t = ""
bin_dump_file:t = ""
mission_settings {
	player {
		army:i = 1
		wing:t = "player"
	}
	player_teamB {
		army:i = 2
	}
	mission {
		level:t = "levels/stalingrad.bin"
		type:t = "training"
		gt_training:b = false
		environment:t = "Noon"
		weather:t = "hazy"
		isLimitedFuel:b = false
		isLimitedAmmo:b = false
		restoreType:t = "manual"
		optionalTakeOff:b = false
		forceSkiesInitialRandomSeed:b = true
		skiesInitialRandomSeed:i = 4
		customWeather {

		}
	}
	spectator_points {

	}
	briefing {
		place_loc:t = ""
		date_loc:t = ""
		objective_loc:t = ""
		music:t = "action_01"
		viewAreaScale:r = 2
		part {
			event:t = ""
			minTime:i = 0
			slide {
				map:b = true
				minTime:i = 4
				picture:t = ""
				showAirMap:b = false
				icon {
					icontype:t = "fighter"
					side:t = "player"
					target:t = "airfield00"
					lookAt:t = "airfield01"
				}
				icon {
					icontype:t = "airfield"
					side:t = "ally"
					target:t = "airfield01"
				}
			}
		}
	}
}
imports {
	import_record {
		file:t = "gameData/missions/bridges/stalingrad_bridges.blk"
		importAreas:b = true
		importUnits:b = true
		importTriggers:b = true
		importMissionObjectives:b = true
		importWayPoints:b = true
		showAreas:b = true
		showUnits:b = true
		showTriggers:b = true
		showMissionObjectives:b = true
		showWayPoints:b = true
		excludes {

		}
	}
}
triggers {
	isCategory:b = true
	is_enabled:b = true
	initial {
		is_enabled:b = true
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0
			}
		}
		conditions {

		}
		actions {
			triggerDisable {
				target:t = "initial_intro"
				target:t = "initial_intro_skip"
				target:t = "takeoff_ma_changed_to_mj_hint"
				target:t = "takeoff_ma_changed_to_mj_skip"
				target:t = "takeoff_start_MA"
				target:t = "takeoff_start_REAL"
				target:t = "takeoff_toggle_engine_REAL"
				target:t = "takeoff_toggle_engine_REAL_pre_ps4"
				target:t = "takeoff_toggle_engine_REAL_ps4"
				target:t = "takeoff_deploy_flaps_REAL"
				target:t = "takeoff_flaps_deployed_REAL"
				target:t = "takeoff_engine_ready_REAL"
				target:t = "takeoff_engine_ready_REAL_ps4"
				target:t = "takeoff_throttle_max_MA"
				target:t = "takeoff_rudder_HIST"
				target:t = "takeoff_rudder_REAL"
				target:t = "takeoff_rudder_used_REAL"
				target:t = "takeoff_watch_speed_REAL"
				target:t = "takeoff_watch_speed_MA"
				target:t = "takeoff_nosing_hint_REAL"
				target:t = "takeoff_nosing_avoid_REAL"
				target:t = "takeoff_good_speed_MA"
				target:t = "takeoff_elevator_up_HIST_REAL"
				target:t = "takeoff_waypoint_HIST_REAL"
				target:t = "takeoff_retract_gear_HIST_REAL"
				target:t = "takeoff_gear_retracted_HIST_REAL"
				target:t = "takeoff_retract_flaps_REAL"
				target:t = "takeoff_flaps_up_REAL"
				target:t = "takeoff_waypoint_MA_cond"
				target:t = "takeoff_waypoint_MA"
				target:t = "takeoff_waypoint_flight_MA"
				target:t = "takeoff_completed_MA"
				target:t = "retry_takeoff_hint"
				target:t = "mission_end"
				target:t = "mission_timer"
			}
			triggerDisable {
				target:t = "dialogue_intro_p01"
				target:t = "dialogue_intro_p02"
				target:t = "dialogue_MA_changed_to_MJ_p01"
				target:t = "dialogue_MA_changed_to_MJ_p02"
				target:t = "dialogue_takeoff_preparation_p01"
				target:t = "dialogue_takeoff_preparation_p02"
				target:t = "dialogue_takeoff_preparation_p03"
				target:t = "dialogue_takeoff_preparation_p04"
				target:t = "dialogue_takeoff_preparation_p05"
				target:t = "dialogue_takeoff_preparation_p06"
				target:t = "dialogue_takeoff_preparation_p07"
				target:t = "dialogue_takeoff_preparation_FR_p08"
				target:t = "dialogue_takeoff_preparation_FR_p09"
				target:t = "dialogue_takeoff_preparation_FR_p10"
				target:t = "dialogue_warning_FR_p01"
				target:t = "dialogue_warning_FR_p02"
				target:t = "dialogue_takeoff_p01"
				target:t = "dialogue_takeoff_p02"
				target:t = "dialogue_takeoff_p03"
				target:t = "dialogue_takeoff_p04"
				target:t = "dialogue_takeoff_completed_p01"
				target:t = "dialogue_takeoff_completed_p02"
				target:t = "dialogue_takeoff_completed_p03"
				target:t = "dialogue_takeoff_completed_p04"
				target:t = "dialogue_landing_preparation_p01"
				target:t = "dialogue_landing_preparation_p02"
				target:t = "dialogue_landing_preparation_p03"
				target:t = "dialogue_landing_preparation_p04"
				target:t = "dialogue_landing_preparation_p05"
				target:t = "dialogue_landing_preparation_p06"
				target:t = "dialogue_landing_preparation_p07"
				target:t = "dialogue_landing_preparation_MA_p07"
				target:t = "dialogue_landing_near_airfield_p01"
				target:t = "dialogue_landing_near_airfield_p02"
				target:t = "dialogue_landing_breaks_p01"
				target:t = "dialogue_landing_breaks_p02"
				target:t = "dialogue_landing_breaks_p03"
				target:t = "dialogue_landing_breaks_warning_p01"
				target:t = "dialogue_landing_breaks_warning_p02"
				target:t = "dialogue_landing_breaks_warning_FR_p01"
				target:t = "dialogue_landing_breaks_warning_FR_p02"
				target:t = "dialogue_landing_completed_p01"
				target:t = "dialogue_landing_completed_p02"
				target:t = "dialogue_landing_breaks_FR_p02"
			}
			triggerDisable {
				target:t = "takeoff_toggle_engine_REAL_Thrustmaster"
				target:t = "takeoff_throttle_max_MA_Thrustmaster"
				target:t = "takeoff_rudder_HIST_Thrustmaster"
				target:t = "takeoff_rudder_REAL_Thrustmaster"
				target:t = "takeoff_nosing_hint_REAL_Thrustmaster"
				target:t = "takeoff_elevator_up_HIST_REAL_Thrustmaster"
				target:t = "takeoff_retract_gear_HIST_REAL_Thrustmaster"
				target:t = "landing_throttle_30_MA_Thrustmaster"
				target:t = "landing_first_waypoint_MA_Thrustmaster"
				target:t = "landing_gears_MA_Thrustmaster"
				target:t = "landing_level_plane_HIST_REAL_Thrustmaster"
				target:t = "landing_breaks_hint_MA_Thrustmaster"
				target:t = "landing_breaks_hint_HIST_REAL_Thrustmaster"
				target:t = "landing_nosing_hint_REAL_Thrustmaster"
				target:t = "landing_release_brakes_REAL_Thrustmaster"
			}
			playerControls {
				setStatus:t = "disable"
				control:t = "ALL"
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_FLIGHTMENU"
				control:t = "ID_FLIGHTMENU_SETUP"
				control:t = "ID_CONTINUE"
				control:t = "ID_CONTINUE_SETUP"
				control:t = "ID_TOGGLE_VIEW"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
				control:t = "AXIS_RUDDER"
			}
			missionSetFade {
				mode:t = "fadeOut"
				color:p3 = 0, 0, 0
				time:r = 0.1
			}
			missionDisableRadiochat {
				doDisable:b = true
			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			addAirfield {
				runwayStart:t = "airfield00"
				runwayEnd:t = "airfield01"
				runwayWidth:r = 60
				army:i = 1
				spawnPoint:t = "spawnpoint00"
				visibleOnHud:b = true
			}
			bigQueryAddRecord {
				name:t = "tutorialB_takeoff_and_landing"
				params:t = "task 1/3: start mission"
				event:t = ""
			}
			wait {
				time:r = 0.8
			}
			unitRestore {
				ressurectIfDead:b = true
				fullRestore:b = true
				target_marking:i = 0
				target:t = "player"
				ammoRestore:b = true
			}
			missionKillEffects {
				area:t = "big_area"
			}
			wait {
				time:r = 0.2
			}
			spawnOnAirfield {
				runwayName:t = "airfield00"
				objects:t = "player"
			}
			missionSetFade {
				mode:t = "fadeIn"
				color:p3 = 0, 0, 0
				time:r = 0.6
			}
			wait {
				time:r = 0.7
			}
			triggerEnable {
				target:t = "retry_takeoff_hint"
				target:t = "initial_intro"
			}
		}
		else_actions {

		}
	}
	initial_intro {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			triggerEnable {
				target:t = "dialogue_intro_p01"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_t_l_intro"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			wait {
				time:r = 2
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_t_l_intro_continue"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "initial_intro_skip"
			}
		}
		else_actions {

		}
	}
	initial_intro_skip {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			triggerDisable {
				target:t = "initial_intro"
				target:t = "dialogue_intro_p01"
				target:t = "dialogue_intro_p02"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			triggerEnable {
				target:t = "retry_takeoff_hint"
				target:t = "takeoff_start_MA"
				target:t = "takeoff_start_REAL"
				target:t = "takeoff_ma_changed_to_mj_hint"
				target:t = "takeoff_Thrustmaster_no_change_hint"
			}
			moAddMissionObjective {
				target:t = "tutorialB_t&l_takeoff"
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
			}
		}
		else_actions {

		}
	}
	takeoff_ma_changed_to_mj_hint {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isThrustmasterHotas4:b = false
			}
			gameWhenControlWarning {

			}
			gameWhenDifficulty {
				difficulty:t = "simulator"
				is:t = "equal"
			}
		}
		actions {
			triggerDisable {
				target:t = "takeoff_start_MA"
				target:t = "takeoff_start_REAL"
			}
			triggerEnable {
				target:t = "dialogue_MA_changed_to_MJ_p01"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_ma_to_mj_hint"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			wait {
				time:r = 2
			}
			triggerEnable {
				target:t = "takeoff_ma_changed_to_mj_skip"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_ma_to_mj_hint_continue"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
		}
		else_actions {

		}
	}
	takeoff_ma_changed_to_mj_skip {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			triggerDisable {
				target:t = "takeoff_ma_changed_to_mj_hint"
				target:t = "dialogue_MA_changed_to_MJ_p01"
				target:t = "dialogue_MA_changed_to_MJ_p02"
			}
			missionStopSpeech {

			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "takeoff_start_REAL"
			}
		}
		else_actions {

		}
	}
	takeoff_Thrustmaster_no_change_hint {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isThrustmasterHotas4:b = true
			}
			gameWhenControlWarning {

			}
			gameWhenDifficulty {
				difficulty:t = "simulator"
				is:t = "equal"
			}
		}
		actions {
			triggerDisable {
				target:t = "takeoff_start_MA"
				target:t = "takeoff_start_REAL"
				target:t = "takeoff_ma_changed_to_mj_hint"
				target:t = "takeoff_ma_changed_to_mj_skip"
			}
			triggerEnable {
				target:t = "takeoff_start_REAL"
			}
		}
		else_actions {

		}
	}
	takeoff_start_MA {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			gameWhenDifficulty {
				difficulty:t = "simulator"
				is:t = "notEqual"
			}
		}
		actions {
			triggerDisable {
				target:t = "takeoff_start_REAL"
				target:t = "takeoff_ma_changed_to_mj_hint"
				target:t = "takeoff_Thrustmaster_no_change_hint"
			}
			triggerEnable {
				target:t = "dialogue_takeoff_preparation_p01"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_howTo_takeoff"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			wait {
				time:r = 2
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_howTo_takeoff_continue"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "takeoff_throttle_max_MA"
				target:t = "takeoff_throttle_max_MA_Thrustmaster"
			}
		}
		else_actions {

		}
	}
	takeoff_start_REAL {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.1
			}
		}
		conditions {
			gameWhenDifficulty {
				difficulty:t = "simulator"
				is:t = "equal"
			}
		}
		actions {
			triggerDisable {
				target:t = "takeoff_start_MA"
				target:t = "takeoff_ma_changed_to_mj_hint"
				target:t = "takeoff_Thrustmaster_no_change_hint"
			}
			triggerEnable {
				target:t = "dialogue_takeoff_preparation_p01"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_howTo_takeoff"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			wait {
				time:r = 2
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_howTo_takeoff_continue"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "takeoff_toggle_engine_REAL"
				target:t = "takeoff_toggle_engine_REAL_pre_ps4"
				target:t = "takeoff_toggle_engine_REAL_Thrustmaster"
			}
		}
		else_actions {

		}
	}
	takeoff_toggle_engine_REAL {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isThrustmasterHotas4:b = false
			}
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
			playerWhenOptions {
				isGamepadPseudoMouseAim:b = false
			}
			playerWhenOptions {
				isGamepadClassicConsole:b = false
			}
		}
		actions {
			triggerDisable {
				target:t = "takeoff_throttle_max_MA"
				target:t = "takeoff_start_REAL"
				target:t = "dialogue_takeoff_preparation_p01"
				target:t = "takeoff_toggle_engine_REAL_ps4"
				target:t = "takeoff_toggle_engine_REAL_pre_ps4"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			wait {
				time:r = 0.5
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_TOGGLE_ENGINE"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
				control:t = "ID_ZOOM"
				control:t = "ID_ZOOM_TOGGLE"
				control:t = "AXIS_ZOOM"
				control:t = "ID_TOGGLE_VIEW"
				control:t = "ID_CAMERA_NEUTRAL"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_engine_start"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ID_TOGGLE_ENGINE"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "takeoff_engine_ready_REAL"
				target:t = "takeoff_deploy_flaps_REAL"
				target:t = "dialogue_takeoff_preparation_p02"
			}
		}
		else_actions {

		}
	}
	takeoff_toggle_engine_REAL_pre_ps4 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isGamepadPseudoMouseAim:b = true
			}
			playerWhenOptions {
				isGamepadClassicConsole:b = true
			}
		}
		actions {
			triggerDisable {
				target:t = "takeoff_toggle_engine_REAL"
			}
			triggerEnable {
				target:t = "takeoff_toggle_engine_REAL_ps4"
			}
		}
		else_actions {

		}
	}
	takeoff_toggle_engine_REAL_ps4 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isThrustmasterHotas4:b = false
			}
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			triggerDisable {
				target:t = "takeoff_throttle_max_MA"
				target:t = "takeoff_start_REAL"
				target:t = "dialogue_takeoff_preparation_p01"
				target:t = "takeoff_toggle_engine_REAL_Thrustmaster"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			wait {
				time:r = 0.5
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_TOGGLE_ENGINE"
				control:t = "AXIS_THROTTLE"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_TOGGLE_ENGINE"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
				control:t = "ID_ZOOM"
				control:t = "ID_ZOOM_TOGGLE"
				control:t = "AXIS_ZOOM"
				control:t = "ID_TOGGLE_VIEW"
				control:t = "ID_CAMERA_NEUTRAL"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_engine_start"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "throttle=max"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "takeoff_engine_ready_REAL"
				target:t = "takeoff_engine_ready_REAL_ps4"
				target:t = "dialogue_takeoff_preparation_p02"
				target:t = "takeoff_deploy_flaps_REAL"
				target:t = "takeoff_deploy_flaps_REAL_ps4"
			}
		}
		else_actions {

		}
	}
	takeoff_toggle_engine_REAL_Thrustmaster {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isThrustmasterHotas4:b = true
			}
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			triggerDisable {
				target:t = "takeoff_throttle_max_MA"
				target:t = "takeoff_start_REAL"
				target:t = "dialogue_takeoff_preparation_p01"
				target:t = "takeoff_toggle_engine_REAL_ps4"
				target:t = "takeoff_toggle_engine_REAL_pre_ps4"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			wait {
				time:r = 0.5
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_TOGGLE_ENGINE"
				control:t = "AXIS_THROTTLE"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_TOGGLE_ENGINE"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
				control:t = "ID_ZOOM"
				control:t = "ID_ZOOM_TOGGLE"
				control:t = "AXIS_ZOOM"
				control:t = "ID_TOGGLE_VIEW"
				control:t = "ID_CAMERA_NEUTRAL"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_engine_start"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "#ui/gameuiskin#tm_throttle_up"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "takeoff_engine_ready_REAL"
				target:t = "dialogue_takeoff_preparation_p02"
				target:t = "takeoff_deploy_flaps_REAL"
				target:t = "takeoff_engine_ready_REAL_Thrustmaster"
			}
		}
		else_actions {

		}
	}
	takeoff_deploy_flaps_REAL {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			gameWhenControlMode {
				controlmode:t = "fullreal"
				is:t = "equal"
			}
			playerShortcutPressed {
				control:t = "ID_TOGGLE_ENGINE"
			}
		}
		actions {
			triggerDisable {
				target:t = "takeoff_engine_ready_REAL"
				target:t = "dialogue_takeoff_preparation_p02"
				target:t = "dialogue_takeoff_preparation_p03"
				target:t = "takeoff_toggle_engine_REAL_ps4"
				target:t = "takeoff_deploy_flaps_REAL_ps4"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			playerControls {
				setStatus:t = "disable"
				control:t = "ID_TOGGLE_ENGINE"
			}
			missionStopSpeech {

			}
			wait {
				time:r = 0.5
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_FLAPS"
				control:t = "ID_FLAPS_DOWN"
				control:t = "ID_FLAPS_UP"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_deploy_flaps"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ID_FLAPS"
				item:t = "ID_FLAPS_DOWN"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "takeoff_flaps_deployed_REAL"
				target:t = "dialogue_takeoff_preparation_p04"
			}
		}
		else_actions {

		}
	}
	takeoff_deploy_flaps_REAL_ps4 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			gameWhenControlMode {
				controlmode:t = "fullreal"
				is:t = "equal"
			}
			playerAxisValueReached {
				value:r = 0.01
				func:t = "more"
				axis:t = "AXIS_THROTTLE"
			}
		}
		actions {
			triggerDisable {
				target:t = "takeoff_engine_ready_REAL"
				target:t = "dialogue_takeoff_preparation_p02"
				target:t = "dialogue_takeoff_preparation_p03"
				target:t = "takeoff_engine_ready_REAL_ps4"
				target:t = "takeoff_deploy_flaps_REAL"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			playerControls {
				setStatus:t = "disable"
				control:t = "ID_TOGGLE_ENGINE"
			}
			missionStopSpeech {

			}
			wait {
				time:r = 0.5
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_FLAPS"
				control:t = "ID_FLAPS_DOWN"
				control:t = "ID_FLAPS_UP"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_deploy_flaps"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ID_FLAPS"
				item:t = "ID_FLAPS_DOWN"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "takeoff_flaps_deployed_REAL"
				target:t = "dialogue_takeoff_preparation_p04"
			}
		}
		else_actions {

		}
	}
	takeoff_flaps_deployed_REAL {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_FLAPS"
			}
			playerShortcutPressed {
				control:t = "ID_FLAPS_DOWN"
			}
		}
		actions {
			triggerDisable {
				target:t = "dialogue_takeoff_preparation_p04"
				target:t = "takeoff_deploy_flaps_REAL"
			}
			missionStopSpeech {

			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerActivate {
				target:t = "takeoff_throttle_max_MA"
				activate_type:t = "ignoreConditions"
				check_trigger_status:b = false
				after_activation:t = "disable"
			}
		}
		else_actions {

		}
	}
	takeoff_engine_ready_REAL {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_TOGGLE_ENGINE"
			}
			gameWhenControlMode {
				controlmode:t = "fullreal"
				is:t = "notEqual"
			}
		}
		actions {
			triggerDisable {
				target:t = "takeoff_deploy_flaps_REAL"
				target:t = "takeoff_toggle_engine_REAL"
				target:t = "dialogue_takeoff_preparation_p02"
				target:t = "dialogue_takeoff_preparation_p03"
			}
			missionStopSpeech {

			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerActivate {
				target:t = "takeoff_throttle_max_MA"
				activate_type:t = "ignoreConditions"
				check_trigger_status:b = false
				after_activation:t = "disable"
			}
		}
		else_actions {

		}
	}
	takeoff_engine_ready_REAL_ps4 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerAxisValueReached {
				value:r = 0.01
				func:t = "more"
				axis:t = "AXIS_THROTTLE"
			}
			gameWhenControlMode {
				controlmode:t = "fullreal"
				is:t = "notEqual"
			}
		}
		actions {
			triggerDisable {
				target:t = "takeoff_deploy_flaps_REAL"
				target:t = "takeoff_toggle_engine_REAL"
				target:t = "dialogue_takeoff_preparation_p02"
				target:t = "dialogue_takeoff_preparation_p03"
				target:t = "takeoff_deploy_flaps_REAL_ps4"
			}
			missionStopSpeech {

			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerActivate {
				target:t = "takeoff_throttle_max_MA"
				activate_type:t = "ignoreConditions"
				check_trigger_status:b = false
				after_activation:t = "disable"
			}
		}
		else_actions {

		}
	}
	takeoff_engine_ready_REAL_Thrustmaster {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerAxisValueReached {
				value:r = 0.01
				func:t = "more"
				axis:t = "AXIS_THROTTLE"
			}
			gameWhenControlMode {
				controlmode:t = "fullreal"
				is:t = "notEqual"
			}
		}
		actions {
			triggerDisable {
				target:t = "takeoff_deploy_flaps_REAL"
				target:t = "takeoff_toggle_engine_REAL"
				target:t = "dialogue_takeoff_preparation_p02"
				target:t = "dialogue_takeoff_preparation_p03"
				target:t = "takeoff_deploy_flaps_REAL_ps4"
			}
			missionStopSpeech {

			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerActivate {
				target:t = "takeoff_throttle_max_MA_Thrustmaster"
				activate_type:t = "ignoreConditions"
				check_trigger_status:b = false
				after_activation:t = "disable"
			}
		}
		else_actions {

		}
	}
	takeoff_throttle_max_MA {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isThrustmasterHotas4:b = false
			}
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			triggerDisable {
				target:t = "takeoff_start_MA"
				target:t = "dialogue_takeoff_preparation_p01"
				target:t = "takeoff_throttle_max_MA_Thrustmaster"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			wait {
				time:r = 0.5
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "AXIS_THROTTLE"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_TOGGLE_ENGINE"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
				control:t = "ID_ZOOM"
				control:t = "ID_ZOOM_TOGGLE"
				control:t = "AXIS_ZOOM"
				control:t = "ID_TOGGLE_VIEW"
				control:t = "ID_CAMERA_NEUTRAL"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_takeoff_increase_throttle"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "throttle=max"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "takeoff_watch_speed_MA"
				target:t = "takeoff_rudder_REAL"
				target:t = "takeoff_rudder_HIST"
				target:t = "dialogue_takeoff_preparation_p05"
			}
		}
		else_actions {

		}
	}
	takeoff_throttle_max_MA_Thrustmaster {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isThrustmasterHotas4:b = true
			}
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			triggerDisable {
				target:t = "takeoff_start_MA"
				target:t = "dialogue_takeoff_preparation_p01"
				target:t = "takeoff_throttle_max_MA"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			wait {
				time:r = 0.5
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "AXIS_THROTTLE"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_TOGGLE_ENGINE"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
				control:t = "ID_ZOOM"
				control:t = "ID_ZOOM_TOGGLE"
				control:t = "AXIS_ZOOM"
				control:t = "ID_TOGGLE_VIEW"
				control:t = "ID_CAMERA_NEUTRAL"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_takeoff_increase_throttle"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "#ui/gameuiskin#tm_throttle_up"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "takeoff_watch_speed_MA"
				target:t = "takeoff_rudder_REAL_Thrustmaster"
				target:t = "takeoff_rudder_HIST_Thrustmaster"
				target:t = "dialogue_takeoff_preparation_p05"
			}
		}
		else_actions {

		}
	}
	takeoff_rudder_HIST {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerAxisValueReached {
				value:r = 0.5
				func:t = "more"
				axis:t = "AXIS_THROTTLE"
			}
			gameWhenDifficulty {
				difficulty:t = "simulator"
				is:t = "notEqual"
			}
			gameWhenControlMode {
				controlmode:t = "fullreal"
				is:t = "equal"
			}
		}
		actions {
			triggerDisable {
				target:t = "takeoff_watch_speed_MA"
				target:t = "takeoff_rudder_REAL"
				target:t = "dialogue_takeoff_preparation_p05"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			wait {
				time:r = 1
			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "AXIS_RUDDER"
				control:t = "AXIS_MOUSE_AIM_X"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_takeoff_rudder"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "rudder"
				item:t = "mouse_aim_x"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "takeoff_rudder_used_REAL"
				target:t = "dialogue_takeoff_preparation_FR_p08"
			}
		}
		else_actions {

		}
	}
	takeoff_rudder_HIST_Thrustmaster {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerAxisValueReached {
				value:r = 0.5
				func:t = "more"
				axis:t = "AXIS_THROTTLE"
			}
			gameWhenDifficulty {
				difficulty:t = "simulator"
				is:t = "notEqual"
			}
			gameWhenControlMode {
				controlmode:t = "fullreal"
				is:t = "equal"
			}
		}
		actions {
			triggerDisable {
				target:t = "takeoff_watch_speed_MA"
				target:t = "takeoff_rudder_REAL"
				target:t = "dialogue_takeoff_preparation_p05"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			wait {
				time:r = 3
			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "AXIS_RUDDER"
				control:t = "AXIS_MOUSE_AIM_X"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_takeoff_rudder"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "#ui/gameuiskin#tm_stick_rotate"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "takeoff_rudder_used_REAL"
				target:t = "dialogue_takeoff_preparation_FR_p08"
			}
		}
		else_actions {

		}
	}
	takeoff_rudder_REAL {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerAxisValueReached {
				value:r = 0.5
				func:t = "more"
				axis:t = "AXIS_THROTTLE"
			}
			gameWhenDifficulty {
				difficulty:t = "simulator"
				is:t = "equal"
			}
		}
		actions {
			triggerDisable {
				target:t = "takeoff_watch_speed_MA"
				target:t = "takeoff_rudder_HIST"
				target:t = "dialogue_takeoff_preparation_p05"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			wait {
				time:r = 1
			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "AXIS_RUDDER"
				control:t = "AXIS_MOUSE_AIM_X"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_takeoff_rudder"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "rudder"
				item:t = "mouse_aim_x"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "takeoff_rudder_used_REAL"
				target:t = "dialogue_takeoff_preparation_FR_p08"
			}
		}
		else_actions {

		}
	}
	takeoff_rudder_REAL_Thrustmaster {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerAxisValueReached {
				value:r = 0.5
				func:t = "more"
				axis:t = "AXIS_THROTTLE"
			}
			gameWhenDifficulty {
				difficulty:t = "simulator"
				is:t = "equal"
			}
		}
		actions {
			triggerDisable {
				target:t = "takeoff_watch_speed_MA"
				target:t = "takeoff_rudder_HIST"
				target:t = "dialogue_takeoff_preparation_p05"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			wait {
				time:r = 3
			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "AXIS_RUDDER"
				control:t = "AXIS_MOUSE_AIM_X"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_takeoff_rudder"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "#ui/gameuiskin#tm_stick_rotate"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "takeoff_rudder_used_REAL"
				target:t = "dialogue_takeoff_preparation_FR_p08"
			}
		}
		else_actions {

		}
	}
	takeoff_rudder_used_REAL {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerAxisValueReached {
				value:r = -0.1
				func:t = "less"
				axis:t = "AXIS_RUDDER"
			}
			playerAxisValueReached {
				value:r = 0.1
				func:t = "more"
				axis:t = "AXIS_RUDDER"
			}
			playerAxisValueReached {
				value:r = -0.1
				func:t = "less"
				axis:t = "AXIS_MOUSE_AIM_X"
			}
			playerAxisValueReached {
				value:r = 0.1
				func:t = "more"
				axis:t = "AXIS_MOUSE_AIM_X"
			}
		}
		actions {
			triggerDisable {
				target:t = "takeoff_rudder_REAL"
				target:t = "takeoff_rudder_HIST"
				target:t = "dialogue_takeoff_preparation_FR_p08"
				target:t = "dialogue_takeoff_preparation_FR_p09"
				target:t = "dialogue_takeoff_preparation_FR_p10"
			}
			missionStopSpeech {

			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = true
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "AXIS_ELEVATOR"
				control:t = "AXIS_MOUSE_AIM_Y"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
			}
			wait {
				time:r = 2
			}
			triggerEnable {
				target:t = "takeoff_watch_speed_REAL"
			}
		}
		else_actions {

		}
	}
	takeoff_watch_speed_REAL {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerDisable {
				target:t = "takeoff_rudder_REAL"
			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = true
			}
			wait {
				time:r = 1
			}
			triggerEnable {
				target:t = "takeoff_good_speed_MA"
				target:t = "takeoff_nosing_hint_REAL"
				target:t = "dialogue_takeoff_preparation_p06"
				target:t = "takeoff_nosing_hint_REAL_Thrustmaster"
				target:t = "takeoff_good_speed_MJ"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_takeoff_start"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			wait {
				time:r = 4
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_takeoff_start"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
		}
		else_actions {

		}
	}
	takeoff_watch_speed_MA {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerAxisValueReached {
				value:r = 0.99
				func:t = "more"
				axis:t = "AXIS_THROTTLE"
			}
			gameWhenDifficulty {
				difficulty:t = "simulator"
				is:t = "notEqual"
			}
			gameWhenControlMode {
				controlmode:t = "fullreal"
				is:t = "notEqual"
			}
		}
		actions {
			triggerDisable {
				target:t = "takeoff_rudder_REAL"
				target:t = "takeoff_rudder_HIST"
				target:t = "dialogue_takeoff_preparation_p05"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			wait {
				time:r = 1
			}
			triggerEnable {
				target:t = "takeoff_good_speed_MA"
				target:t = "dialogue_takeoff_preparation_p06"
				target:t = "takeoff_good_speed_MJ"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_takeoff_start"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			wait {
				time:r = 4
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_takeoff_start"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
		}
		else_actions {

		}
	}
	takeoff_nosing_hint_REAL {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isThrustmasterHotas4:b = false
			}
			playerWhenOrientation {
				value:r = 5
				orientation:t = "pitch"
				comparasion_func:t = "less"
			}
		}
		actions {
			triggerDisable {
				target:t = "takeoff_watch_speed_REAL"
				target:t = "mission_timer"
				target:t = "dialogue_intro_p01"
				target:t = "dialogue_intro_p02"
				target:t = "dialogue_MA_changed_to_MJ_p01"
				target:t = "dialogue_MA_changed_to_MJ_p02"
				target:t = "dialogue_takeoff_preparation_p01"
				target:t = "dialogue_takeoff_preparation_p02"
				target:t = "dialogue_takeoff_preparation_p03"
				target:t = "dialogue_takeoff_preparation_p04"
				target:t = "dialogue_takeoff_preparation_p05"
				target:t = "dialogue_takeoff_preparation_p06"
				target:t = "dialogue_takeoff_preparation_p07"
				target:t = "dialogue_takeoff_preparation_FR_p08"
				target:t = "dialogue_takeoff_preparation_FR_p09"
				target:t = "dialogue_takeoff_preparation_FR_p10"
				target:t = "dialogue_warning_FR_p01"
				target:t = "dialogue_warning_FR_p02"
				target:t = "takeoff_nosing_hint_REAL_Thrustmaster"
			}
			missionStopSpeech {

			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "AXIS_AILERONS"
				control:t = "AXIS_ELEVATOR"
				control:t = "AXIS_RUDDER"
				control:t = "AXIS_MOUSE_AIM_X"
				control:t = "AXIS_MOUSE_AIM_Y"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
			}
			wait {
				time:r = 0.5
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_nosing"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				needInvertCheck:b = true
				item:t = "elevator=max"
				item:t = "mouse_aim_y=max"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "takeoff_nosing_avoid_REAL"
				target:t = "dialogue_warning_FR_p01"
			}
		}
		else_actions {

		}
	}
	takeoff_nosing_hint_REAL_Thrustmaster {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isThrustmasterHotas4:b = true
			}
			playerWhenOrientation {
				value:r = 5
				orientation:t = "pitch"
				comparasion_func:t = "less"
			}
		}
		actions {
			triggerDisable {
				target:t = "takeoff_watch_speed_REAL"
				target:t = "mission_timer"
				target:t = "dialogue_intro_p01"
				target:t = "dialogue_intro_p02"
				target:t = "dialogue_MA_changed_to_MJ_p01"
				target:t = "dialogue_MA_changed_to_MJ_p02"
				target:t = "dialogue_takeoff_preparation_p01"
				target:t = "dialogue_takeoff_preparation_p02"
				target:t = "dialogue_takeoff_preparation_p03"
				target:t = "dialogue_takeoff_preparation_p04"
				target:t = "dialogue_takeoff_preparation_p05"
				target:t = "dialogue_takeoff_preparation_p06"
				target:t = "dialogue_takeoff_preparation_p07"
				target:t = "dialogue_takeoff_preparation_FR_p08"
				target:t = "dialogue_takeoff_preparation_FR_p09"
				target:t = "dialogue_takeoff_preparation_FR_p10"
				target:t = "dialogue_warning_FR_p01"
				target:t = "dialogue_warning_FR_p02"
				target:t = "takeoff_nosing_hint_REAL"
			}
			missionStopSpeech {

			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "AXIS_AILERONS"
				control:t = "AXIS_ELEVATOR"
				control:t = "AXIS_RUDDER"
				control:t = "AXIS_MOUSE_AIM_X"
				control:t = "AXIS_MOUSE_AIM_Y"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
			}
			wait {
				time:r = 0.5
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_nosing"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "#ui/gameuiskin#tm_stick_down"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "takeoff_nosing_avoid_REAL"
				target:t = "dialogue_warning_FR_p01"
			}
		}
		else_actions {

		}
	}
	takeoff_nosing_avoid_REAL {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerAxisValueReached {
				value:r = 0.2
				func:t = "more"
				axis:t = "AXIS_ELEVATOR"
			}
		}
		actions {
			triggerDisable {
				target:t = "dialogue_warning_FR_p01"
				target:t = "dialogue_warning_FR_p02"
				target:t = "takeoff_nosing_hint_REAL"
			}
			missionStopSpeech {

			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = true
			}
			wait {
				time:r = 0.5
			}
			triggerEnable {
				target:t = "takeoff_good_speed_MA"
				target:t = "mission_timer"
				target:t = "takeoff_good_speed_MJ"
			}
		}
		else_actions {

		}
	}
	takeoff_good_speed_MA {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isMouseJoy:b = false
			}
			unitWhenProperties {
				object:t = "player"
				func:t = "more"
				value:r = 150
				property:t = "speed"
				check_filter:t = "all"
				object_type:t = "isAlive"
				object_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
			}
		}
		actions {
			triggerDisable {
				target:t = "takeoff_watch_speed_MA"
				target:t = "takeoff_nosing_hint_REAL"
				target:t = "takeoff_nosing_avoid_REAL"
				target:t = "dialogue_takeoff_preparation_p06"
				target:t = "dialogue_takeoff_preparation_p07"
				target:t = "takeoff_good_speed_MJ"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			wait {
				time:r = 0.5
			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			triggerEnable {
				target:t = "dialogue_takeoff_p01"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_enough_speed"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			wait {
				time:r = 2
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_enough_speed_continue"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "takeoff_waypoint_MA_cond"
				target:t = "takeoff_elevator_up_HIST_REAL"
				target:t = "takeoff_elevator_up_HIST_REAL_Thrustmaster"
			}
		}
		else_actions {

		}
	}
	takeoff_good_speed_MJ {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isMouseJoy:b = true
			}
			unitWhenProperties {
				object:t = "player"
				func:t = "more"
				value:r = 150
				property:t = "speed"
				check_filter:t = "all"
				object_type:t = "isAlive"
				object_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
			}
		}
		actions {
			triggerDisable {
				target:t = "takeoff_watch_speed_MA"
				target:t = "takeoff_nosing_hint_REAL"
				target:t = "takeoff_nosing_avoid_REAL"
				target:t = "dialogue_takeoff_preparation_p06"
				target:t = "dialogue_takeoff_preparation_p07"
				target:t = "takeoff_good_speed_MA"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			wait {
				time:r = 0.5
			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			triggerEnable {
				target:t = "dialogue_takeoff_p01"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_enough_speed"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			wait {
				time:r = 2
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_enough_speed_continue"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "takeoff_elevator_up_MJ"
			}
		}
		else_actions {

		}
	}
	takeoff_elevator_up_MJ {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			triggerDisable {
				target:t = "takeoff_good_speed_MJ"
				target:t = "takeoff_waypoint_MA"
				target:t = "takeoff_waypoint_MA_cond"
				target:t = "takeoff_elevator_up_HIST_REAL_Thrustmaster"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionMarkAsWaypoint {
				visible:b = true
				primary:b = true
				oriented:b = false
				ignoreDifficulty:b = true
				scale:r = 0.2
				target:t = "waypoint00"
			}
			wait {
				time:r = 0.5
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "AXIS_AILERONS"
				control:t = "AXIS_ELEVATOR"
				control:t = "AXIS_RUDDER"
				control:t = "AXIS_MOUSE_AIM_X"
				control:t = "AXIS_MOUSE_AIM_Y"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_takeoff_elevator_up"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				needInvertCheck:b = true
				item:t = "elevator=max"
				item:t = "mouse_aim_y=max"
				shouldBlink:b = false
			}
			hudElementSelectionShade {
				element:t = "mouseJoy_top"
			}
			triggerEnable {
				target:t = "takeoff_waypoint_MJ"
			}
		}
		else_actions {

		}
	}
	takeoff_waypoint_MJ {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenCursorIn {
				cursor:t = "mouseJoy"
				element:t = "mouseJoy_top"
			}
		}
		actions {
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = true
			}
			wait {
				time:r = 0.5
			}
			hudElementSelectionShade {
				element:t = ""
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_waypoint"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "takeoff_retract_gear_HIST_REAL"
				target:t = "mission_timer"
			}
			wait {
				time:r = 3
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_waypoint"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
		}
		else_actions {

		}
	}
	takeoff_elevator_up_HIST_REAL {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isThrustmasterHotas4:b = false
			}
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
			playerWhenOptions {
				isGamepadPseudoMouseAim:b = false
			}
			playerWhenOptions {
				isMouseAim:b = false
			}
		}
		actions {
			triggerDisable {
				target:t = "takeoff_good_speed_MA"
				target:t = "takeoff_waypoint_MA"
				target:t = "takeoff_waypoint_MA_cond"
				target:t = "takeoff_elevator_up_HIST_REAL_Thrustmaster"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionMarkAsWaypoint {
				visible:b = true
				primary:b = true
				oriented:b = false
				ignoreDifficulty:b = true
				scale:r = 0.2
				target:t = "waypoint00"
			}
			wait {
				time:r = 0.5
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "AXIS_AILERONS"
				control:t = "AXIS_ELEVATOR"
				control:t = "AXIS_RUDDER"
				control:t = "AXIS_MOUSE_AIM_X"
				control:t = "AXIS_MOUSE_AIM_Y"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_takeoff_elevator_up"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				needInvertCheck:b = true
				item:t = "elevator=max"
				item:t = "mouse_aim_y=max"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "takeoff_waypoint_HIST_REAL"
			}
		}
		else_actions {

		}
	}
	takeoff_elevator_up_HIST_REAL_Thrustmaster {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isThrustmasterHotas4:b = true
			}
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
			playerWhenOptions {
				isGamepadPseudoMouseAim:b = false
			}
			playerWhenOptions {
				isMouseAim:b = false
			}
		}
		actions {
			triggerDisable {
				target:t = "takeoff_good_speed_MA"
				target:t = "takeoff_waypoint_MA"
				target:t = "takeoff_waypoint_MA_cond"
				target:t = "takeoff_elevator_up_HIST_REAL"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionMarkAsWaypoint {
				visible:b = true
				primary:b = true
				oriented:b = false
				ignoreDifficulty:b = true
				scale:r = 0.2
				target:t = "waypoint00"
			}
			wait {
				time:r = 0.5
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "AXIS_AILERONS"
				control:t = "AXIS_ELEVATOR"
				control:t = "AXIS_RUDDER"
				control:t = "AXIS_MOUSE_AIM_X"
				control:t = "AXIS_MOUSE_AIM_Y"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_takeoff_elevator_up"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "#ui/gameuiskin#tm_stick_down"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "takeoff_waypoint_HIST_REAL"
			}
		}
		else_actions {

		}
	}
	takeoff_waypoint_HIST_REAL {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerAxisValueReached {
				value:r = 0.1
				func:t = "more"
				axis:t = "AXIS_ELEVATOR"
			}
		}
		actions {
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = true
			}
			wait {
				time:r = 0.5
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_waypoint"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "takeoff_retract_gear_HIST_REAL"
				target:t = "mission_timer"
				target:t = "takeoff_retract_gear_HIST_REAL_Thrustmaster"
			}
			wait {
				time:r = 3
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_waypoint"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
		}
		else_actions {

		}
	}
	takeoff_retract_gear_HIST_REAL {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isThrustmasterHotas4:b = false
			}
			unitWhenStatus {
				object_type:t = "isInAir"
				object_marking:i = 0
				check_objects:t = "all"
				target_type:t = "isAlive"
				check_period:r = 1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				object:t = "player"
			}
		}
		actions {
			wait {
				time:r = 3
			}
			triggerDisable {
				target:t = "takeoff_waypoint_HIST_REAL"
				target:t = "mission_timer"
				target:t = "takeoff_retract_gear_HIST_REAL_Thrustmaster"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_GEAR"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			wait {
				time:r = 0.5
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_retract_gear"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ID_GEAR"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "takeoff_gear_retracted_HIST_REAL"
				target:t = "takeoff_retract_flaps_REAL"
			}
		}
		else_actions {

		}
	}
	takeoff_retract_gear_HIST_REAL_Thrustmaster {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isThrustmasterHotas4:b = true
			}
			unitWhenStatus {
				object_type:t = "isInAir"
				object_marking:i = 0
				check_objects:t = "all"
				target_type:t = "isAlive"
				check_period:r = 1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				object:t = "player"
			}
		}
		actions {
			wait {
				time:r = 3
			}
			triggerDisable {
				target:t = "takeoff_waypoint_HIST_REAL"
				target:t = "mission_timer"
				target:t = "takeoff_retract_gear_HIST_REAL"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_GEAR"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			wait {
				time:r = 0.5
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_retract_gear_thrustmaster"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "takeoff_gear_retracted_HIST_REAL"
				target:t = "takeoff_retract_flaps_REAL"
			}
		}
		else_actions {

		}
	}
	takeoff_gear_retracted_HIST_REAL {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_GEAR"
			}
			gameWhenControlMode {
				controlmode:t = "fullreal"
				is:t = "notEqual"
			}
		}
		actions {
			triggerDisable {
				target:t = "takeoff_retract_flaps_REAL"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = true
			}
			triggerEnable {
				target:t = "takeoff_completed_MA"
				target:t = "mission_timer"
			}
		}
		else_actions {

		}
	}
	takeoff_retract_flaps_REAL {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			gameWhenControlMode {
				controlmode:t = "fullreal"
				is:t = "equal"
			}
			playerShortcutPressed {
				control:t = "ID_GEAR"
			}
		}
		actions {
			triggerDisable {
				target:t = "takeoff_gear_retracted_HIST_REAL"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = true
			}
			wait {
				time:r = 2
			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_retract_flaps"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ID_FLAPS"
				item:t = "ID_FLAPS_UP"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "takeoff_flaps_up_REAL"
			}
		}
		else_actions {

		}
	}
	takeoff_flaps_up_REAL {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_FLAPS"
			}
			playerShortcutPressed {
				control:t = "ID_FLAPS_UP"
			}
		}
		actions {
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = true
			}
			triggerEnable {
				target:t = "takeoff_completed_MA"
			}
		}
		else_actions {

		}
	}
	takeoff_waypoint_MA_cond {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isMouseAim:b = true
			}
			playerWhenOptions {
				isGamepadPseudoMouseAim:b = true
			}
		}
		actions {
			triggerDisable {
				target:t = "takeoff_elevator_up_HIST_REAL"
			}
			triggerEnable {
				target:t = "takeoff_waypoint_MA"
			}
		}
		else_actions {

		}
	}
	takeoff_waypoint_MA {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			triggerDisable {
				target:t = "takeoff_good_speed_MA"
				target:t = "takeoff_elevator_up_HIST_REAL"
				target:t = "dialogue_takeoff_p01"
				target:t = "dialogue_takeoff_p02"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = true
			}
			missionMarkAsWaypoint {
				visible:b = true
				primary:b = true
				oriented:b = false
				ignoreDifficulty:b = true
				scale:r = 0.2
				target:t = "waypoint00"
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "AXIS_AILERONS"
				control:t = "AXIS_ELEVATOR"
				control:t = "AXIS_RUDDER"
				control:t = "AXIS_MOUSE_AIM_X"
				control:t = "AXIS_MOUSE_AIM_Y"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
			}
			wait {
				time:r = 0.5
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_waypoint"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "takeoff_completed_MA"
				target:t = "mission_timer"
				target:t = "dialogue_takeoff_p04"
			}
			wait {
				time:r = 3
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_waypoint"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
		}
		else_actions {

		}
	}
	takeoff_waypoint_flight_MA {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			triggerDisable {
				target:t = "takeoff_waypoint_MA"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "takeoff_completed_MA"
				target:t = "mission_timer"
			}
		}
		else_actions {

		}
	}
	takeoff_completed_MA {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			unitWhenInArea {
				math:t = "3D"
				object_type:t = "isAlive"
				object_marking:i = 0
				check_objects:t = "any"
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object:t = "player"
				target:t = "waypoint00"
				object_var_value:i = 0
			}
		}
		actions {
			triggerDisable {
				target:t = "initial"
				target:t = "takeoff_start_MA"
				target:t = "takeoff_start_REAL"
				target:t = "takeoff_toggle_engine_REAL"
				target:t = "takeoff_deploy_flaps_REAL"
				target:t = "takeoff_flaps_deployed_REAL"
				target:t = "takeoff_engine_ready_REAL"
				target:t = "takeoff_throttle_max_MA"
				target:t = "takeoff_rudder_REAL"
				target:t = "takeoff_rudder_used_REAL"
				target:t = "takeoff_watch_speed_REAL"
				target:t = "takeoff_watch_speed_MA"
				target:t = "takeoff_nosing_hint_REAL"
				target:t = "takeoff_nosing_avoid_REAL"
				target:t = "takeoff_good_speed_MA"
				target:t = "takeoff_elevator_up_HIST_REAL"
				target:t = "takeoff_waypoint_HIST_REAL"
				target:t = "takeoff_retract_gear_HIST_REAL"
				target:t = "takeoff_gear_retracted_HIST_REAL"
				target:t = "takeoff_retract_flaps_REAL"
				target:t = "takeoff_flaps_up_REAL"
				target:t = "takeoff_waypoint_MA"
				target:t = "takeoff_waypoint_flight_MA"
				target:t = "retry_takeoff_hint"
				target:t = "mission_timer"
				target:t = "takeoff_toggle_engine_REAL_pre_ps4"
				target:t = "takeoff_toggle_engine_REAL_ps4"
				target:t = "takeoff_engine_ready_REAL_ps4"
				target:t = "takeoff_deploy_flaps_REAL_ps4"
			}
			triggerDisable {
				target:t = "dialogue_intro_p01"
				target:t = "dialogue_intro_p02"
				target:t = "dialogue_MA_changed_to_MJ_p01"
				target:t = "dialogue_MA_changed_to_MJ_p02"
				target:t = "dialogue_takeoff_preparation_p01"
				target:t = "dialogue_takeoff_preparation_p02"
				target:t = "dialogue_takeoff_preparation_p03"
				target:t = "dialogue_takeoff_preparation_p04"
				target:t = "dialogue_takeoff_preparation_p05"
				target:t = "dialogue_takeoff_preparation_p06"
				target:t = "dialogue_takeoff_preparation_p07"
				target:t = "dialogue_takeoff_preparation_FR_p08"
				target:t = "dialogue_takeoff_preparation_FR_p09"
				target:t = "dialogue_takeoff_preparation_FR_p10"
				target:t = "dialogue_warning_FR_p01"
				target:t = "dialogue_warning_FR_p02"
				target:t = "dialogue_takeoff_p01"
				target:t = "dialogue_takeoff_p02"
				target:t = "dialogue_takeoff_p03"
				target:t = "dialogue_takeoff_p04"
				target:t = "dialogue_takeoff_completed_p01"
				target:t = "dialogue_takeoff_completed_p02"
				target:t = "dialogue_takeoff_completed_p03"
				target:t = "dialogue_takeoff_completed_p04"
				target:t = "dialogue_landing_preparation_p01"
				target:t = "dialogue_landing_preparation_p02"
				target:t = "dialogue_landing_preparation_p03"
				target:t = "dialogue_landing_preparation_p04"
				target:t = "dialogue_landing_preparation_p05"
				target:t = "dialogue_landing_preparation_p06"
				target:t = "dialogue_landing_preparation_p07"
				target:t = "dialogue_landing_preparation_MA_p07"
				target:t = "dialogue_landing_near_airfield_p01"
				target:t = "dialogue_landing_near_airfield_p02"
				target:t = "dialogue_landing_breaks_p01"
				target:t = "dialogue_landing_breaks_p02"
				target:t = "dialogue_landing_breaks_p03"
				target:t = "dialogue_landing_breaks_warning_p01"
				target:t = "dialogue_landing_breaks_warning_p02"
				target:t = "dialogue_landing_breaks_warning_FR_p01"
				target:t = "dialogue_landing_breaks_warning_FR_p02"
				target:t = "dialogue_landing_completed_p01"
				target:t = "dialogue_landing_completed_p02"
			}
			missionStopSpeech {

			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionMarkAsWaypoint {
				visible:b = false
				primary:b = true
				oriented:b = false
				ignoreDifficulty:b = true
				scale:r = 0.5
				target:t = "waypoint00"
			}
			moSetObjectiveStatus {
				target:t = "tutorialB_t&l_takeoff"
				status:i = 2
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
				object_marking:i = 0
			}
			bigQueryAddRecord {
				name:t = "tutorialB_takeoff_and_landing"
				params:t = "task 2/3: player took off"
				event:t = ""
			}
			wait {
				time:r = 1
			}
			triggerEnable {
				target:t = "landing_initial"
			}
		}
		else_actions {

		}
	}
	retry_takeoff_hint {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "timer"
				value:i = 30
				comparasion_func:t = "more"
			}
			unitWhenStatus {
				object_type:t = "isUseless"
				object_marking:i = 0
				check_objects:t = "all"
				target_type:t = "isAlive"
				check_period:r = 1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				object:t = "player"
			}
		}
		actions {
			triggerDisable {
				target:t = "initial"
				target:t = "initial_intro"
				target:t = "initial_intro_skip"
				target:t = "takeoff_ma_changed_to_mj_hint"
				target:t = "takeoff_ma_changed_to_mj_skip"
				target:t = "takeoff_start_MA"
				target:t = "takeoff_start_REAL"
				target:t = "takeoff_toggle_engine_REAL"
				target:t = "takeoff_toggle_engine_REAL_pre_ps4"
				target:t = "takeoff_toggle_engine_REAL_ps4"
				target:t = "takeoff_deploy_flaps_REAL"
				target:t = "takeoff_flaps_deployed_REAL"
				target:t = "takeoff_engine_ready_REAL"
				target:t = "takeoff_engine_ready_REAL_ps4"
				target:t = "takeoff_throttle_max_MA"
				target:t = "takeoff_rudder_HIST"
				target:t = "takeoff_rudder_REAL"
				target:t = "takeoff_rudder_used_REAL"
				target:t = "takeoff_watch_speed_REAL"
				target:t = "takeoff_watch_speed_MA"
				target:t = "takeoff_nosing_hint_REAL"
				target:t = "takeoff_nosing_avoid_REAL"
				target:t = "takeoff_good_speed_MA"
				target:t = "takeoff_elevator_up_HIST_REAL"
				target:t = "takeoff_waypoint_HIST_REAL"
				target:t = "takeoff_retract_gear_HIST_REAL"
				target:t = "takeoff_gear_retracted_HIST_REAL"
				target:t = "takeoff_retract_flaps_REAL"
				target:t = "takeoff_flaps_up_REAL"
				target:t = "takeoff_waypoint_MA_cond"
				target:t = "takeoff_waypoint_MA"
				target:t = "takeoff_waypoint_flight_MA"
				target:t = "takeoff_completed_MA"
				target:t = "mission_end"
				target:t = "mission_timer"
				target:t = "takeoff_toggle_engine_REAL_pre_ps4"
				target:t = "takeoff_toggle_engine_REAL_ps4"
				target:t = "takeoff_engine_ready_REAL_ps4"
				target:t = "takeoff_deploy_flaps_REAL_ps4"
			}
			triggerDisable {
				target:t = "dialogue_intro_p01"
				target:t = "dialogue_intro_p02"
				target:t = "dialogue_MA_changed_to_MJ_p01"
				target:t = "dialogue_MA_changed_to_MJ_p02"
				target:t = "dialogue_takeoff_preparation_p01"
				target:t = "dialogue_takeoff_preparation_p02"
				target:t = "dialogue_takeoff_preparation_p03"
				target:t = "dialogue_takeoff_preparation_p04"
				target:t = "dialogue_takeoff_preparation_p05"
				target:t = "dialogue_takeoff_preparation_p06"
				target:t = "dialogue_takeoff_preparation_p07"
				target:t = "dialogue_takeoff_preparation_FR_p08"
				target:t = "dialogue_takeoff_preparation_FR_p09"
				target:t = "dialogue_takeoff_preparation_FR_p10"
				target:t = "dialogue_warning_FR_p01"
				target:t = "dialogue_warning_FR_p02"
				target:t = "dialogue_takeoff_p01"
				target:t = "dialogue_takeoff_p02"
				target:t = "dialogue_takeoff_p03"
				target:t = "dialogue_takeoff_p04"
				target:t = "dialogue_takeoff_completed_p01"
				target:t = "dialogue_takeoff_completed_p02"
				target:t = "dialogue_takeoff_completed_p03"
				target:t = "dialogue_takeoff_completed_p04"
				target:t = "dialogue_landing_preparation_p01"
				target:t = "dialogue_landing_preparation_p02"
				target:t = "dialogue_landing_preparation_p03"
				target:t = "dialogue_landing_preparation_p04"
				target:t = "dialogue_landing_preparation_p05"
				target:t = "dialogue_landing_preparation_p06"
				target:t = "dialogue_landing_preparation_p07"
				target:t = "dialogue_landing_preparation_MA_p07"
				target:t = "dialogue_landing_near_airfield_p01"
				target:t = "dialogue_landing_near_airfield_p02"
				target:t = "dialogue_landing_breaks_p01"
				target:t = "dialogue_landing_breaks_p02"
				target:t = "dialogue_landing_breaks_p03"
				target:t = "dialogue_landing_breaks_warning_p01"
				target:t = "dialogue_landing_breaks_warning_p02"
				target:t = "dialogue_landing_breaks_warning_FR_p01"
				target:t = "dialogue_landing_breaks_warning_FR_p02"
				target:t = "dialogue_landing_completed_p01"
				target:t = "dialogue_landing_completed_p02"
				target:t = "dialogue_landing_breaks_FR_p02"
			}
			triggerDisable {
				target:t = "takeoff_toggle_engine_REAL_Thrustmaster"
				target:t = "takeoff_throttle_max_MA_Thrustmaster"
				target:t = "takeoff_rudder_HIST_Thrustmaster"
				target:t = "takeoff_rudder_REAL_Thrustmaster"
				target:t = "takeoff_nosing_hint_REAL_Thrustmaster"
				target:t = "takeoff_elevator_up_HIST_REAL_Thrustmaster"
				target:t = "takeoff_retract_gear_HIST_REAL_Thrustmaster"
				target:t = "landing_throttle_30_MA_Thrustmaster"
				target:t = "landing_first_waypoint_MA_Thrustmaster"
				target:t = "landing_gears_MA_Thrustmaster"
				target:t = "landing_level_plane_HIST_REAL_Thrustmaster"
				target:t = "landing_breaks_hint_MA_Thrustmaster"
				target:t = "landing_breaks_hint_HIST_REAL_Thrustmaster"
				target:t = "landing_nosing_hint_REAL_Thrustmaster"
				target:t = "landing_release_brakes_REAL_Thrustmaster"
			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			missionStopSpeech {

			}
			playerControls {
				setStatus:t = "disable"
				control:t = "ALL"
			}
			missionMarkAsWaypoint {
				visible:b = false
				primary:b = true
				oriented:b = false
				ignoreDifficulty:b = false
				scale:r = 1
				target:t = "waypoint00"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_retry"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			wait {
				time:r = 2
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_retry"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "initial"
			}
		}
		else_actions {

		}
	}
	landing_initial {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0
			}
		}
		conditions {

		}
		actions {
			triggerDisable {
				target:t = "initial"
				target:t = "initial_intro"
				target:t = "initial_intro_skip"
				target:t = "takeoff_ma_changed_to_mj_hint"
				target:t = "takeoff_ma_changed_to_mj_skip"
				target:t = "takeoff_start_MA"
				target:t = "takeoff_start_REAL"
				target:t = "takeoff_toggle_engine_REAL"
				target:t = "takeoff_toggle_engine_REAL_pre_ps4"
				target:t = "takeoff_toggle_engine_REAL_ps4"
				target:t = "takeoff_deploy_flaps_REAL"
				target:t = "takeoff_flaps_deployed_REAL"
				target:t = "takeoff_engine_ready_REAL"
				target:t = "takeoff_engine_ready_REAL_ps4"
				target:t = "takeoff_throttle_max_MA"
				target:t = "takeoff_rudder_HIST"
				target:t = "takeoff_rudder_REAL"
				target:t = "takeoff_rudder_used_REAL"
				target:t = "takeoff_watch_speed_REAL"
				target:t = "takeoff_watch_speed_MA"
				target:t = "takeoff_nosing_hint_REAL"
				target:t = "takeoff_nosing_avoid_REAL"
				target:t = "takeoff_good_speed_MA"
				target:t = "takeoff_elevator_up_HIST_REAL"
				target:t = "takeoff_waypoint_HIST_REAL"
				target:t = "takeoff_retract_gear_HIST_REAL"
				target:t = "takeoff_gear_retracted_HIST_REAL"
				target:t = "takeoff_retract_flaps_REAL"
				target:t = "takeoff_flaps_up_REAL"
				target:t = "takeoff_waypoint_MA_cond"
				target:t = "takeoff_waypoint_MA"
				target:t = "takeoff_waypoint_flight_MA"
				target:t = "takeoff_completed_MA"
				target:t = "retry_takeoff_hint"
				target:t = "mission_end"
				target:t = "mission_timer"
			}
			triggerDisable {
				target:t = "landing_about_airfields_hint_MA"
				target:t = "landing_start_MA"
				target:t = "landing_throttle_30_MA"
				target:t = "landing_first_waypoint_MA"
				target:t = "landing_throttle_30_set_MA"
				target:t = "landing_gears_MA"
				target:t = "landing_flaps_REAL"
				target:t = "landing_flaps_down_REAL"
				target:t = "landing_second_waypoint_MA"
				target:t = "landing_third_waypoint_MA"
				target:t = "landing_third_waypoint_HIST_REAL"
				target:t = "landing_level_plane_MA"
				target:t = "landing_level_plane_HIST_REAL"
				target:t = "landing_level_done_MA"
				target:t = "landing_level_done_HIST_REAL"
				target:t = "landing_low_enough_HIST_REAL"
				target:t = "landing_breaks_hint_MA"
				target:t = "landing_breaks_hint_MA_pre_ps4"
				target:t = "landing_breaks_hint_MA_ps4"
				target:t = "landing_breaks_hint_HIST_REAL"
				target:t = "landing_breaks_hint_HIST_REAL_pre_ps4"
				target:t = "landing_breaks_hint_HIST_REAL_ps4"
				target:t = "landing_breaks_activated_MA"
				target:t = "landing_nosing_hint_REAL"
				target:t = "landing_nosing_avoid_REAL"
				target:t = "landing_release_brakes_REAL"
				target:t = "landing_release_brakes_REAL_pre_ps4"
				target:t = "landing_release_brakes_REAL_ps4"
				target:t = "landing_breaks_released_REAL"
				target:t = "landing_release_brakes_MA"
				target:t = "landing_release_brakes_MA_pre_ps4"
				target:t = "landing_release_brakes_MA_ps4"
				target:t = "landing_breaks_released_MA"
				target:t = "landing_completed"
				target:t = "mission_end"
				target:t = "retry_landing_hint"
				target:t = "mission_timer"
			}
			triggerDisable {
				target:t = "dialogue_intro_p01"
				target:t = "dialogue_intro_p02"
				target:t = "dialogue_MA_changed_to_MJ_p01"
				target:t = "dialogue_MA_changed_to_MJ_p02"
				target:t = "dialogue_takeoff_preparation_p01"
				target:t = "dialogue_takeoff_preparation_p02"
				target:t = "dialogue_takeoff_preparation_p03"
				target:t = "dialogue_takeoff_preparation_p04"
				target:t = "dialogue_takeoff_preparation_p05"
				target:t = "dialogue_takeoff_preparation_p06"
				target:t = "dialogue_takeoff_preparation_p07"
				target:t = "dialogue_takeoff_preparation_FR_p08"
				target:t = "dialogue_takeoff_preparation_FR_p09"
				target:t = "dialogue_takeoff_preparation_FR_p10"
				target:t = "dialogue_warning_FR_p01"
				target:t = "dialogue_warning_FR_p02"
				target:t = "dialogue_takeoff_p01"
				target:t = "dialogue_takeoff_p02"
				target:t = "dialogue_takeoff_p03"
				target:t = "dialogue_takeoff_p04"
				target:t = "dialogue_takeoff_completed_p01"
				target:t = "dialogue_takeoff_completed_p02"
				target:t = "dialogue_takeoff_completed_p03"
				target:t = "dialogue_takeoff_completed_p04"
				target:t = "dialogue_landing_preparation_p01"
				target:t = "dialogue_landing_preparation_p02"
				target:t = "dialogue_landing_preparation_p03"
				target:t = "dialogue_landing_preparation_p04"
				target:t = "dialogue_landing_preparation_p05"
				target:t = "dialogue_landing_preparation_p06"
				target:t = "dialogue_landing_preparation_p07"
				target:t = "dialogue_landing_preparation_MA_p07"
				target:t = "dialogue_landing_near_airfield_p01"
				target:t = "dialogue_landing_near_airfield_p02"
				target:t = "dialogue_landing_breaks_p01"
				target:t = "dialogue_landing_breaks_p02"
				target:t = "dialogue_landing_breaks_p03"
				target:t = "dialogue_landing_breaks_warning_p01"
				target:t = "dialogue_landing_breaks_warning_p02"
				target:t = "dialogue_landing_breaks_warning_FR_p01"
				target:t = "dialogue_landing_breaks_warning_FR_p02"
				target:t = "dialogue_landing_completed_p01"
				target:t = "dialogue_landing_completed_p02"
				target:t = "dialogue_landing_breaks_FR_p02"
			}
			triggerDisable {
				target:t = "takeoff_toggle_engine_REAL_Thrustmaster"
				target:t = "takeoff_throttle_max_MA_Thrustmaster"
				target:t = "takeoff_rudder_HIST_Thrustmaster"
				target:t = "takeoff_rudder_REAL_Thrustmaster"
				target:t = "takeoff_nosing_hint_REAL_Thrustmaster"
				target:t = "takeoff_elevator_up_HIST_REAL_Thrustmaster"
				target:t = "takeoff_retract_gear_HIST_REAL_Thrustmaster"
				target:t = "landing_throttle_30_MA_Thrustmaster"
				target:t = "landing_first_waypoint_MA_Thrustmaster"
				target:t = "landing_gears_MA_Thrustmaster"
				target:t = "landing_level_plane_HIST_REAL_Thrustmaster"
				target:t = "landing_breaks_hint_MA_Thrustmaster"
				target:t = "landing_breaks_hint_HIST_REAL_Thrustmaster"
				target:t = "landing_nosing_hint_REAL_Thrustmaster"
				target:t = "landing_release_brakes_REAL_Thrustmaster"
			}
			missionStopSpeech {

			}
			playerControls {
				setStatus:t = "disable"
				control:t = "ALL"
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_FLIGHTMENU"
				control:t = "ID_FLIGHTMENU_SETUP"
				control:t = "ID_CONTINUE"
				control:t = "ID_CONTINUE_SETUP"
				control:t = "ID_TOGGLE_VIEW"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
			}
			missionSetFade {
				mode:t = "fadeOut"
				color:p3 = 0, 0, 0
				time:r = 0.1
			}
			missionDisableRadiochat {
				doDisable:b = true
			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			addAirfield {
				runwayStart:t = "airfield00"
				runwayEnd:t = "airfield01"
				runwayWidth:r = 60
				army:i = 1
				spawnPoint:t = "spawnpoint00"
				visibleOnHud:b = true
			}
			wait {
				time:r = 0.8
			}
			unitRestore {
				ressurectIfDead:b = true
				fullRestore:b = true
				target_marking:i = 0
				target:t = "player"
				ammoRestore:b = true
			}
			missionKillEffects {
				area:t = "big_area"
			}
			wait {
				time:r = 0.2
			}
			unitMoveTo {
				target:t = "player_respawn01"
				follow_target:b = false
				teleportHeightType:t = "target"
				useUnitHeightForTele:b = false
				shouldKeepFormation:b = false
				teleportHeightValue:r = 0
				horizontalDirectionForTeleport:b = true
				waypointReachedDist:r = 10
				recalculatePathDist:r = -1
				object_marking:i = 0
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				fastClimb:b = false
				destTimeMode:b = false
				target_var_name:t = ""
				target_var_comp_op:t = "equal"
				target_var_value:i = 0
				object:t = "player"
				move_type:t = "teleport"
				speed:r = 250
				lookat:t = "airfield00"
				velocity:r = 250
			}
			unitSetControls {
				controls:t = "gears"
				value:r = 0
				force:b = true
				objects:t = "player"
			}
			unitSetControls {
				controls:t = "power"
				value:r = 1
				force:b = true
				objects:t = "player"
			}
			missionSetFade {
				mode:t = "fadeIn"
				color:p3 = 0, 0, 0
				time:r = 0.6
			}
			wait {
				time:r = 0.7
			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			triggerEnable {
				target:t = "retry_landing_hint"
				target:t = "landing_about_airfields_hint_MA"
			}
		}
		else_actions {

		}
	}
	landing_about_airfields_hint_MA {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			triggerEnable {
				target:t = "dialogue_landing_preparation_p01"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_about_airfields"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 100
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			wait {
				time:r = 2
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_about_airfields_continue"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 100
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "landing_start_MA"
			}
		}
		else_actions {

		}
	}
	landing_start_MA {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			triggerDisable {
				target:t = "landing_about_airfields_hint_MA"
				target:t = "dialogue_landing_preparation_p01"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_about_airfields"
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			wait {
				time:r = 0.5
			}
			triggerEnable {
				target:t = "dialogue_landing_preparation_p02"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_howTo_land"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			wait {
				time:r = 2
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_howTo_land_continue"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "landing_throttle_30_MA"
				target:t = "landing_throttle_30_MA_Thrustmaster"
			}
		}
		else_actions {

		}
	}
	landing_throttle_30_MA {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isThrustmasterHotas4:b = false
			}
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			triggerDisable {
				target:t = "landing_start_MA"
				target:t = "dialogue_landing_preparation_p02"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			wait {
				time:r = 0.5
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_land_decrease_throttle"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "throttle=min"
				shouldBlink:b = false
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "AXIS_AILERONS"
				control:t = "AXIS_ELEVATOR"
				control:t = "AXIS_RUDDER"
				control:t = "AXIS_THROTTLE"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
				control:t = "AXIS_MOUSE_AIM_X"
				control:t = "AXIS_MOUSE_AIM_Y"
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_TOGGLE_ENGINE"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
				control:t = "ID_ZOOM"
				control:t = "ID_ZOOM_TOGGLE"
				control:t = "AXIS_ZOOM"
				control:t = "ID_TOGGLE_VIEW"
				control:t = "ID_CAMERA_NEUTRAL"
			}
			triggerEnable {
				target:t = "landing_first_waypoint_MA"
				target:t = "dialogue_landing_preparation_p04"
			}
		}
		else_actions {

		}
	}
	landing_throttle_30_MA_Thrustmaster {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isThrustmasterHotas4:b = true
			}
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			triggerDisable {
				target:t = "landing_start_MA"
				target:t = "dialogue_landing_preparation_p02"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			wait {
				time:r = 0.5
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_land_decrease_throttle"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "#ui/gameuiskin#tm_throttle_down"
				shouldBlink:b = false
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "AXIS_AILERONS"
				control:t = "AXIS_ELEVATOR"
				control:t = "AXIS_RUDDER"
				control:t = "AXIS_THROTTLE"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
				control:t = "AXIS_MOUSE_AIM_X"
				control:t = "AXIS_MOUSE_AIM_Y"
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_TOGGLE_ENGINE"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
				control:t = "ID_ZOOM"
				control:t = "ID_ZOOM_TOGGLE"
				control:t = "AXIS_ZOOM"
				control:t = "ID_TOGGLE_VIEW"
				control:t = "ID_CAMERA_NEUTRAL"
			}
			triggerEnable {
				target:t = "landing_first_waypoint_MA_Thrustmaster"
				target:t = "dialogue_landing_preparation_p04"
			}
		}
		else_actions {

		}
	}
	landing_first_waypoint_MA {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerAxisValueReached {
				value:r = 1
				func:t = "less"
				axis:t = "AXIS_THROTTLE"
			}
		}
		actions {
			triggerDisable {
				target:t = "dialogue_landing_preparation_p04"
			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = true
			}
			missionStopSpeech {

			}
			wait {
				time:r = 0.5
			}
			missionMarkAsWaypoint {
				visible:b = true
				primary:b = true
				oriented:b = false
				ignoreDifficulty:b = true
				scale:r = 0.2
				target:t = "landing_waypoint00"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_land_decrease_throttle_waypoint"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "throttle=min"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "landing_throttle_30_set_MA"
				target:t = "landing_gears_MA"
				target:t = "mission_timer"
			}
			wait {
				time:r = 0.5
			}
			moAddMissionObjective {
				target:t = "tutorialB_t&l_landing"
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
			}
		}
		else_actions {

		}
	}
	landing_first_waypoint_MA_Thrustmaster {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerAxisValueReached {
				value:r = 1
				func:t = "less"
				axis:t = "AXIS_THROTTLE"
			}
		}
		actions {
			triggerDisable {
				target:t = "dialogue_landing_preparation_p04"
			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = true
			}
			missionStopSpeech {

			}
			wait {
				time:r = 0.5
			}
			missionMarkAsWaypoint {
				visible:b = true
				primary:b = true
				oriented:b = false
				ignoreDifficulty:b = true
				scale:r = 0.2
				target:t = "landing_waypoint00"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_land_decrease_throttle_waypoint"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "#ui/gameuiskin#tm_throttle_down"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "landing_throttle_30_set_MA"
				target:t = "landing_gears_MA_Thrustmaster"
				target:t = "mission_timer"
			}
			wait {
				time:r = 0.5
			}
			moAddMissionObjective {
				target:t = "tutorialB_t&l_landing"
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
			}
		}
		else_actions {

		}
	}
	landing_throttle_30_set_MA {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerAxisValueReached {
				value:r = 0.51
				func:t = "less"
				axis:t = "AXIS_THROTTLE"
			}
		}
		actions {
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_land_decrease_throttle_waypoint"
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "throttle=min"
				shouldBlink:b = false
			}
		}
		else_actions {

		}
	}
	landing_gears_MA {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			unitWhenInArea {
				math:t = "3D"
				object_type:t = "isAlive"
				object_marking:i = 0
				check_objects:t = "any"
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object:t = "player"
				target:t = "landing_waypoint00"
				object_var_value:i = 0
			}
		}
		actions {
			triggerDisable {
				target:t = "mission_timer"
				target:t = "landing_throttle_30_set_MA"
				target:t = "dialogue_landing_preparation_p03"
				target:t = "dialogue_takeoff_preparation_p04"
				target:t = "landing_gears_MA_Thrustmaster"
			}
			missionStopSpeech {

			}
			missionMarkAsWaypoint {
				visible:b = false
				primary:b = true
				oriented:b = false
				ignoreDifficulty:b = false
				scale:r = 1
				target:t = "landing_waypoint00"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_land_gears"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ID_GEAR"
				shouldBlink:b = false
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_GEAR"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
			}
			triggerEnable {
				target:t = "landing_second_waypoint_MA"
				target:t = "landing_flaps_REAL"
				target:t = "dialogue_landing_preparation_p05"
			}
		}
		else_actions {

		}
	}
	landing_gears_MA_Thrustmaster {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			unitWhenInArea {
				math:t = "3D"
				object_type:t = "isAlive"
				object_marking:i = 0
				check_objects:t = "any"
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object:t = "player"
				target:t = "landing_waypoint00"
				object_var_value:i = 0
			}
		}
		actions {
			triggerDisable {
				target:t = "mission_timer"
				target:t = "landing_throttle_30_set_MA"
				target:t = "dialogue_landing_preparation_p03"
				target:t = "dialogue_takeoff_preparation_p04"
				target:t = "landing_gears_MA"
			}
			missionStopSpeech {

			}
			missionMarkAsWaypoint {
				visible:b = false
				primary:b = true
				oriented:b = false
				ignoreDifficulty:b = false
				scale:r = 1
				target:t = "landing_waypoint00"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_land_gears_thrustmaster"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_GEAR"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
			}
			triggerEnable {
				target:t = "landing_second_waypoint_MA"
				target:t = "landing_flaps_REAL"
				target:t = "dialogue_landing_preparation_p05"
			}
		}
		else_actions {

		}
	}
	landing_flaps_REAL {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_GEAR"
			}
			gameWhenControlMode {
				controlmode:t = "fullreal"
				is:t = "equal"
			}
		}
		actions {
			triggerDisable {
				target:t = "landing_second_waypoint_MA"
				target:t = "dialogue_landing_preparation_p05"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_land_gears"
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ID_GEAR"
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_waypoint"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = true
			}
			missionMarkAsWaypoint {
				visible:b = true
				primary:b = true
				oriented:b = false
				ignoreDifficulty:b = true
				scale:r = 0.2
				target:t = "landing_waypoint01"
			}
			wait {
				time:r = 2
			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_FLAPS"
				control:t = "ID_FLAPS_DOWN"
				control:t = "ID_FLAPS_UP"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_land_flaps"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ID_FLAPS"
				item:t = "ID_FLAPS_DOWN"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "landing_flaps_down_REAL"
				target:t = "dialogue_landing_preparation_p06"
			}
		}
		else_actions {

		}
	}
	landing_flaps_down_REAL {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_FLAPS"
			}
			playerShortcutPressed {
				control:t = "ID_FLAPS_DOWN"
			}
		}
		actions {
			triggerDisable {
				target:t = "dialogue_landing_preparation_p06"
			}
			missionStopSpeech {

			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = true
			}
			triggerEnable {
				target:t = "landing_third_waypoint_HIST_REAL"
				target:t = "mission_timer"
				target:t = "landing_third_waypoint_MJ"
			}
		}
		else_actions {

		}
	}
	landing_second_waypoint_MA {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_GEAR"
			}
			gameWhenControlMode {
				controlmode:t = "fullreal"
				is:t = "notEqual"
			}
		}
		actions {
			triggerDisable {
				target:t = "landing_flaps_REAL"
				target:t = "dialogue_landing_preparation_p05"
				target:t = "dialogue_landing_preparation_p06"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_land_gears"
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ID_GEAR"
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = true
			}
			wait {
				time:r = 0.5
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_waypoint"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionMarkAsWaypoint {
				visible:b = true
				primary:b = true
				oriented:b = false
				ignoreDifficulty:b = true
				scale:r = 0.2
				target:t = "landing_waypoint01"
			}
			triggerEnable {
				target:t = "landing_third_waypoint_MA"
				target:t = "mission_timer"
				target:t = "landing_third_waypoint_HIST_REAL"
				target:t = "landing_third_waypoint_MJ"
			}
			wait {
				time:r = 3
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_waypoint"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
		}
		else_actions {

		}
	}
	landing_third_waypoint_MA {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			unitWhenInArea {
				math:t = "3D"
				object_type:t = "isAlive"
				object_marking:i = 0
				check_objects:t = "any"
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object:t = "player"
				target:t = "landing_waypoint01"
				object_var_value:i = 0
			}
			gameWhenControlMode {
				controlmode:t = "mouseaim"
				is:t = "equal"
			}
		}
		actions {
			triggerDisable {
				target:t = "landing_third_waypoint_HIST_REAL"
				target:t = "dialogue_landing_preparation_p05"
				target:t = "dialogue_landing_preparation_p06"
				target:t = "landing_third_waypoint_MJ"
			}
			missionMarkAsWaypoint {
				visible:b = false
				primary:b = true
				oriented:b = false
				ignoreDifficulty:b = false
				scale:r = 1
				target:t = "landing_waypoint01"
			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			missionStopSpeech {

			}
			wait {
				time:r = 0.5
			}
			missionMarkAsWaypoint {
				visible:b = true
				primary:b = true
				oriented:b = false
				ignoreDifficulty:b = true
				scale:r = 0.2
				target:t = "landing_waypoint02"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_pre_landing_MA"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "landing_level_plane_MA"
				target:t = "dialogue_landing_preparation_MA_p07"
			}
			wait {
				time:r = 3
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_pre_landing_MA"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
		}
		else_actions {

		}
	}
	landing_third_waypoint_MJ {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			unitWhenInArea {
				math:t = "3D"
				object_type:t = "isAlive"
				object_marking:i = 0
				check_objects:t = "any"
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object:t = "player"
				target:t = "landing_waypoint01"
				object_var_value:i = 0
			}
			playerWhenOptions {
				isMouseJoy:b = true
			}
		}
		actions {
			triggerDisable {
				target:t = "landing_third_waypoint_MA"
				target:t = "dialogue_landing_preparation_p05"
				target:t = "dialogue_landing_preparation_p06"
				target:t = "landing_third_waypoint_HIST_REAL"
			}
			missionMarkAsWaypoint {
				visible:b = false
				primary:b = true
				oriented:b = false
				ignoreDifficulty:b = false
				scale:r = 1
				target:t = "landing_waypoint01"
			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			missionStopSpeech {

			}
			wait {
				time:r = 0.5
			}
			missionMarkAsWaypoint {
				visible:b = true
				primary:b = true
				oriented:b = false
				ignoreDifficulty:b = true
				scale:r = 0.2
				target:t = "landing_waypoint02"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_pre_landing"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "landing_level_plane_MJ"
			}
			wait {
				time:r = 3
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_pre_landing"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
		}
		else_actions {

		}
	}
	landing_third_waypoint_HIST_REAL {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			unitWhenInArea {
				math:t = "3D"
				object_type:t = "isAlive"
				object_marking:i = 0
				check_objects:t = "any"
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object:t = "player"
				target:t = "landing_waypoint01"
				object_var_value:i = 0
			}
			gameWhenControlMode {
				controlmode:t = "mouseaim"
				is:t = "notEqual"
			}
			playerWhenOptions {
				isMouseJoy:b = false
			}
		}
		actions {
			triggerDisable {
				target:t = "landing_third_waypoint_MA"
				target:t = "dialogue_landing_preparation_p05"
				target:t = "dialogue_landing_preparation_p06"
				target:t = "landing_third_waypoint_MJ"
			}
			missionMarkAsWaypoint {
				visible:b = false
				primary:b = true
				oriented:b = false
				ignoreDifficulty:b = false
				scale:r = 1
				target:t = "landing_waypoint01"
			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			missionStopSpeech {

			}
			wait {
				time:r = 0.5
			}
			missionMarkAsWaypoint {
				visible:b = true
				primary:b = true
				oriented:b = false
				ignoreDifficulty:b = true
				scale:r = 0.2
				target:t = "landing_waypoint02"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_pre_landing"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "landing_level_plane_HIST_REAL"
				target:t = "dialogue_landing_preparation_p07"
				target:t = "landing_level_plane_HIST_REAL_Thrustmaster"
			}
			wait {
				time:r = 3
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_pre_landing"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
		}
		else_actions {

		}
	}
	landing_level_plane_MA {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			unitWhenInArea {
				math:t = "3D"
				object_type:t = "isAlive"
				object_marking:i = 0
				check_objects:t = "any"
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object:t = "player"
				target:t = "landing_waypoint02"
				object_var_value:i = 0
			}
		}
		actions {
			triggerDisable {
				target:t = "mission_timer"
				target:t = "dialogue_landing_preparation_p07"
				target:t = "dialogue_landing_preparation_MA_p07"
			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			missionStopSpeech {

			}
			missionMarkAsWaypoint {
				visible:b = false
				primary:b = true
				oriented:b = false
				ignoreDifficulty:b = true
				scale:r = 0.2
				target:t = "landing_waypoint02"
			}
			triggerEnable {
				target:t = "landing_level_done_MA"
			}
		}
		else_actions {

		}
	}
	landing_level_plane_MJ {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			unitWhenInArea {
				math:t = "3D"
				object_type:t = "isAlive"
				object_marking:i = 0
				check_objects:t = "any"
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object:t = "player"
				target:t = "landing_waypoint02"
				object_var_value:i = 0
			}
		}
		actions {
			triggerDisable {
				target:t = "mission_timer"
				target:t = "dialogue_landing_preparation_p07"
				target:t = "dialogue_landing_preparation_MA_p07"
			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			missionStopSpeech {

			}
			hudElementSelectionShade {
				element:t = "mouseJoy_top"
			}
			missionMarkAsWaypoint {
				visible:b = false
				primary:b = true
				oriented:b = false
				ignoreDifficulty:b = true
				scale:r = 0.2
				target:t = "landing_waypoint02"
			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_landing_start"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				needInvertCheck:b = true
				item:t = "elevator=max"
				item:t = "mouse_aim_y=max"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "landing_level_done_MJ"
				target:t = "dialogue_landing_near_airfield_p01"
			}
		}
		else_actions {

		}
	}
	landing_level_plane_HIST_REAL {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isThrustmasterHotas4:b = false
			}
			unitWhenInArea {
				math:t = "3D"
				object_type:t = "isAlive"
				object_marking:i = 0
				check_objects:t = "any"
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object:t = "player"
				target:t = "landing_waypoint02"
				object_var_value:i = 0
			}
		}
		actions {
			triggerDisable {
				target:t = "mission_timer"
				target:t = "dialogue_landing_preparation_p07"
				target:t = "dialogue_landing_preparation_MA_p07"
				target:t = "landing_level_plane_HIST_REAL_Thrustmaster"
			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			missionStopSpeech {

			}
			missionMarkAsWaypoint {
				visible:b = false
				primary:b = true
				oriented:b = false
				ignoreDifficulty:b = true
				scale:r = 0.2
				target:t = "landing_waypoint02"
			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_landing_start"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				needInvertCheck:b = true
				item:t = "elevator=max"
				item:t = "mouse_aim_y=max"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "landing_level_done_HIST_REAL"
				target:t = "dialogue_landing_near_airfield_p01"
			}
		}
		else_actions {

		}
	}
	landing_level_plane_HIST_REAL_Thrustmaster {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isThrustmasterHotas4:b = true
			}
			unitWhenInArea {
				math:t = "3D"
				object_type:t = "isAlive"
				object_marking:i = 0
				check_objects:t = "any"
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object:t = "player"
				target:t = "landing_waypoint02"
				object_var_value:i = 0
			}
		}
		actions {
			triggerDisable {
				target:t = "mission_timer"
				target:t = "dialogue_landing_preparation_p07"
				target:t = "dialogue_landing_preparation_MA_p07"
				target:t = "landing_level_plane_HIST_REAL"
			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			missionStopSpeech {

			}
			missionMarkAsWaypoint {
				visible:b = false
				primary:b = true
				oriented:b = false
				ignoreDifficulty:b = true
				scale:r = 0.2
				target:t = "landing_waypoint02"
			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_landing_start"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "#ui/gameuiskin#tm_stick_down"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "landing_level_done_HIST_REAL"
				target:t = "dialogue_landing_near_airfield_p01"
			}
		}
		else_actions {

		}
	}
	landing_level_done_MA {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			unitWhenStatus {
				object_type:t = "isOnGround"
				object_marking:i = 0
				check_objects:t = "any"
				target_type:t = "isAlive"
				check_period:r = 1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				object:t = "player"
			}
		}
		actions {
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_landing_throttle_zero"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "throttle=min"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "landing_breaks_hint_MA"
				target:t = "dialogue_landing_breaks_p01"
				target:t = "landing_breaks_hint_MA_pre_ps4"
				target:t = "landing_breaks_hint_MA_Thrustmaster"
			}
		}
		else_actions {

		}
	}
	landing_level_done_MJ {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenCursorIn {
				cursor:t = "mouseJoy"
				element:t = "mouseJoy_top"
			}
		}
		actions {
			triggerDisable {
				target:t = "dialogue_landing_near_airfield_p01"
				target:t = "dialogue_landing_near_airfield_p02"
			}
			missionStopSpeech {

			}
			wait {
				time:r = 0.5
			}
			hudElementSelectionShade {
				element:t = ""
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_landing_start"
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = true
			}
			triggerEnable {
				target:t = "landing_low_enough_HIST_REAL"
			}
		}
		else_actions {

		}
	}
	landing_level_done_HIST_REAL {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerAxisValueReached {
				value:r = 0.3
				func:t = "more"
				axis:t = "AXIS_ELEVATOR"
			}
		}
		actions {
			triggerDisable {
				target:t = "dialogue_landing_near_airfield_p01"
				target:t = "dialogue_landing_near_airfield_p02"
			}
			missionStopSpeech {

			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_landing_start"
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = true
			}
			triggerEnable {
				target:t = "landing_low_enough_HIST_REAL"
			}
		}
		else_actions {

		}
	}
	landing_low_enough_HIST_REAL {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			unitWhenReachHeight {
				object_type:t = "isAlive"
				object_marking:i = 0
				check_objects:t = "all"
				value:r = 2
				comparasion_func:t = "less"
				absolute_value:b = false
				object:t = "player"
			}
		}
		actions {
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_landing_throttle_zero"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "throttle=min"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "landing_breaks_hint_HIST_REAL"
				target:t = "dialogue_landing_breaks_p01"
				target:t = "landing_breaks_hint_HIST_REAL_pre_ps4"
				target:t = "landing_breaks_hint_HIST_REAL_Thrustmaster"
			}
		}
		else_actions {

		}
	}
	landing_breaks_hint_MA {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isThrustmasterHotas4:b = false
			}
			playerAxisValueReached {
				value:r = 0.01
				func:t = "less"
				axis:t = "AXIS_THROTTLE"
			}
			playerWhenOptions {
				isGamepadPseudoMouseAim:b = false
			}
			playerWhenOptions {
				isGamepadClassicConsole:b = false
			}
		}
		actions {
			triggerDisable {
				target:t = "mission_timer"
				target:t = "landing_breaks_hint_HIST_REAL"
				target:t = "dialogue_landing_breaks_p01"
				target:t = "landing_breaks_hint_MA_pre_ps4"
				target:t = "landing_breaks_hint_MA_Thrustmaster"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_landing_throttle_zero"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "throttle=min"
				shouldBlink:b = false
			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			missionStopSpeech {

			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = true
			}
			wait {
				time:r = 4
			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_WHEEL_BRAKE"
				control:t = "AXIS_BRAKE_LEFT"
				control:t = "AXIS_BRAKE_RIGHT"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_landing_breaks"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "throttle=min_hold"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "landing_breaks_activated_MA"
				target:t = "dialogue_landing_breaks_p02"
			}
		}
		else_actions {

		}
	}
	landing_breaks_hint_MA_Thrustmaster {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isThrustmasterHotas4:b = true
			}
			playerAxisValueReached {
				value:r = 0.01
				func:t = "less"
				axis:t = "AXIS_THROTTLE"
			}
		}
		actions {
			triggerDisable {
				target:t = "mission_timer"
				target:t = "landing_breaks_hint_HIST_REAL"
				target:t = "dialogue_landing_breaks_p01"
				target:t = "landing_breaks_hint_MA_pre_ps4"
				target:t = "landing_breaks_hint_MA"
				target:t = "landing_breaks_hint_MA_pre_ps4"
				target:t = "landing_breaks_hint_MA_ps4"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_landing_throttle_zero"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "throttle=min"
				shouldBlink:b = false
			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			missionStopSpeech {

			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = true
			}
			wait {
				time:r = 4
			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_WHEEL_BRAKE"
				control:t = "AXIS_BRAKE_LEFT"
				control:t = "AXIS_BRAKE_RIGHT"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_landing_breaks"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "#ui/gameuiskin#tm_throttle_down"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "landing_breaks_activated_MA"
				target:t = "dialogue_landing_breaks_p02"
			}
		}
		else_actions {

		}
	}
	landing_breaks_hint_MA_pre_ps4 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isGamepadPseudoMouseAim:b = true
			}
			playerWhenOptions {
				isGamepadClassicConsole:b = true
			}
		}
		actions {
			triggerDisable {
				target:t = "landing_breaks_hint_MA"
			}
			triggerEnable {
				target:t = "landing_breaks_hint_MA_ps4"
			}
		}
		else_actions {

		}
	}
	landing_breaks_hint_MA_ps4 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerAxisValueReached {
				value:r = 0.01
				func:t = "less"
				axis:t = "AXIS_THROTTLE"
			}
			playerWhenOptions {
				isThrustmasterHotas4:b = false
			}
		}
		actions {
			triggerDisable {
				target:t = "mission_timer"
				target:t = "landing_breaks_hint_HIST_REAL"
				target:t = "dialogue_landing_breaks_p01"
				target:t = "landing_breaks_hint_MA_Thrustmaster"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_landing_throttle_zero"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "throttle=min"
				shouldBlink:b = false
			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			missionStopSpeech {

			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = true
			}
			wait {
				time:r = 4
			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_WHEEL_BRAKE"
				control:t = "AXIS_BRAKE_LEFT"
				control:t = "AXIS_BRAKE_RIGHT"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_landing_breaks"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "throttle=min_hold"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "landing_breaks_activated_MA"
				target:t = "dialogue_landing_breaks_p02"
			}
		}
		else_actions {

		}
	}
	landing_breaks_hint_HIST_REAL {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isThrustmasterHotas4:b = false
			}
			playerAxisValueReached {
				value:r = 0.01
				func:t = "less"
				axis:t = "AXIS_THROTTLE"
			}
			playerWhenOptions {
				isGamepadPseudoMouseAim:b = false
			}
			playerWhenOptions {
				isGamepadClassicConsole:b = false
			}
		}
		actions {
			triggerDisable {
				target:t = "mission_timer"
				target:t = "landing_breaks_hint_MA"
				target:t = "dialogue_landing_breaks_p01"
				target:t = "landing_breaks_hint_HIST_REAL_pre_ps4"
				target:t = "landing_breaks_hint_HIST_REAL_Thrustmaster"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_landing_throttle_zero"
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "throttle=min"
				shouldBlink:b = false
			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = true
			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			wait {
				time:r = 4
			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_WHEEL_BRAKE"
				control:t = "AXIS_BRAKE_LEFT"
				control:t = "AXIS_BRAKE_RIGHT"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_landing_breaks_fullreal"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "throttle=min_hold"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "landing_breaks_activated_MA"
				target:t = "dialogue_landing_breaks_FR_p02"
			}
		}
		else_actions {

		}
	}
	landing_breaks_hint_HIST_REAL_Thrustmaster {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isThrustmasterHotas4:b = true
			}
			playerAxisValueReached {
				value:r = 0.01
				func:t = "less"
				axis:t = "AXIS_THROTTLE"
			}
		}
		actions {
			triggerDisable {
				target:t = "mission_timer"
				target:t = "landing_breaks_hint_MA"
				target:t = "dialogue_landing_breaks_p01"
				target:t = "landing_breaks_hint_HIST_REAL_pre_ps4"
				target:t = "landing_breaks_hint_HIST_REAL"
				target:t = "landing_breaks_hint_HIST_REAL_pre_ps4"
				target:t = "landing_breaks_hint_HIST_REAL_ps4"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_landing_throttle_zero"
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "throttle=min"
				shouldBlink:b = false
			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = true
			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			wait {
				time:r = 4
			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_WHEEL_BRAKE"
				control:t = "AXIS_BRAKE_LEFT"
				control:t = "AXIS_BRAKE_RIGHT"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_landing_breaks_fullreal"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "#ui/gameuiskin#tm_throttle_down"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "landing_breaks_activated_MA"
				target:t = "dialogue_landing_breaks_FR_p02"
			}
		}
		else_actions {

		}
	}
	landing_breaks_hint_HIST_REAL_pre_ps4 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isGamepadPseudoMouseAim:b = true
			}
			playerWhenOptions {
				isGamepadClassicConsole:b = true
			}
		}
		actions {
			triggerDisable {
				target:t = "landing_breaks_hint_HIST_REAL"
			}
			triggerEnable {
				target:t = "landing_breaks_hint_HIST_REAL_ps4"
			}
		}
		else_actions {

		}
	}
	landing_breaks_hint_HIST_REAL_ps4 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isThrustmasterHotas4:b = false
			}
			playerAxisValueReached {
				value:r = 0.01
				func:t = "less"
				axis:t = "AXIS_THROTTLE"
			}
		}
		actions {
			triggerDisable {
				target:t = "mission_timer"
				target:t = "landing_breaks_hint_MA"
				target:t = "dialogue_landing_breaks_p01"
				target:t = "landing_breaks_hint_HIST_REAL_Thrustmaster"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_landing_throttle_zero"
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "throttle=min"
				shouldBlink:b = false
			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = true
			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			wait {
				time:r = 4
			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_WHEEL_BRAKE"
				control:t = "AXIS_BRAKE_LEFT"
				control:t = "AXIS_BRAKE_RIGHT"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_landing_breaks_fullreal"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "throttle=min_hold"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "landing_breaks_activated_MA"
				target:t = "dialogue_landing_breaks_FR_p02"
			}
		}
		else_actions {

		}
	}
	landing_breaks_activated_MA {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerAxisValueReached {
				value:r = 0.1
				func:t = "more"
				axis:t = "AXIS_BRAKES"
			}
			playerAxisValueReached {
				value:r = 0
				func:t = "notMore"
				axis:t = "AXIS_THROTTLE"
			}
		}
		actions {
			triggerDisable {
				target:t = "dialogue_landing_breaks_p01"
				target:t = "dialogue_landing_breaks_p02"
				target:t = "dialogue_landing_breaks_p03"
				target:t = "dialogue_landing_breaks_FR_p02"
			}
			missionStopSpeech {

			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = true
			}
			triggerEnable {
				target:t = "landing_completed"
				target:t = "landing_release_brakes_MA"
				target:t = "landing_nosing_hint_REAL"
				target:t = "landing_release_brakes_REAL"
				target:t = "landing_release_brakes_REAL_pre_ps4"
				target:t = "landing_release_brakes_MA"
				target:t = "landing_release_brakes_MA_pre_ps4"
				target:t = "landing_nosing_hint_REAL_Thrustmaster"
				target:t = "landing_release_brakes_REAL_Thrustmaster"
			}
			wait {
				time:r = 5
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_landing_breaks"
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
		}
		else_actions {

		}
	}
	landing_nosing_hint_REAL {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.1
			}
		}
		conditions {
			playerWhenOptions {
				isThrustmasterHotas4:b = false
			}
			playerWhenOrientation {
				value:r = 5
				orientation:t = "pitch"
				comparasion_func:t = "less"
			}
			gameWhenControlMode {
				controlmode:t = "mouseaim"
				is:t = "notEqual"
			}
		}
		actions {
			triggerDisable {
				target:t = "mission_timer"
				target:t = "landing_completed"
				target:t = "landing_release_brakes_MA"
				target:t = "landing_release_brakes_REAL"
				target:t = "landing_nosing_hint_REAL_Thrustmaster"
			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "AXIS_AILERONS"
				control:t = "AXIS_ELEVATOR"
				control:t = "AXIS_RUDDER"
				control:t = "AXIS_MOUSE_AIM_X"
				control:t = "AXIS_MOUSE_AIM_Y"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
			}
			wait {
				time:r = 0.5
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_nosing"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				needInvertCheck:b = true
				item:t = "elevator=max"
				item:t = "mouse_aim_y=max"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "takeoff_nosing_avoid_REAL"
				target:t = "dialogue_warning_FR_p01"
			}
		}
		else_actions {

		}
	}
	landing_nosing_hint_REAL_Thrustmaster {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.1
			}
		}
		conditions {
			playerWhenOptions {
				isThrustmasterHotas4:b = true
			}
			playerWhenOrientation {
				value:r = 5
				orientation:t = "pitch"
				comparasion_func:t = "less"
			}
			gameWhenControlMode {
				controlmode:t = "mouseaim"
				is:t = "notEqual"
			}
		}
		actions {
			triggerDisable {
				target:t = "mission_timer"
				target:t = "landing_completed"
				target:t = "landing_release_brakes_MA"
				target:t = "landing_release_brakes_REAL"
				target:t = "landing_nosing_hint_REAL"
			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "AXIS_AILERONS"
				control:t = "AXIS_ELEVATOR"
				control:t = "AXIS_RUDDER"
				control:t = "AXIS_MOUSE_AIM_X"
				control:t = "AXIS_MOUSE_AIM_Y"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
			}
			wait {
				time:r = 0.5
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_nosing"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "#ui/gameuiskin#tm_stick_down"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "takeoff_nosing_avoid_REAL"
				target:t = "dialogue_warning_FR_p01"
			}
		}
		else_actions {

		}
	}
	landing_nosing_avoid_REAL {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerAxisValueReached {
				value:r = 0.2
				func:t = "more"
				axis:t = "AXIS_ELEVATOR"
			}
		}
		actions {
			triggerDisable {
				target:t = "dialogue_warning_FR_p01"
				target:t = "dialogue_warning_FR_p02"
			}
			missionStopSpeech {

			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = true
			}
			wait {
				time:r = 0.5
			}
			triggerEnable {
				target:t = "landing_release_brakes_REAL"
				target:t = "landing_release_brakes_MA"
				target:t = "landing_completed"
				target:t = "landing_release_brakes_REAL_Thrustmaster"
			}
		}
		else_actions {

		}
	}
	landing_release_brakes_REAL {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isThrustmasterHotas4:b = false
			}
			playerAxisValueReached {
				value:r = 0.3
				func:t = "more"
				axis:t = "AXIS_BRAKES"
			}
			playerWhenOrientation {
				value:r = 5
				orientation:t = "pitch"
				comparasion_func:t = "less"
			}
			gameWhenControlMode {
				controlmode:t = "mouseaim"
				is:t = "notEqual"
			}
			playerWhenOptions {
				isGamepadPseudoMouseAim:b = false
			}
			playerWhenOptions {
				isGamepadClassicConsole:b = false
			}
		}
		actions {
			triggerDisable {
				target:t = "mission_timer"
				target:t = "landing_completed"
				target:t = "landing_release_brakes_MA"
				target:t = "landing_nosing_hint_REAL"
				target:t = "landing_release_brakes_REAL_pre_ps4"
				target:t = "landing_release_brakes_REAL_ps4"
				target:t = "landing_release_brakes_REAL_Thrustmaster"
			}
			triggerDisable {
				target:t = "dialogue_intro_p01"
				target:t = "dialogue_intro_p02"
				target:t = "dialogue_MA_changed_to_MJ_p01"
				target:t = "dialogue_MA_changed_to_MJ_p02"
				target:t = "dialogue_takeoff_preparation_p01"
				target:t = "dialogue_takeoff_preparation_p02"
				target:t = "dialogue_takeoff_preparation_p03"
				target:t = "dialogue_takeoff_preparation_p04"
				target:t = "dialogue_takeoff_preparation_p05"
				target:t = "dialogue_takeoff_preparation_p06"
				target:t = "dialogue_takeoff_preparation_p07"
				target:t = "dialogue_takeoff_preparation_FR_p08"
				target:t = "dialogue_takeoff_preparation_FR_p09"
				target:t = "dialogue_takeoff_preparation_FR_p10"
				target:t = "dialogue_warning_FR_p01"
				target:t = "dialogue_warning_FR_p02"
				target:t = "dialogue_takeoff_p01"
				target:t = "dialogue_takeoff_p02"
				target:t = "dialogue_takeoff_p03"
				target:t = "dialogue_takeoff_p04"
				target:t = "dialogue_takeoff_completed_p01"
				target:t = "dialogue_takeoff_completed_p02"
				target:t = "dialogue_takeoff_completed_p03"
				target:t = "dialogue_takeoff_completed_p04"
				target:t = "dialogue_landing_preparation_p01"
				target:t = "dialogue_landing_preparation_p02"
				target:t = "dialogue_landing_preparation_p03"
				target:t = "dialogue_landing_preparation_p04"
				target:t = "dialogue_landing_preparation_p05"
				target:t = "dialogue_landing_preparation_p06"
				target:t = "dialogue_landing_preparation_p07"
				target:t = "dialogue_landing_preparation_MA_p07"
				target:t = "dialogue_landing_near_airfield_p01"
				target:t = "dialogue_landing_near_airfield_p02"
				target:t = "dialogue_landing_breaks_p01"
				target:t = "dialogue_landing_breaks_p02"
				target:t = "dialogue_landing_breaks_p03"
				target:t = "dialogue_landing_breaks_warning_p01"
				target:t = "dialogue_landing_breaks_warning_p02"
				target:t = "dialogue_landing_breaks_warning_FR_p01"
				target:t = "dialogue_landing_breaks_warning_FR_p02"
				target:t = "dialogue_landing_completed_p01"
				target:t = "dialogue_landing_completed_p02"
			}
			missionStopSpeech {

			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_landing_release_breaks_fullreal"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				needInvertCheck:b = true
				item:t = "elevator=max"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "landing_breaks_released_REAL"
				target:t = "dialogue_landing_breaks_warning_FR_p01"
			}
		}
		else_actions {

		}
	}
	landing_release_brakes_REAL_Thrustmaster {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isThrustmasterHotas4:b = true
			}
			playerAxisValueReached {
				value:r = 0.05
				func:t = "more"
				axis:t = "AXIS_BRAKES"
			}
			playerWhenOrientation {
				value:r = 5
				orientation:t = "pitch"
				comparasion_func:t = "less"
			}
			gameWhenControlMode {
				controlmode:t = "mouseaim"
				is:t = "notEqual"
			}
			playerWhenOptions {
				isGamepadPseudoMouseAim:b = false
			}
			playerWhenOptions {
				isGamepadClassicConsole:b = false
			}
		}
		actions {
			triggerDisable {
				target:t = "mission_timer"
				target:t = "landing_completed"
				target:t = "landing_release_brakes_MA"
				target:t = "landing_nosing_hint_REAL"
				target:t = "landing_release_brakes_REAL_pre_ps4"
				target:t = "landing_release_brakes_REAL_ps4"
				target:t = "landing_release_brakes_REAL"
				target:t = "landing_release_brakes_REAL_pre_ps4"
				target:t = "landing_release_brakes_REAL_ps4"
			}
			triggerDisable {
				target:t = "dialogue_intro_p01"
				target:t = "dialogue_intro_p02"
				target:t = "dialogue_MA_changed_to_MJ_p01"
				target:t = "dialogue_MA_changed_to_MJ_p02"
				target:t = "dialogue_takeoff_preparation_p01"
				target:t = "dialogue_takeoff_preparation_p02"
				target:t = "dialogue_takeoff_preparation_p03"
				target:t = "dialogue_takeoff_preparation_p04"
				target:t = "dialogue_takeoff_preparation_p05"
				target:t = "dialogue_takeoff_preparation_p06"
				target:t = "dialogue_takeoff_preparation_p07"
				target:t = "dialogue_takeoff_preparation_FR_p08"
				target:t = "dialogue_takeoff_preparation_FR_p09"
				target:t = "dialogue_takeoff_preparation_FR_p10"
				target:t = "dialogue_warning_FR_p01"
				target:t = "dialogue_warning_FR_p02"
				target:t = "dialogue_takeoff_p01"
				target:t = "dialogue_takeoff_p02"
				target:t = "dialogue_takeoff_p03"
				target:t = "dialogue_takeoff_p04"
				target:t = "dialogue_takeoff_completed_p01"
				target:t = "dialogue_takeoff_completed_p02"
				target:t = "dialogue_takeoff_completed_p03"
				target:t = "dialogue_takeoff_completed_p04"
				target:t = "dialogue_landing_preparation_p01"
				target:t = "dialogue_landing_preparation_p02"
				target:t = "dialogue_landing_preparation_p03"
				target:t = "dialogue_landing_preparation_p04"
				target:t = "dialogue_landing_preparation_p05"
				target:t = "dialogue_landing_preparation_p06"
				target:t = "dialogue_landing_preparation_p07"
				target:t = "dialogue_landing_preparation_MA_p07"
				target:t = "dialogue_landing_near_airfield_p01"
				target:t = "dialogue_landing_near_airfield_p02"
				target:t = "dialogue_landing_breaks_p01"
				target:t = "dialogue_landing_breaks_p02"
				target:t = "dialogue_landing_breaks_p03"
				target:t = "dialogue_landing_breaks_warning_p01"
				target:t = "dialogue_landing_breaks_warning_p02"
				target:t = "dialogue_landing_breaks_warning_FR_p01"
				target:t = "dialogue_landing_breaks_warning_FR_p02"
				target:t = "dialogue_landing_completed_p01"
				target:t = "dialogue_landing_completed_p02"
			}
			missionStopSpeech {

			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_landing_release_breaks_fullreal"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "#ui/gameuiskin#tm_stick_down"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "landing_breaks_released_REAL"
				target:t = "dialogue_landing_breaks_warning_FR_p01"
			}
		}
		else_actions {

		}
	}
	landing_release_brakes_REAL_pre_ps4 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isGamepadPseudoMouseAim:b = true
			}
			playerWhenOptions {
				isGamepadClassicConsole:b = true
			}
		}
		actions {
			triggerDisable {
				target:t = "landing_release_brakes_REAL"
			}
			triggerDisable {
				target:t = "landing_release_brakes_REAL_ps4"
			}
		}
		else_actions {

		}
	}
	landing_release_brakes_REAL_ps4 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isThrustmasterHotas4:b = false
			}
			playerAxisValueReached {
				value:r = 0.05
				func:t = "more"
				axis:t = "AXIS_BRAKES"
			}
			playerWhenOrientation {
				value:r = 5
				orientation:t = "pitch"
				comparasion_func:t = "less"
			}
		}
		actions {
			triggerDisable {
				target:t = "mission_timer"
				target:t = "landing_completed"
				target:t = "landing_release_brakes_MA"
				target:t = "landing_nosing_hint_REAL"
				target:t = "landing_release_brakes_REAL_Thrustmaster"
			}
			triggerDisable {
				target:t = "dialogue_intro_p01"
				target:t = "dialogue_intro_p02"
				target:t = "dialogue_MA_changed_to_MJ_p01"
				target:t = "dialogue_MA_changed_to_MJ_p02"
				target:t = "dialogue_takeoff_preparation_p01"
				target:t = "dialogue_takeoff_preparation_p02"
				target:t = "dialogue_takeoff_preparation_p03"
				target:t = "dialogue_takeoff_preparation_p04"
				target:t = "dialogue_takeoff_preparation_p05"
				target:t = "dialogue_takeoff_preparation_p06"
				target:t = "dialogue_takeoff_preparation_p07"
				target:t = "dialogue_takeoff_preparation_FR_p08"
				target:t = "dialogue_takeoff_preparation_FR_p09"
				target:t = "dialogue_takeoff_preparation_FR_p10"
				target:t = "dialogue_warning_FR_p01"
				target:t = "dialogue_warning_FR_p02"
				target:t = "dialogue_takeoff_p01"
				target:t = "dialogue_takeoff_p02"
				target:t = "dialogue_takeoff_p03"
				target:t = "dialogue_takeoff_p04"
				target:t = "dialogue_takeoff_completed_p01"
				target:t = "dialogue_takeoff_completed_p02"
				target:t = "dialogue_takeoff_completed_p03"
				target:t = "dialogue_takeoff_completed_p04"
				target:t = "dialogue_landing_preparation_p01"
				target:t = "dialogue_landing_preparation_p02"
				target:t = "dialogue_landing_preparation_p03"
				target:t = "dialogue_landing_preparation_p04"
				target:t = "dialogue_landing_preparation_p05"
				target:t = "dialogue_landing_preparation_p06"
				target:t = "dialogue_landing_preparation_p07"
				target:t = "dialogue_landing_preparation_MA_p07"
				target:t = "dialogue_landing_near_airfield_p01"
				target:t = "dialogue_landing_near_airfield_p02"
				target:t = "dialogue_landing_breaks_p01"
				target:t = "dialogue_landing_breaks_p02"
				target:t = "dialogue_landing_breaks_p03"
				target:t = "dialogue_landing_breaks_warning_p01"
				target:t = "dialogue_landing_breaks_warning_p02"
				target:t = "dialogue_landing_breaks_warning_FR_p01"
				target:t = "dialogue_landing_breaks_warning_FR_p02"
				target:t = "dialogue_landing_completed_p01"
				target:t = "dialogue_landing_completed_p02"
			}
			missionStopSpeech {

			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_landing_release_breaks_fullreal"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				needInvertCheck:b = true
				item:t = "elevator=max"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "landing_breaks_released_REAL"
				target:t = "dialogue_landing_breaks_warning_FR_p01"
			}
		}
		else_actions {

		}
	}
	landing_breaks_released_REAL {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerAxisValueReached {
				value:r = 0.2
				func:t = "more"
				axis:t = "AXIS_ELEVATOR"
			}
		}
		actions {
			triggerDisable {
				target:t = "landing_release_brakes_MA"
				target:t = "landing_breaks_released_MA"
				target:t = "dialogue_landing_breaks_warning_FR_p01"
				target:t = "dialogue_landing_breaks_warning_FR_p02"
			}
			missionStopSpeech {

			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = true
			}
			triggerEnable {
				target:t = "mission_timer"
				target:t = "landing_completed"
			}
		}
		else_actions {

		}
	}
	landing_release_brakes_MA {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isThrustmasterHotas4:b = false
			}
			playerAxisValueReached {
				value:r = 0.3
				func:t = "more"
				axis:t = "AXIS_BRAKES"
			}
			unitWhenProperties {
				object:t = "player"
				func:t = "less"
				value:r = 40
				property:t = "speed"
				check_filter:t = "all"
				object_type:t = "isAlive"
				object_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
			}
		}
		actions {
			triggerDisable {
				target:t = "mission_timer"
				target:t = "landing_nosing_hint_REAL"
				target:t = "landing_release_brakes_REAL"
				target:t = "landing_release_brakes_MA_ps4"
				target:t = "landing_release_brakes_MA_pre_ps4"
			}
			triggerDisable {
				target:t = "dialogue_intro_p01"
				target:t = "dialogue_intro_p02"
				target:t = "dialogue_MA_changed_to_MJ_p01"
				target:t = "dialogue_MA_changed_to_MJ_p02"
				target:t = "dialogue_takeoff_preparation_p01"
				target:t = "dialogue_takeoff_preparation_p02"
				target:t = "dialogue_takeoff_preparation_p03"
				target:t = "dialogue_takeoff_preparation_p04"
				target:t = "dialogue_takeoff_preparation_p05"
				target:t = "dialogue_takeoff_preparation_p06"
				target:t = "dialogue_takeoff_preparation_p07"
				target:t = "dialogue_takeoff_preparation_FR_p08"
				target:t = "dialogue_takeoff_preparation_FR_p09"
				target:t = "dialogue_takeoff_preparation_FR_p10"
				target:t = "dialogue_warning_FR_p01"
				target:t = "dialogue_warning_FR_p02"
				target:t = "dialogue_takeoff_p01"
				target:t = "dialogue_takeoff_p02"
				target:t = "dialogue_takeoff_p03"
				target:t = "dialogue_takeoff_p04"
				target:t = "dialogue_takeoff_completed_p01"
				target:t = "dialogue_takeoff_completed_p02"
				target:t = "dialogue_takeoff_completed_p03"
				target:t = "dialogue_takeoff_completed_p04"
				target:t = "dialogue_landing_preparation_p01"
				target:t = "dialogue_landing_preparation_p02"
				target:t = "dialogue_landing_preparation_p03"
				target:t = "dialogue_landing_preparation_p04"
				target:t = "dialogue_landing_preparation_p05"
				target:t = "dialogue_landing_preparation_p06"
				target:t = "dialogue_landing_preparation_p07"
				target:t = "dialogue_landing_preparation_MA_p07"
				target:t = "dialogue_landing_near_airfield_p01"
				target:t = "dialogue_landing_near_airfield_p02"
				target:t = "dialogue_landing_breaks_p01"
				target:t = "dialogue_landing_breaks_p02"
				target:t = "dialogue_landing_breaks_p03"
				target:t = "dialogue_landing_breaks_warning_p01"
				target:t = "dialogue_landing_breaks_warning_p02"
				target:t = "dialogue_landing_breaks_warning_FR_p01"
				target:t = "dialogue_landing_breaks_warning_FR_p02"
				target:t = "dialogue_landing_completed_p01"
				target:t = "dialogue_landing_completed_p02"
			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			missionStopSpeech {

			}
			triggerEnable {
				target:t = "dialogue_landing_breaks_warning_p01"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_landing_release_breaks"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			wait {
				time:r = 2
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_landing_release_breaks_continue"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "landing_breaks_released_MA"
			}
		}
		else_actions {

		}
	}
	landing_release_brakes_MA_pre_ps4 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isGamepadPseudoMouseAim:b = true
			}
			playerWhenOptions {
				isGamepadClassicConsole:b = true
			}
		}
		actions {
			triggerDisable {
				target:t = "landing_release_brakes_MA"
			}
			triggerDisable {
				target:t = "landing_release_brakes_MA_pre_ps4"
			}
		}
		else_actions {

		}
	}
	landing_release_brakes_MA_ps4 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isThrustmasterHotas4:b = false
			}
			unitWhenProperties {
				object:t = "player"
				func:t = "less"
				value:r = 40
				property:t = "speed"
				check_filter:t = "all"
				object_type:t = "isAlive"
				object_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
			}
			playerAxisValueReached {
				value:r = 0.05
				func:t = "more"
				axis:t = "AXIS_BRAKES"
			}
		}
		actions {
			triggerDisable {
				target:t = "mission_timer"
				target:t = "landing_nosing_hint_REAL"
				target:t = "landing_release_brakes_REAL"
			}
			triggerDisable {
				target:t = "dialogue_intro_p01"
				target:t = "dialogue_intro_p02"
				target:t = "dialogue_MA_changed_to_MJ_p01"
				target:t = "dialogue_MA_changed_to_MJ_p02"
				target:t = "dialogue_takeoff_preparation_p01"
				target:t = "dialogue_takeoff_preparation_p02"
				target:t = "dialogue_takeoff_preparation_p03"
				target:t = "dialogue_takeoff_preparation_p04"
				target:t = "dialogue_takeoff_preparation_p05"
				target:t = "dialogue_takeoff_preparation_p06"
				target:t = "dialogue_takeoff_preparation_p07"
				target:t = "dialogue_takeoff_preparation_FR_p08"
				target:t = "dialogue_takeoff_preparation_FR_p09"
				target:t = "dialogue_takeoff_preparation_FR_p10"
				target:t = "dialogue_warning_FR_p01"
				target:t = "dialogue_warning_FR_p02"
				target:t = "dialogue_takeoff_p01"
				target:t = "dialogue_takeoff_p02"
				target:t = "dialogue_takeoff_p03"
				target:t = "dialogue_takeoff_p04"
				target:t = "dialogue_takeoff_completed_p01"
				target:t = "dialogue_takeoff_completed_p02"
				target:t = "dialogue_takeoff_completed_p03"
				target:t = "dialogue_takeoff_completed_p04"
				target:t = "dialogue_landing_preparation_p01"
				target:t = "dialogue_landing_preparation_p02"
				target:t = "dialogue_landing_preparation_p03"
				target:t = "dialogue_landing_preparation_p04"
				target:t = "dialogue_landing_preparation_p05"
				target:t = "dialogue_landing_preparation_p06"
				target:t = "dialogue_landing_preparation_p07"
				target:t = "dialogue_landing_preparation_MA_p07"
				target:t = "dialogue_landing_near_airfield_p01"
				target:t = "dialogue_landing_near_airfield_p02"
				target:t = "dialogue_landing_breaks_p01"
				target:t = "dialogue_landing_breaks_p02"
				target:t = "dialogue_landing_breaks_p03"
				target:t = "dialogue_landing_breaks_warning_p01"
				target:t = "dialogue_landing_breaks_warning_p02"
				target:t = "dialogue_landing_breaks_warning_FR_p01"
				target:t = "dialogue_landing_breaks_warning_FR_p02"
				target:t = "dialogue_landing_completed_p01"
				target:t = "dialogue_landing_completed_p02"
			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			missionStopSpeech {

			}
			triggerEnable {
				target:t = "dialogue_landing_breaks_warning_p01"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_landing_release_breaks"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			wait {
				time:r = 2
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_landing_release_breaks_continue"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "landing_breaks_released_MA"
			}
		}
		else_actions {

		}
	}
	landing_breaks_released_MA {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			triggerDisable {
				target:t = "landing_release_brakes_MA"
				target:t = "dialogue_landing_breaks_warning_p01"
				target:t = "dialogue_landing_breaks_warning_p02"
			}
			missionStopSpeech {

			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = true
			}
			triggerEnable {
				target:t = "mission_timer"
				target:t = "landing_completed"
			}
		}
		else_actions {

		}
	}
	landing_completed {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			unitWhenOnLZ {
				object_type:t = "isAlive"
				object_marking:i = 0
				check_objects:t = "any"
				afterRepaired:b = false
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				object:t = "player"
				target:t = "st_airfileld_unic_prefab"
			}
			unitWhenProperties {
				object:t = "player"
				func:t = "less"
				value:r = 0.1
				property:t = "speed"
				check_filter:t = "all"
				object_type:t = "isAlive"
				object_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
			}
		}
		actions {
			triggerDisable {
				target:t = "initial"
				target:t = "takeoff_start_MA"
				target:t = "takeoff_start_REAL"
				target:t = "takeoff_toggle_engine_REAL"
				target:t = "takeoff_deploy_flaps_REAL"
				target:t = "takeoff_flaps_deployed_REAL"
				target:t = "takeoff_engine_ready_REAL"
				target:t = "takeoff_throttle_max_MA"
				target:t = "takeoff_rudder_REAL"
				target:t = "takeoff_watch_speed_REAL"
				target:t = "takeoff_watch_speed_MA"
				target:t = "takeoff_good_speed_MA"
				target:t = "takeoff_elevator_up_HIST_REAL"
				target:t = "takeoff_waypoint_HIST_REAL"
				target:t = "takeoff_retract_gear_HIST_REAL"
				target:t = "takeoff_gear_retracted_HIST_REAL"
				target:t = "takeoff_retract_flaps_REAL"
				target:t = "takeoff_flaps_up_REAL"
				target:t = "takeoff_waypoint_MA"
				target:t = "takeoff_waypoint_flight_MA"
				target:t = "takeoff_completed_MA"
				target:t = "retry_takeoff_hint"
				target:t = "landing_initial"
				target:t = "landing_about_airfields_hint_MA"
				target:t = "landing_start_MA"
				target:t = "landing_throttle_30_MA"
				target:t = "landing_first_waypoint_MA"
				target:t = "landing_throttle_30_set_MA"
				target:t = "landing_gears_MA"
				target:t = "landing_flaps_REAL"
				target:t = "landing_flaps_down_REAL"
				target:t = "landing_second_waypoint_MA"
				target:t = "landing_third_waypoint_MA"
				target:t = "landing_third_waypoint_HIST_REAL"
				target:t = "landing_level_plane_MA"
				target:t = "landing_level_plane_HIST_REAL"
				target:t = "landing_level_done_MA"
				target:t = "landing_level_done_HIST_REAL"
				target:t = "landing_low_enough_HIST_REAL"
				target:t = "landing_breaks_hint_MA"
				target:t = "landing_breaks_activated_MA"
				target:t = "landing_release_brakes_MA"
				target:t = "landing_breaks_released_MA"
				target:t = "retry_landing_hint"
				target:t = "mission_end"
				target:t = "mission_timer"
				target:t = "landing_nosing_hint_REAL"
				target:t = "landing_nosing_avoid_REAL"
				target:t = "landing_release_brakes_REAL"
			}
			triggerDisable {
				target:t = "dialogue_intro_p01"
				target:t = "dialogue_intro_p02"
				target:t = "dialogue_MA_changed_to_MJ_p01"
				target:t = "dialogue_MA_changed_to_MJ_p02"
				target:t = "dialogue_takeoff_preparation_p01"
				target:t = "dialogue_takeoff_preparation_p02"
				target:t = "dialogue_takeoff_preparation_p03"
				target:t = "dialogue_takeoff_preparation_p04"
				target:t = "dialogue_takeoff_preparation_p05"
				target:t = "dialogue_takeoff_preparation_p06"
				target:t = "dialogue_takeoff_preparation_p07"
				target:t = "dialogue_takeoff_preparation_FR_p08"
				target:t = "dialogue_takeoff_preparation_FR_p09"
				target:t = "dialogue_takeoff_preparation_FR_p10"
				target:t = "dialogue_warning_FR_p01"
				target:t = "dialogue_warning_FR_p02"
				target:t = "dialogue_takeoff_p01"
				target:t = "dialogue_takeoff_p02"
				target:t = "dialogue_takeoff_p03"
				target:t = "dialogue_takeoff_p04"
				target:t = "dialogue_takeoff_completed_p01"
				target:t = "dialogue_takeoff_completed_p02"
				target:t = "dialogue_takeoff_completed_p03"
				target:t = "dialogue_takeoff_completed_p04"
				target:t = "dialogue_landing_preparation_p01"
				target:t = "dialogue_landing_preparation_p02"
				target:t = "dialogue_landing_preparation_p03"
				target:t = "dialogue_landing_preparation_p04"
				target:t = "dialogue_landing_preparation_p05"
				target:t = "dialogue_landing_preparation_p06"
				target:t = "dialogue_landing_preparation_p07"
				target:t = "dialogue_landing_preparation_MA_p07"
				target:t = "dialogue_landing_near_airfield_p01"
				target:t = "dialogue_landing_near_airfield_p02"
				target:t = "dialogue_landing_breaks_p01"
				target:t = "dialogue_landing_breaks_p02"
				target:t = "dialogue_landing_breaks_p03"
				target:t = "dialogue_landing_breaks_warning_p01"
				target:t = "dialogue_landing_breaks_warning_p02"
				target:t = "dialogue_landing_breaks_warning_FR_p01"
				target:t = "dialogue_landing_breaks_warning_FR_p02"
				target:t = "dialogue_landing_completed_p01"
				target:t = "dialogue_landing_completed_p02"
			}
			triggerDisable {
				target:t = "takeoff_toggle_engine_REAL_Thrustmaster"
				target:t = "takeoff_throttle_max_MA_Thrustmaster"
				target:t = "takeoff_rudder_HIST_Thrustmaster"
				target:t = "takeoff_rudder_REAL_Thrustmaster"
				target:t = "takeoff_nosing_hint_REAL_Thrustmaster"
				target:t = "takeoff_elevator_up_HIST_REAL_Thrustmaster"
				target:t = "takeoff_retract_gear_HIST_REAL_Thrustmaster"
				target:t = "landing_throttle_30_MA_Thrustmaster"
				target:t = "landing_first_waypoint_MA_Thrustmaster"
				target:t = "landing_gears_MA_Thrustmaster"
				target:t = "landing_level_plane_HIST_REAL_Thrustmaster"
				target:t = "landing_breaks_hint_MA_Thrustmaster"
				target:t = "landing_breaks_hint_HIST_REAL_Thrustmaster"
				target:t = "landing_nosing_hint_REAL_Thrustmaster"
				target:t = "landing_release_brakes_REAL_Thrustmaster"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			missionStopSpeech {

			}
			moSetObjectiveStatus {
				target:t = "tutorialB_t&l_landing"
				status:i = 2
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
				object_marking:i = 0
			}
			wait {
				time:r = 0.5
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_landing_completed"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "dialogue_landing_completed_p01"
			}
		}
		else_actions {

		}
	}
	mission_end {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			triggerDisable {
				target:t = "landing_completed"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = true
			}
			bigQueryAddRecord {
				name:t = "tutorialB_takeoff_and_landing"
				params:t = "task 3/3: player landed the plane and finished the tutorial"
				event:t = ""
			}
			wait {
				time:r = 0.5
			}
			moSetObjectiveStatus {
				target:t = "tutorialB_t&l_landing"
				status:i = 2
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
				object_marking:i = 0
			}
			wait {
				time:r = 2
			}
			missionCompleted {
				timer:b = false
				debriefingTimer:i = 2
			}
		}
		else_actions {

		}
	}
	retry_landing_hint {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "timer"
				value:i = 30
				comparasion_func:t = "more"
			}
			unitWhenStatus {
				object_type:t = "isUseless"
				object_marking:i = 0
				check_objects:t = "all"
				target_type:t = "isAlive"
				check_period:r = 1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				object:t = "player"
			}
			unitWhenStatus {
				object_type:t = "isKilled"
				object_marking:i = 0
				check_objects:t = "all"
				target_type:t = "isAlive"
				check_period:r = 1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				object:t = "player"
			}
		}
		actions {
			triggerDisable {
				target:t = "initial"
				target:t = "initial_intro"
				target:t = "initial_intro_skip"
				target:t = "takeoff_ma_changed_to_mj_hint"
				target:t = "takeoff_ma_changed_to_mj_skip"
				target:t = "takeoff_start_MA"
				target:t = "takeoff_start_REAL"
				target:t = "takeoff_toggle_engine_REAL"
				target:t = "takeoff_toggle_engine_REAL_pre_ps4"
				target:t = "takeoff_toggle_engine_REAL_ps4"
				target:t = "takeoff_deploy_flaps_REAL"
				target:t = "takeoff_flaps_deployed_REAL"
				target:t = "takeoff_engine_ready_REAL"
				target:t = "takeoff_engine_ready_REAL_ps4"
				target:t = "takeoff_throttle_max_MA"
				target:t = "takeoff_rudder_HIST"
				target:t = "takeoff_rudder_REAL"
				target:t = "takeoff_rudder_used_REAL"
				target:t = "takeoff_watch_speed_REAL"
				target:t = "takeoff_watch_speed_MA"
				target:t = "takeoff_nosing_hint_REAL"
				target:t = "takeoff_nosing_avoid_REAL"
				target:t = "takeoff_good_speed_MA"
				target:t = "takeoff_elevator_up_HIST_REAL"
				target:t = "takeoff_waypoint_HIST_REAL"
				target:t = "takeoff_retract_gear_HIST_REAL"
				target:t = "takeoff_gear_retracted_HIST_REAL"
				target:t = "takeoff_retract_flaps_REAL"
				target:t = "takeoff_flaps_up_REAL"
				target:t = "takeoff_waypoint_MA_cond"
				target:t = "takeoff_waypoint_MA"
				target:t = "takeoff_waypoint_flight_MA"
				target:t = "takeoff_completed_MA"
				target:t = "retry_takeoff_hint"
				target:t = "mission_end"
				target:t = "mission_timer"
			}
			triggerDisable {
				target:t = "landing_initial"
				target:t = "landing_about_airfields_hint_MA"
				target:t = "landing_start_MA"
				target:t = "landing_throttle_30_MA"
				target:t = "landing_first_waypoint_MA"
				target:t = "landing_throttle_30_set_MA"
				target:t = "landing_gears_MA"
				target:t = "landing_flaps_REAL"
				target:t = "landing_flaps_down_REAL"
				target:t = "landing_second_waypoint_MA"
				target:t = "landing_third_waypoint_MA"
				target:t = "landing_third_waypoint_HIST_REAL"
				target:t = "landing_level_plane_MA"
				target:t = "landing_level_plane_HIST_REAL"
				target:t = "landing_level_done_MA"
				target:t = "landing_level_done_HIST_REAL"
				target:t = "landing_low_enough_HIST_REAL"
				target:t = "landing_breaks_hint_MA"
				target:t = "landing_breaks_hint_MA_pre_ps4"
				target:t = "landing_breaks_hint_MA_ps4"
				target:t = "landing_breaks_hint_HIST_REAL"
				target:t = "landing_breaks_hint_HIST_REAL_pre_ps4"
				target:t = "landing_breaks_hint_HIST_REAL_ps4"
				target:t = "landing_breaks_activated_MA"
				target:t = "landing_nosing_hint_REAL"
				target:t = "landing_nosing_avoid_REAL"
				target:t = "landing_release_brakes_REAL"
				target:t = "landing_release_brakes_REAL_pre_ps4"
				target:t = "landing_release_brakes_REAL_ps4"
				target:t = "landing_breaks_released_REAL"
				target:t = "landing_release_brakes_MA"
				target:t = "landing_release_brakes_MA_pre_ps4"
				target:t = "landing_release_brakes_MA_ps4"
				target:t = "landing_breaks_released_MA"
				target:t = "landing_completed"
				target:t = "mission_end"
				target:t = "mission_timer"
			}
			triggerDisable {
				target:t = "dialogue_intro_p01"
				target:t = "dialogue_intro_p02"
				target:t = "dialogue_MA_changed_to_MJ_p01"
				target:t = "dialogue_MA_changed_to_MJ_p02"
				target:t = "dialogue_takeoff_preparation_p01"
				target:t = "dialogue_takeoff_preparation_p02"
				target:t = "dialogue_takeoff_preparation_p03"
				target:t = "dialogue_takeoff_preparation_p04"
				target:t = "dialogue_takeoff_preparation_p05"
				target:t = "dialogue_takeoff_preparation_p06"
				target:t = "dialogue_takeoff_preparation_p07"
				target:t = "dialogue_takeoff_preparation_FR_p08"
				target:t = "dialogue_takeoff_preparation_FR_p09"
				target:t = "dialogue_takeoff_preparation_FR_p10"
				target:t = "dialogue_warning_FR_p01"
				target:t = "dialogue_warning_FR_p02"
				target:t = "dialogue_takeoff_p01"
				target:t = "dialogue_takeoff_p02"
				target:t = "dialogue_takeoff_p03"
				target:t = "dialogue_takeoff_p04"
				target:t = "dialogue_takeoff_completed_p01"
				target:t = "dialogue_takeoff_completed_p02"
				target:t = "dialogue_takeoff_completed_p03"
				target:t = "dialogue_takeoff_completed_p04"
				target:t = "dialogue_landing_preparation_p01"
				target:t = "dialogue_landing_preparation_p02"
				target:t = "dialogue_landing_preparation_p03"
				target:t = "dialogue_landing_preparation_p04"
				target:t = "dialogue_landing_preparation_p05"
				target:t = "dialogue_landing_preparation_p06"
				target:t = "dialogue_landing_preparation_p07"
				target:t = "dialogue_landing_preparation_MA_p07"
				target:t = "dialogue_landing_near_airfield_p01"
				target:t = "dialogue_landing_near_airfield_p02"
				target:t = "dialogue_landing_breaks_p01"
				target:t = "dialogue_landing_breaks_p02"
				target:t = "dialogue_landing_breaks_p03"
				target:t = "dialogue_landing_breaks_warning_p01"
				target:t = "dialogue_landing_breaks_warning_p02"
				target:t = "dialogue_landing_breaks_warning_FR_p01"
				target:t = "dialogue_landing_breaks_warning_FR_p02"
				target:t = "dialogue_landing_completed_p01"
				target:t = "dialogue_landing_completed_p02"
				target:t = "dialogue_landing_breaks_FR_p02"
			}
			triggerDisable {
				target:t = "takeoff_toggle_engine_REAL_Thrustmaster"
				target:t = "takeoff_throttle_max_MA_Thrustmaster"
				target:t = "takeoff_rudder_HIST_Thrustmaster"
				target:t = "takeoff_rudder_REAL_Thrustmaster"
				target:t = "takeoff_nosing_hint_REAL_Thrustmaster"
				target:t = "takeoff_elevator_up_HIST_REAL_Thrustmaster"
				target:t = "takeoff_retract_gear_HIST_REAL_Thrustmaster"
				target:t = "landing_throttle_30_MA_Thrustmaster"
				target:t = "landing_first_waypoint_MA_Thrustmaster"
				target:t = "landing_gears_MA_Thrustmaster"
				target:t = "landing_level_plane_HIST_REAL_Thrustmaster"
				target:t = "landing_breaks_hint_MA_Thrustmaster"
				target:t = "landing_breaks_hint_HIST_REAL_Thrustmaster"
				target:t = "landing_nosing_hint_REAL_Thrustmaster"
				target:t = "landing_release_brakes_REAL_Thrustmaster"
			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			missionStopSpeech {

			}
			playerControls {
				setStatus:t = "disable"
				control:t = "ALL"
			}
			missionMarkAsWaypoint {
				visible:b = false
				primary:b = true
				oriented:b = false
				ignoreDifficulty:b = false
				scale:r = 1
				target:t = "landing_waypoint00"
				target:t = "landing_waypoint01"
				target:t = "landing_waypoint02"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_retry"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			wait {
				time:r = 2
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_retry"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "landing_initial"
			}
		}
		else_actions {

		}
	}
	mission_timer {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {

		}
		actions {
			varModify {
				operator:t = "add"
				value:r = 1
				var:t = "timer"
			}
		}
		else_actions {

		}
	}
	dialogue_intro_p01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_t_l_intro_p01"
				showInGame:b = false
			}
			triggerEnable {
				target:t = "dialogue_intro_p02"
			}
		}
		else_actions {

		}
	}
	dialogue_intro_p02 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_t_l_intro_p02"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_MA_changed_to_MJ_p01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_t_l_MA_changed_to_MJ_p01"
				showInGame:b = false
			}
			triggerEnable {
				target:t = "dialogue_MA_changed_to_MJ_p02"
			}
		}
		else_actions {

		}
	}
	dialogue_MA_changed_to_MJ_p02 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_t_l_MA_changed_to_MJ_p02"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_takeoff_preparation_p01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_t_l_takeoff_preparation_p01"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_takeoff_preparation_p02 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_t_l_takeoff_preparation_p02"
				showInGame:b = false
			}
			triggerEnable {
				target:t = "dialogue_takeoff_preparation_p03"
			}
		}
		else_actions {

		}
	}
	dialogue_takeoff_preparation_p03 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_t_l_takeoff_preparation_p03"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_takeoff_preparation_p04 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_t_l_takeoff_preparation_p04"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_takeoff_preparation_p05 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_t_l_takeoff_preparation_p05"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_takeoff_preparation_p06 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_t_l_takeoff_preparation_p06"
				showInGame:b = false
			}
			triggerEnable {
				target:t = "dialogue_takeoff_preparation_p07"
			}
		}
		else_actions {

		}
	}
	dialogue_takeoff_preparation_p07 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_t_l_takeoff_preparation_p07"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_takeoff_preparation_FR_p08 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_t_l_takeoff_preparation_FR_p08"
				showInGame:b = false
			}
			triggerEnable {
				target:t = "dialogue_takeoff_preparation_FR_p09"
			}
		}
		else_actions {

		}
	}
	dialogue_takeoff_preparation_FR_p09 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_t_l_takeoff_preparation_FR_p09"
				showInGame:b = false
			}
			triggerEnable {
				target:t = "dialogue_takeoff_preparation_FR_p10"
			}
		}
		else_actions {

		}
	}
	dialogue_takeoff_preparation_FR_p10 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_t_l_takeoff_preparation_FR_p10"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_warning_FR_p01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_t_l_warning_FR_p01"
				showInGame:b = false
			}
			triggerEnable {
				target:t = "dialogue_warning_FR_p02"
			}
		}
		else_actions {

		}
	}
	dialogue_warning_FR_p02 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_t_l_warning_FR_p02"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_takeoff_p01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_t_l_takeoff_p01"
				showInGame:b = false
			}
			triggerEnable {
				target:t = "dialogue_takeoff_p02"
			}
		}
		else_actions {

		}
	}
	dialogue_takeoff_p02 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_t_l_takeoff_p02"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_takeoff_p03 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_t_l_takeoff_p03"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_takeoff_p04 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_t_l_takeoff_p04"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_takeoff_completed_p01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_t_l_takeoff_completed_p01"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_takeoff_completed_p02 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_t_l_takeoff_completed_p02"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_takeoff_completed_p03 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_t_l_takeoff_completed_p03"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_takeoff_completed_p04 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_t_l_takeoff_completed_p04"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_landing_preparation_p01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_t_l_landing_preparation_p01"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_landing_preparation_p02 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_t_l_landing_preparation_p02"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_landing_preparation_p03 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_t_l_landing_preparation_p03"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_landing_preparation_p04 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_t_l_landing_preparation_p04"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_landing_preparation_p05 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_t_l_landing_preparation_p05"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_landing_preparation_p06 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_t_l_landing_preparation_p06"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_landing_preparation_p07 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_t_l_landing_preparation_p07"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_landing_preparation_MA_p07 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_t_l_landing_preparation_MA_p07"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_landing_near_airfield_p01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_t_l_landing_near_airfield_p01"
				showInGame:b = false
			}
			triggerEnable {
				target:t = "dialogue_landing_near_airfield_p02"
			}
		}
		else_actions {

		}
	}
	dialogue_landing_near_airfield_p02 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_t_l_landing_near_airfield_p02"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_landing_breaks_p01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_t_l_landing_breaks_p01"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_landing_breaks_p02 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_t_l_landing_breaks_p02"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_landing_breaks_FR_p02 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_t_l_landing_breaks_p02"
				showInGame:b = false
			}
			triggerEnable {
				target:t = "dialogue_landing_breaks_p03"
			}
		}
		else_actions {

		}
	}
	dialogue_landing_breaks_p03 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_t_l_landing_breaks_p03"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_landing_breaks_warning_p01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_t_l_landing_breaks_warning_p01"
				showInGame:b = false
			}
			triggerEnable {
				target:t = "dialogue_landing_breaks_warning_p02"
			}
		}
		else_actions {

		}
	}
	dialogue_landing_breaks_warning_p02 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_t_l_landing_breaks_warning_p02"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_landing_breaks_warning_FR_p01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_t_l_landing_breaks_warning_FR_p01"
				showInGame:b = false
			}
			triggerEnable {
				target:t = "dialogue_landing_breaks_warning_FR_p02"
			}
		}
		else_actions {

		}
	}
	dialogue_landing_breaks_warning_FR_p02 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_t_l_landing_breaks_warning_FR_p02"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_landing_completed_p01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_t_l_landing_completed_p01"
				showInGame:b = false
			}
			triggerEnable {
				target:t = "dialogue_landing_completed_p02"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			bigQueryAddRecord {
				name:t = "tutorialB_takeoff_and_landing"
				params:t = "task 3/3: player landed the plane and finished the tutorial"
				event:t = ""
			}
			wait {
				time:r = 0.5
			}
			missionCompleted {
				timer:b = false
				debriefingTimer:i = 2
			}
		}
		else_actions {

		}
	}
	dialogue_landing_completed_p02 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_t_l_landing_completed_p02"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
}
mission_objectives {
	isCategory:b = true
	is_enabled:b = true
	tutorialB_t&l_takeoff {
		is_enabled:b = false
		comments:t = ""
		type:t = "abstractMissionObjective"
		props {
			isPrimary:b = true
			timeLimit:i = 1800
			scoreConst:i = 100
			scoreTime:i = 400
		}
		onSuccess {

		}
		onFailed {

		}
	}
	tutorialB_t&l_landing {
		is_enabled:b = false
		comments:t = ""
		type:t = "abstractMissionObjective"
		props {
			isPrimary:b = true
			timeLimit:i = 1800
			scoreConst:i = 100
			scoreTime:i = 400
		}
		onSuccess {

		}
		onFailed {

		}
	}
}
variables {
	timer:i = 0
}
dialogs {
	tutorialB_t_l_intro_p01 {
		speech {
			id:t = "tutorialB_t_l_intro_p01"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_t_l_intro_p02 {
		speech {
			id:t = "tutorialB_t_l_intro_p02"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_t_l_MA_changed_to_MJ_p01 {
		speech {
			id:t = "tutorialB_t_l_MA_changed_to_MJ_p01"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_t_l_MA_changed_to_MJ_p02 {
		speech {
			id:t = "tutorialB_t_l_MA_changed_to_MJ_p02"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_t_l_takeoff_preparation_p01 {
		speech {
			id:t = "tutorialB_t_l_takeoff_preparation_p01"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_t_l_takeoff_preparation_p02 {
		speech {
			id:t = "tutorialB_t_l_takeoff_preparation_p02"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_t_l_takeoff_preparation_p03 {
		speech {
			id:t = "tutorialB_t_l_takeoff_preparation_p03"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_t_l_takeoff_preparation_p04 {
		speech {
			id:t = "tutorialB_t_l_takeoff_preparation_p04"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_t_l_takeoff_preparation_p05 {
		speech {
			id:t = "tutorialB_t_l_takeoff_preparation_p05"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_t_l_takeoff_preparation_p06 {
		speech {
			id:t = "tutorialB_t_l_takeoff_preparation_p06"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_t_l_takeoff_preparation_p07 {
		speech {
			id:t = "tutorialB_t_l_takeoff_preparation_p07"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_t_l_takeoff_preparation_FR_p08 {
		speech {
			id:t = "tutorialB_t_l_takeoff_preparation_FR_p08"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_t_l_takeoff_preparation_FR_p09 {
		speech {
			id:t = "tutorialB_t_l_takeoff_preparation_FR_p09"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_t_l_takeoff_preparation_FR_p10 {
		speech {
			id:t = "tutorialB_t_l_takeoff_preparation_FR_p10"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_t_l_warning_FR_p01 {
		speech {
			id:t = "tutorialB_t_l_warning_FR_p01"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_t_l_warning_FR_p02 {
		speech {
			id:t = "tutorialB_t_l_warning_FR_p02"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_t_l_takeoff_p01 {
		speech {
			id:t = "tutorialB_t_l_takeoff_p01"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_t_l_takeoff_p02 {
		speech {
			id:t = "tutorialB_t_l_takeoff_p02"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_t_l_takeoff_p03 {
		speech {
			id:t = "tutorialB_t_l_takeoff_p03"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_t_l_takeoff_p04 {
		speech {
			id:t = "tutorialB_t_l_takeoff_p04"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_t_l_takeoff_completed_p01 {
		speech {
			id:t = "tutorialB_t_l_takeoff_completed_p01"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_t_l_takeoff_completed_p02 {
		speech {
			id:t = "tutorialB_t_l_takeoff_completed_p02"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_t_l_takeoff_completed_p03 {
		speech {
			id:t = "tutorialB_t_l_takeoff_completed_p03"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_t_l_takeoff_completed_p04 {
		speech {
			id:t = "tutorialB_t_l_takeoff_completed_p04"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_t_l_landing_preparation_p01 {
		speech {
			id:t = "tutorialB_t_l_landing_preparation_p01"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_t_l_landing_preparation_p02 {
		speech {
			id:t = "tutorialB_t_l_landing_preparation_p02"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_t_l_landing_preparation_p03 {
		speech {
			id:t = "tutorialB_t_l_landing_preparation_p03"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_t_l_landing_preparation_p04 {
		speech {
			id:t = "tutorialB_t_l_landing_preparation_p04"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_t_l_landing_preparation_p05 {
		speech {
			id:t = "tutorialB_t_l_landing_preparation_p05"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_t_l_landing_preparation_p06 {
		speech {
			id:t = "tutorialB_t_l_landing_preparation_p06"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_t_l_landing_preparation_p07 {
		speech {
			id:t = "tutorialB_t_l_landing_preparation_p07"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_t_l_landing_preparation_MA_p07 {
		speech {
			id:t = "tutorialB_t_l_landing_preparation_MA_p07"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_t_l_landing_near_airfield_p01 {
		speech {
			id:t = "tutorialB_t_l_landing_near_airfield_p01"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_t_l_landing_near_airfield_p02 {
		speech {
			id:t = "tutorialB_t_l_landing_near_airfield_p02"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_t_l_landing_breaks_p01 {
		speech {
			id:t = "tutorialB_t_l_landing_breaks_p01"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_t_l_landing_breaks_p02 {
		speech {
			id:t = "tutorialB_t_l_landing_breaks_p02"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_t_l_landing_breaks_p03 {
		speech {
			id:t = "tutorialB_t_l_landing_breaks_p03"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_t_l_landing_breaks_warning_p01 {
		speech {
			id:t = "tutorialB_t_l_landing_breaks_warning_p01"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_t_l_landing_breaks_warning_p02 {
		speech {
			id:t = "tutorialB_t_l_landing_breaks_warning_p02"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_t_l_landing_breaks_warning_FR_p01 {
		speech {
			id:t = "tutorialB_t_l_landing_breaks_warning_FR_p01"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_t_l_landing_breaks_warning_FR_p02 {
		speech {
			id:t = "tutorialB_t_l_landing_breaks_warning_FR_p02"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_t_l_landing_completed_p01 {
		speech {
			id:t = "tutorialB_t_l_landing_completed_p01"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_t_l_landing_completed_p02 {
		speech {
			id:t = "tutorialB_t_l_landing_completed_p02"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
}
airfields {

}
effects {

}
units {
	armada {
		name:t = "player"
		tm:m = [[0.819152, 0.0, 0.573576] [0.0, 1.0, 0.0] [-0.573576, 0.0, 0.819152] [-3794.2, 500.0, 643.6]]
		unit_class:t = "lagg-3-35"
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = "LaGG-3-35_default"
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 1
			count:i = 1
			free_distance:r = 70
			floating_distance:r = 50
			minimum_distance_to_earth:r = 20
			altLimit:r = 6000
			attack_type:t = "fire_at_will"
			skill:i = 4
			uniqueName:t = ""
			plane {
				wing_formation:t = "Diamond"
				row_distances:r = 3
				col_distances:r = 3
				super_formation:t = "Diamond"
				super_row_distances:r = 1.5
				super_col_distances:r = 1.5
				ai_skill:t = "NORMAL"
				task:t = "FLY_WAYPOINT"
			}
		}
		way {

		}
	}
}
areas {
	big_area {
		type:t = "Sphere"
		tm:m = [[10000.0, 0.0, 0.0] [0.0, 10000.0, 0.0] [0.0, 0.0, 10000.0] [-3117.7, 161.0, 1239.75]]
		objLayer:i = 3
		props {
			forceReplication:b = true
		}
	}
	waypoint00 {
		type:t = "Sphere"
		tm:m = [[600.0, 0.0, 0.0] [0.0, 600.0, 0.0] [0.0, 0.0, 600.0] [-4106.0, 442.35, 483.65]]
		props {
			forceReplication:b = true
		}
	}
	airfield00 {
		type:t = "Sphere"
		tm:m = [[100.0, 0.0, 0.0] [0.0, 100.0, 0.0] [0.0, 0.0, 100.0] [-2655.25, 161.0, 1577.95]]
		props {
			forceReplication:b = true
		}
	}
	airfield01 {
		type:t = "Sphere"
		tm:m = [[100.0, 0.0, 0.0] [0.0, 100.0, 0.0] [0.0, 0.0, 100.0] [-3729.1, 161.0, 753.45]]
		props {
			forceReplication:b = true
		}
	}
	spawnpoint00 {
		type:t = "Sphere"
		tm:m = [[20.0, 0.0, 0.0] [0.0, 20.0, 0.0] [0.0, 0.0, 20.0] [-2663.35, 161.0, 1572.35]]
		props {
			forceReplication:b = true
		}
	}
	player_respawn01 {
		type:t = "Sphere"
		tm:m = [[40.0, 0.0, 0.0] [0.0, 40.0, 0.0] [0.0, 0.0, 40.0] [-5819.4, 382.35, -877.15]]
		props {
			forceReplication:b = true
		}
	}
	landing_waypoint00 {
		type:t = "Sphere"
		tm:m = [[200.0, 0.0, 0.0] [0.0, 200.0, 0.0] [0.0, 0.0, 200.0] [-5079.7, 300.9, -295.2]]
		props {
			forceReplication:b = true
		}
	}
	landing_waypoint01 {
		type:t = "Sphere"
		tm:m = [[200.0, 0.0, 0.0] [0.0, 200.0, 0.0] [0.0, 0.0, 200.0] [-4431.9, 258.85, 206.6]]
		props {
			forceReplication:b = true
		}
	}
	landing_waypoint02 {
		type:t = "Sphere"
		tm:m = [[420.0, 0.0, 0.0] [0.0, 420.0, 0.0] [0.0, 0.0, 420.0] [-3686.3, 169.2, 782.9]]
		props {
			forceReplication:b = true
		}
	}
}
objLayers {
	layer {
		enabled:b = true
	}
	layer {
		enabled:b = true
	}
	layer {
		enabled:b = true
	}
	layer {
		enabled:b = false
	}
}
wayPoints {

}