selected_tag:t = ""
bin_dump_file:t = ""
mission_settings {
	player {
		army:i = 1
		wing:t = "player"
	}
	player_teamB {
		army:i = 2
	}
	mission {
		level:t = "levels/stalingrad.bin"
		type:t = "training"
		gt_training:b = false
		environment:t = "Day"
		weather:t = "cloudy"
		forceSimulInitialRandomSeed:b = true
		simulInitialRandomSeed:i = 33
		isLimitedFuel:b = false
		isLimitedAmmo:b = false
		openDiffLevels:b = false
		restoreType:t = "manual"
		difficulty:t = "arcade"
		optionalTakeOff:b = false
		tutorialObjectsFile:t = "config/tutorial_hud_elements/tutorial_fighter_hud_elements.blk"
		forceSkiesInitialRandomSeed:b = true
		skiesInitialRandomSeed:i = 2
		customWeather {
			windDir:p2 = 0.6, 0.8
			wind_scale:r = 1
			max_wind_strength:r = 6
			sky {
				mie_height:r = 0.99
			}
			strata_clouds {
				amount:r = 0.5
				altitude:r = 11
			}
		}
	}
	atmosphere {
		pressure:r = 760
		temperature:r = 0
	}
	spectator_points {

	}
	briefing {
		place_loc:t = ""
		date_loc:t = ""
		objective_loc:t = ""
		music:t = "action_01"
		viewAreaScale:r = 4
		part {
			event:t = ""
			minTime:i = 0
			slide {
				map:b = true
				minTime:i = 4
				picture:t = ""
				showAirMap:b = false
				icon {
					icontype:t = "fighter"
					side:t = "player"
					target:t = "player_spawn01"
					lookAt:t = "target_balloon_area"
				}
				icon {
					icontype:t = "mark"
					side:t = "neutral"
					target:t = "target_balloon_area"
				}
			}
		}
	}
}
imports {
	import_record {
		file:t = "gameData/missions/bridges/stalingrad_bridges.blk"
		importAreas:b = true
		importUnits:b = true
		importTriggers:b = true
		importMissionObjectives:b = true
		importWayPoints:b = true
		importDialogs:b = true
		showAreas:b = true
		showUnits:b = true
		showTriggers:b = true
		showMissionObjectives:b = true
		showWayPoints:b = true
		showDialogs:b = true
		excludes {

		}
	}
}
triggers {
	isCategory:b = true
	is_enabled:b = true
	initial {
		is_enabled:b = true
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0
			}
		}
		conditions {

		}
		actions {
			triggerDisable {
				target:t = "flight_if_MA"
				target:t = "flight_if_not_MA"
				target:t = "flight_elevator_hint"
				target:t = "flight_ailerons_hint"
				target:t = "flight_rudder_hint"
				target:t = "flight_MA_hint"
				target:t = "flight_waypoint_hint"
				target:t = "flight_waypoint_start"
				target:t = "flight_waypoint_reached"
				target:t = "throttle_increase"
				target:t = "throttle_increased_flight"
				target:t = "throttle_wep"
				target:t = "throttle_wep_flight"
				target:t = "retry_flight_hint"
				target:t = "throttle_done"
				target:t = "mission_timer"
				target:t = "map_initial_hint"
				target:t = "map_objective_hint"
				target:t = "map_press_button_hint"
				target:t = "map_button_pressed"
				target:t = "throttle_increased"
				target:t = "throttle_decrease"
				target:t = "throttle_decreased"
				target:t = "throttle_wep_done"
			}
			triggerDisable {
				target:t = "flight_if_Thrustmaster"
				target:t = "flight_howTo_Thrustmaster"
				target:t = "flight_elevator_hint_Thrustmaster"
				target:t = "flight_ailerons_hint_Thrustmaster"
				target:t = "flight_rudder_hint_Thrustmaster"
				target:t = "flight_waypoint_reached_Thrustmaster"
				target:t = "throttle_increase_Thrustmaster"
				target:t = "throttle_increased_flight_Thrustmaster"
				target:t = "throttle_decrease_Thrustmaster"
				target:t = "throttle_wep_Thrustmaster"
				target:t = "throttle_wep_flight_Thrustmaster"
				target:t = "map_initial_hint_Thrustmaster"
				target:t = "shooting_initial_hint_Thrustmaster"
				target:t = "shooting_initial_hint"
				target:t = "shootingNotMA_precision_Thrustmaster"
				target:t = "shootingNotMA_initial_hint"
				target:t = "shootingNotMA_initial_hint_Thrustmaster"
				target:t = "training_look_at_the_target_Thrustmaster"
				target:t = "assault_zoom_in_Thrustmaster"
				target:t = "assault_zoom_out_Thrustmaster"
				target:t = "assault_targets_indicator_hint_Thrustmaster"
				target:t = "assault_change_direction_Thrustmaster"
			}
			triggerDisable {
				target:t = "shootingMA_screen01"
				target:t = "shootingMA_video01"
				target:t = "shootingMA_video02"
				target:t = "shootingMA_video03"
				target:t = "shooting_start"
				target:t = "shooting_start_ps4_MA"
				target:t = "shootingNotMA_screen01"
				target:t = "shootingNotMA_screen02"
				target:t = "shootingNotMA_screen03"
			}
			playerControls {
				setStatus:t = "disable"
				control:t = "ALL"
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_FLIGHTMENU"
				control:t = "ID_FLIGHTMENU_SETUP"
				control:t = "ID_CONTINUE"
				control:t = "ID_CONTINUE_SETUP"
			}
			unitPutToSleep {
				target:t = "enemies_squad"
			}
			missionSetFade {
				mode:t = "fadeOut"
				color:p3 = 0, 0, 0
				time:r = 0.1
			}
			missionDisableRadiochat {
				doDisable:b = true
			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			bigQueryAddRecord {
				name:t = "tutorialB_fighter"
				params:t = "task 1/8: start mission"
				event:t = ""
			}
			wait {
				time:r = 0.8
			}
			unitRestore {
				ressurectIfDead:b = true
				fullRestore:b = true
				target_marking:i = 0
				target:t = "player"
				ammoRestore:b = true
			}
			playerOptions {
				currentView:t = "3rdperson"
				respawnBullets:b = true
			}
			missionKillEffects {
				area:t = "big_area"
			}
			wait {
				time:r = 0.2
			}
			unitMoveTo {
				target:t = "player_spawn00"
				follow_target:b = false
				teleportHeightType:t = "target"
				useUnitHeightForTele:b = false
				shouldKeepFormation:b = false
				teleportHeightValue:r = 0
				horizontalDirectionForTeleport:b = true
				waypointReachedDist:r = 10
				recalculatePathDist:r = -1
				object_marking:i = 0
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				fastClimb:b = false
				destTimeMode:b = false
				target_var_name:t = ""
				target_var_comp_op:t = "equal"
				target_var_value:i = 0
				object:t = "player"
				move_type:t = "teleport"
				lookat:t = "player_lookAtArea02"
			}
			unitSetControls {
				controls:t = "power"
				value:r = 0.5
				force:b = true
				objects:t = "player"
			}
			unitSetProperties {
				object:t = "player"
				object_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				speed:r = 250
			}
			missionSetFade {
				mode:t = "fadeIn"
				color:p3 = 0, 0, 0
				time:r = 0.6
			}
			wait {
				time:r = 0.7
			}
			unitForceRearmSpeed {
				rearmSpeedK:r = 100000
				target:t = "player"
			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			triggerEnable {
				target:t = "flight_intro"
			}
			playerOptions {
				currentView:t = "3rdperson"
			}
		}
		else_actions {

		}
	}
	flight_intro {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_fighter_intro"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "dialogue_intro_p01"
			}
			wait {
				time:r = 2
			}
			triggerEnable {
				target:t = "flight_if_MA"
				target:t = "flight_if_not_MA"
				target:t = "retry_flight_hint"
				target:t = "flight_if_Thrustmaster"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_fighter_intro_continue"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
		}
		else_actions {

		}
	}
	flight_if_MA {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isGamepadPseudoMouseAim:b = true
			}
			playerWhenOptions {
				isMouseAim:b = true
			}
		}
		actions {
			triggerDisable {
				target:t = "flight_elevator_hint"
				target:t = "flight_ailerons_hint"
				target:t = "flight_rudder_hint"
				target:t = "flight_if_not_MA"
				target:t = "flight_howTo"
				target:t = "flight_intro"
				target:t = "flight_if_Thrustmaster"
			}
			triggerEnable {
				target:t = "flight_MA_hint"
			}
		}
		else_actions {

		}
	}
	flight_if_not_MA {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isMouseAim:b = false
			}
			playerWhenOptions {
				isGamepadPseudoMouseAim:b = false
			}
			playerWhenOptions {
				isThrustmasterHotas4:b = false
			}
		}
		actions {
			triggerDisable {
				target:t = "flight_MA_hint"
				target:t = "flight_if_MA"
				target:t = "flight_intro"
				target:t = "flight_if_Thrustmaster"
			}
			triggerEnable {
				target:t = "flight_howTo"
			}
		}
		else_actions {

		}
	}
	flight_if_Thrustmaster {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isThrustmasterHotas4:b = true
			}
		}
		actions {
			triggerDisable {
				target:t = "flight_elevator_hint"
				target:t = "flight_ailerons_hint"
				target:t = "flight_rudder_hint"
				target:t = "flight_if_not_MA"
				target:t = "flight_howTo"
				target:t = "flight_intro"
				target:t = "flight_if_MA"
			}
			triggerEnable {
				target:t = "flight_howTo_Thrustmaster"
			}
		}
		else_actions {

		}
	}
	flight_howTo {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			triggerDisable {
				target:t = "dialogue_intro_p01"
				target:t = "dialogue_intro_p02"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_howTo_fly"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "dialogue_main_controls_p01"
			}
			wait {
				time:r = 2
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_howTo_fly_continue"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "flight_elevator_hint"
			}
		}
		else_actions {

		}
	}
	flight_howTo_Thrustmaster {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			triggerDisable {
				target:t = "dialogue_intro_p01"
				target:t = "dialogue_intro_p02"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_howTo_fly"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "dialogue_main_controls_p01"
			}
			wait {
				time:r = 2
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_howTo_fly_continue"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "flight_elevator_hint_Thrustmaster"
			}
		}
		else_actions {

		}
	}
	flight_elevator_hint {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0
			}
		}
		conditions {
			playerWhenOptions {
				isThrustmasterHotas4:b = false
			}
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			triggerDisable {
				target:t = "flight_howTo"
				target:t = "dialogue_main_controls_p01"
			}
			missionStopSpeech {

			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_howTo_fly"
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			wait {
				time:r = 1
			}
			triggerEnable {
				target:t = "dialogue_main_controls_p02"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_about_elevator"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "elevator"
				shouldBlink:b = false
			}
			wait {
				time:r = 2
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_about_elevator_continue"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "elevator"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "flight_ailerons_hint"
			}
		}
		else_actions {

		}
	}
	flight_elevator_hint_Thrustmaster {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			triggerDisable {
				target:t = "flight_howTo_Thrustmaster"
				target:t = "dialogue_main_controls_p01"
			}
			missionStopSpeech {

			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_howTo_fly"
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			wait {
				time:r = 1
			}
			triggerEnable {
				target:t = "dialogue_main_controls_p02"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_about_elevator"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "#ui/gameuiskin#tm_stick_to_up_n_down"
				shouldBlink:b = false
			}
			wait {
				time:r = 2
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_about_elevator_continue"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "#ui/gameuiskin#tm_stick_to_up_n_down"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "flight_ailerons_hint_Thrustmaster"
			}
		}
		else_actions {

		}
	}
	flight_ailerons_hint {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			triggerDisable {
				target:t = "flight_elevator_hint"
				target:t = "dialogue_main_controls_p02"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_about_elevator"
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "elevator"
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			hudElementShow {
				element:t = "example_image"
				show:b = false
				time:i = 0
			}
			wait {
				time:r = 1
			}
			triggerEnable {
				target:t = "dialogue_main_controls_p03"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_about_ailerons"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ailerons"
				shouldBlink:b = false
			}
			wait {
				time:r = 2
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_about_ailerons_continue"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ailerons"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "flight_rudder_hint"
			}
		}
		else_actions {

		}
	}
	flight_ailerons_hint_Thrustmaster {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			triggerDisable {
				target:t = "flight_elevator_hint"
				target:t = "dialogue_main_controls_p02"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_about_elevator"
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "elevator"
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			hudElementShow {
				element:t = "example_image"
				show:b = false
				time:i = 0
			}
			wait {
				time:r = 1
			}
			triggerEnable {
				target:t = "dialogue_main_controls_p03"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_about_ailerons"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "#ui/gameuiskin#tm_stick_to_left_n_right"
				shouldBlink:b = false
			}
			wait {
				time:r = 2
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_about_ailerons_continue"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "#ui/gameuiskin#tm_stick_to_left_n_right"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "flight_rudder_hint_Thrustmaster"
			}
		}
		else_actions {

		}
	}
	flight_rudder_hint {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			triggerDisable {
				target:t = "flight_ailerons_hint"
				target:t = "dialogue_main_controls_p03"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_about_ailerons"
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ailerons"
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			wait {
				time:r = 1
			}
			triggerEnable {
				target:t = "dialogue_main_controls_p04"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_about_rudder"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "rudder"
				shouldBlink:b = false
			}
			wait {
				time:r = 2
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_about_rudder_continue"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "rudder"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "flight_waypoint_hint"
			}
		}
		else_actions {

		}
	}
	flight_rudder_hint_Thrustmaster {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			triggerDisable {
				target:t = "flight_ailerons_hint"
				target:t = "dialogue_main_controls_p03"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_about_ailerons"
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ailerons"
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			wait {
				time:r = 1
			}
			triggerEnable {
				target:t = "dialogue_main_controls_p04"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_about_rudder"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "#ui/gameuiskin#tm_stick_rotate"
				shouldBlink:b = false
			}
			wait {
				time:r = 2
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_about_rudder_continue"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "#ui/gameuiskin#tm_stick_rotate"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "flight_waypoint_hint"
			}
		}
		else_actions {

		}
	}
	flight_MA_hint {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			triggerDisable {
				target:t = "dialogue_intro_p01"
				target:t = "dialogue_intro_p02"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_howTo_MA"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "dialogue_main_controls_MA_p01"
			}
			wait {
				time:r = 2
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_howTo_MA_continue"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "flight_MA_move_cursor"
			}
		}
		else_actions {

		}
	}
	flight_MA_move_cursor {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			triggerDisable {
				target:t = "flight_MA_hint"
				target:t = "dialogue_main_controls_MA_p01"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_howTo_MA"
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			missionMarkAsWaypoint {
				visible:b = true
				primary:b = true
				oriented:b = false
				ignoreDifficulty:b = false
				scale:r = 0.5
				target:t = "waypoint00"
			}
			wait {
				time:r = 0.5
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "AXIS_AILERONS"
				control:t = "AXIS_ELEVATOR"
				control:t = "AXIS_RUDDER"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
				control:t = "AXIS_MOUSE_AIM_X"
				control:t = "AXIS_MOUSE_AIM_Y"
			}
			hudElementSelectionShade {
				element:t = "waypoint"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_MA_move_cursor"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			hudElementBlink {
				element:t = "mouseAim"
				time:r = 10
				blink:b = true
			}
			triggerEnable {
				target:t = "flight_MA_cursor_moved"
				target:t = "dialogue_main_controls_MA_p02"
			}
		}
		else_actions {

		}
	}
	flight_MA_cursor_moved {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenCursorIn {
				cursor:t = "mouseAim"
				element:t = "waypoint"
			}
		}
		actions {
			triggerDisable {
				target:t = "dialogue_main_controls_MA_p02"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_MA_move_cursor"
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			playerControls {
				setStatus:t = "disable"
				control:t = "AXIS_AILERONS"
				control:t = "AXIS_ELEVATOR"
				control:t = "AXIS_RUDDER"
				control:t = "AXIS_MOUSE_AIM_X"
				control:t = "AXIS_MOUSE_AIM_Y"
			}
			missionStopSpeech {

			}
			wait {
				time:r = 0.5
			}
			triggerEnable {
				target:t = "dialogue_main_controls_MA_p03"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_thats_right"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			wait {
				time:r = 1
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "AXIS_AILERONS"
				control:t = "AXIS_ELEVATOR"
				control:t = "AXIS_RUDDER"
				control:t = "AXIS_MOUSE_AIM_X"
				control:t = "AXIS_MOUSE_AIM_Y"
			}
			hudElementBlink {
				element:t = "mouseAim"
				time:r = 10
				blink:b = false
			}
			hudElementSelectionShade {
				element:t = ""
			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = true
			}
			triggerEnable {
				target:t = "flight_waypoint_reached"
				target:t = "mission_timer"
			}
			wait {
				time:r = 0.5
			}
			missionStopSpeech {

			}
			moAddMissionObjective {
				target:t = "tutorialB_fighter_waypoints"
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
			}
			triggerEnable {
				target:t = "dialogue_main_controls_p05"
			}
		}
		else_actions {

		}
	}
	flight_waypoint_hint {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			triggerDisable {
				target:t = "flight_rudder_hint"
				target:t = "dialogue_main_controls_p04"
			}
			missionStopSpeech {

			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_about_rudder"
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "rudder"
				shouldBlink:b = false
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_howTo_MA"
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionMarkAsWaypoint {
				visible:b = true
				primary:b = true
				oriented:b = false
				ignoreDifficulty:b = false
				scale:r = 0.5
				target:t = "waypoint00"
			}
			triggerEnable {
				target:t = "dialogue_main_controls_p05"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_waypoint"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			wait {
				time:r = 2
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_waypoint_continue"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "flight_waypoint_start"
			}
		}
		else_actions {

		}
	}
	flight_waypoint_start {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			triggerDisable {
				target:t = "flight_waypoint_hint"
				target:t = "dialogue_main_controls_p05"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_waypoint"
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ALL"
			}
			playerControls {
				setStatus:t = "disable"
				control:t = "ID_FIRE"
				control:t = "ID_FIRE_MGUNS"
				control:t = "ID_FIRE_CANNONS"
				control:t = "AXIS_FIRE"
				control:t = "ID_GEAR"
				control:t = "ID_FLAPS"
				control:t = "AXIS_THROTTLE"
			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = false
			}
			triggerEnable {
				target:t = "mission_timer"
				target:t = "flight_waypoint_reached"
				target:t = "retry_flight_hint"
				target:t = "flight_waypoint_reached_Thrustmaster"
			}
			moAddMissionObjective {
				target:t = "tutorialB_fighter_waypoints"
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
			}
		}
		else_actions {

		}
	}
	flight_waypoint_reached {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			unitWhenInArea {
				math:t = "3D"
				object_type:t = "isAlive"
				object_marking:i = 0
				check_objects:t = "any"
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object:t = "player"
				target:t = "waypoint00"
				object_var_value:i = 0
			}
			playerWhenOptions {
				isThrustmasterHotas4:b = false
			}
		}
		actions {
			triggerDisable {
				target:t = "mission_timer"
				target:t = "dialogue_main_controls_MA_p03"
				target:t = "dialogue_main_controls_p05"
				target:t = "flight_waypoint_reached_Thrustmaster"
			}
			missionStopSpeech {

			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			missionMarkAsWaypoint {
				visible:b = false
				primary:b = true
				oriented:b = false
				ignoreDifficulty:b = false
				scale:r = 0.5
				target:t = "waypoint00"
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "AXIS_THROTTLE"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_howTo_increase_throttle"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "throttle=max"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "throttle_increase"
				target:t = "dialogue_throttle_p01"
			}
		}
		else_actions {

		}
	}
	flight_waypoint_reached_Thrustmaster {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			unitWhenInArea {
				math:t = "3D"
				object_type:t = "isAlive"
				object_marking:i = 0
				check_objects:t = "any"
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object:t = "player"
				target:t = "waypoint00"
				object_var_value:i = 0
			}
			playerWhenOptions {
				isThrustmasterHotas4:b = true
			}
		}
		actions {
			triggerDisable {
				target:t = "mission_timer"
				target:t = "dialogue_main_controls_MA_p03"
				target:t = "dialogue_main_controls_p05"
				target:t = "flight_waypoint_reached"
			}
			missionStopSpeech {

			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			missionMarkAsWaypoint {
				visible:b = false
				primary:b = true
				oriented:b = false
				ignoreDifficulty:b = false
				scale:r = 0.5
				target:t = "waypoint00"
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "AXIS_THROTTLE"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_howTo_increase_throttle"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "#ui/gameuiskin#tm_throttle_up"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "throttle_increase_Thrustmaster"
				target:t = "dialogue_throttle_p01"
			}
		}
		else_actions {

		}
	}
	throttle_increase {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerAxisValueReached {
				value:r = 0.51
				func:t = "more"
				axis:t = "AXIS_THROTTLE"
			}
		}
		actions {
			triggerDisable {
				target:t = "dialogue_throttle_p01"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_howTo_increase_throttle"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "throttle=max"
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = false
			}
			missionMarkAsWaypoint {
				visible:b = true
				primary:b = true
				oriented:b = false
				ignoreDifficulty:b = false
				scale:r = 0.5
				target:t = "waypoint01"
			}
			wait {
				time:r = 0.5
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_throttle_increase"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "throttle=max"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "throttle_increased_flight"
				target:t = "throttle_increased"
				target:t = "mission_timer"
				target:t = "dialogue_throttle_p02"
			}
		}
		else_actions {

		}
	}
	throttle_increase_Thrustmaster {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerAxisValueReached {
				value:r = 0.51
				func:t = "more"
				axis:t = "AXIS_THROTTLE"
			}
		}
		actions {
			triggerDisable {
				target:t = "dialogue_throttle_p01"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_howTo_increase_throttle"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "throttle=max"
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = false
			}
			missionMarkAsWaypoint {
				visible:b = true
				primary:b = true
				oriented:b = false
				ignoreDifficulty:b = false
				scale:r = 0.5
				target:t = "waypoint01"
			}
			wait {
				time:r = 0.5
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_throttle_increase"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "#ui/gameuiskin#tm_throttle_up"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "throttle_increased_flight_Thrustmaster"
				target:t = "throttle_increased"
				target:t = "mission_timer"
				target:t = "dialogue_throttle_p02"
			}
		}
		else_actions {

		}
	}
	throttle_increased {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerAxisValueReached {
				value:r = 0.99
				func:t = "more"
				axis:t = "AXIS_THROTTLE"
			}
		}
		actions {
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_throttle_increase"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "throttle=max"
				shouldBlink:b = false
			}
		}
		else_actions {

		}
	}
	throttle_increased_flight {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			unitWhenInArea {
				math:t = "3D"
				object_type:t = "isAlive"
				object_marking:i = 0
				check_objects:t = "any"
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object:t = "player"
				target:t = "waypoint01"
				object_var_value:i = 0
			}
			playerWhenOptions {
				isThrustmasterHotas4:b = false
			}
		}
		actions {
			triggerDisable {
				target:t = "throttle_increased"
				target:t = "mission_timer"
				target:t = "dialogue_fight_p02"
			}
			missionStopSpeech {

			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_throttle_increase"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "throttle=max"
				shouldBlink:b = false
			}
			missionMarkAsWaypoint {
				visible:b = false
				primary:b = true
				oriented:b = false
				ignoreDifficulty:b = false
				scale:r = 0.5
				target:t = "waypoint01"
			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			wait {
				time:r = 0.5
			}
			unitSetControls {
				controls:t = "power"
				value:r = 1
				force:b = true
				objects:t = "player"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_howTo_decrease_throttle"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "throttle=min"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "throttle_decrease"
				target:t = "dialogue_throttle_p03"
			}
		}
		else_actions {

		}
	}
	throttle_increased_flight_Thrustmaster {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			unitWhenInArea {
				math:t = "3D"
				object_type:t = "isAlive"
				object_marking:i = 0
				check_objects:t = "any"
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object:t = "player"
				target:t = "waypoint01"
				object_var_value:i = 0
			}
			playerWhenOptions {
				isThrustmasterHotas4:b = true
			}
		}
		actions {
			triggerDisable {
				target:t = "throttle_increased"
				target:t = "mission_timer"
				target:t = "dialogue_fight_p02"
			}
			missionStopSpeech {

			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_throttle_increase"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "throttle=max"
				shouldBlink:b = false
			}
			missionMarkAsWaypoint {
				visible:b = false
				primary:b = true
				oriented:b = false
				ignoreDifficulty:b = false
				scale:r = 0.5
				target:t = "waypoint01"
			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			wait {
				time:r = 0.5
			}
			unitSetControls {
				controls:t = "power"
				value:r = 1
				force:b = true
				objects:t = "player"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_howTo_decrease_throttle"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "#ui/gameuiskin#tm_throttle_down"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "throttle_decrease_Thrustmaster"
				target:t = "dialogue_throttle_p03"
			}
		}
		else_actions {

		}
	}
	throttle_decrease {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerAxisValueReached {
				value:r = 0.98
				func:t = "less"
				axis:t = "AXIS_THROTTLE"
			}
		}
		actions {
			triggerDisable {
				target:t = "dialogue_throttle_p03"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_howTo_decrease_throttle"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "throttle=min"
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = true
			}
			missionMarkAsWaypoint {
				visible:b = true
				primary:b = true
				oriented:b = false
				ignoreDifficulty:b = false
				scale:r = 0.5
				target:t = "waypoint02"
			}
			wait {
				time:r = 0.5
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_throttle_decrease"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "throttle=min"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "throttle_decreased"
				target:t = "mission_timer"
				target:t = "dialogue_throttle_p04"
			}
		}
		else_actions {

		}
	}
	throttle_decrease_Thrustmaster {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerAxisValueReached {
				value:r = 0.98
				func:t = "less"
				axis:t = "AXIS_THROTTLE"
			}
		}
		actions {
			triggerDisable {
				target:t = "dialogue_throttle_p03"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_howTo_decrease_throttle"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "throttle=min"
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = true
			}
			missionMarkAsWaypoint {
				visible:b = true
				primary:b = true
				oriented:b = false
				ignoreDifficulty:b = false
				scale:r = 0.5
				target:t = "waypoint02"
			}
			wait {
				time:r = 0.5
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_throttle_decrease"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "#ui/gameuiskin#tm_throttle_down"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "throttle_decreased"
				target:t = "mission_timer"
				target:t = "dialogue_throttle_p04"
			}
		}
		else_actions {

		}
	}
	throttle_decreased {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerAxisValueReached {
				value:r = 0.31
				func:t = "less"
				axis:t = "AXIS_THROTTLE"
			}
			varCompareInt {
				var_value:t = "timer"
				value:i = 5
				comparasion_func:t = "more"
			}
		}
		actions {
			triggerDisable {
				target:t = "dialogue_throttle_p04"
			}
			missionStopSpeech {

			}
			wait {
				time:r = 1
			}
			unitSetControls {
				controls:t = "power"
				value:r = 0.3
				force:b = true
				objects:t = "player"
			}
			triggerDisable {
				target:t = "mission_timer"
			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			triggerEnable {
				target:t = "dialogue_throttle_p05"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_speed_hint"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			hudElementSelectionShade {
				element:t = "speed"
			}
			wait {
				time:r = 2
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_speed_hint_continue"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "throttle_counters_hint"
			}
		}
		else_actions {

		}
	}
	throttle_counters_hint {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			triggerDisable {
				target:t = "throttle_decreased"
				target:t = "dialogue_throttle_p05"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_speed_hint"
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			hudElementSelectionShade {
				element:t = ""
			}
			wait {
				time:r = 0.5
			}
			triggerEnable {
				target:t = "dialogue_throttle_p06"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_throttle_counter_hint"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			hudElementSelectionShade {
				element:t = "throttle"
			}
			wait {
				time:r = 2
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_throttle_counter_hint_continue"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "throttle_main_hint"
			}
		}
		else_actions {

		}
	}
	throttle_main_hint {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			triggerDisable {
				target:t = "throttle_counters_hint"
				target:t = "dialogue_throttle_p06"
			}
			hudElementSelectionShade {
				element:t = ""
			}
			missionStopSpeech {

			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			wait {
				time:r = 0.5
			}
			triggerEnable {
				target:t = "dialogue_throttle_p07"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_throttle_main"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			wait {
				time:r = 2
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_throttle_main_continue"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "throttle_wep"
				target:t = "throttle_wep_Thrustmaster"
			}
		}
		else_actions {

		}
	}
	throttle_wep {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isThrustmasterHotas4:b = false
			}
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			triggerDisable {
				target:t = "throttle_main_hint"
				target:t = "dialogue_throttle_p07"
				target:t = "dialogue_throttle_p08"
				target:t = "throttle_wep_Thrustmaster"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_throttle_main"
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			wait {
				time:r = 0.5
			}
			triggerEnable {
				target:t = "dialogue_throttle_p09"
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "AXIS_THROTTLE"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_throttle_wep"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "throttle=max_hold"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "throttle_wep_flight"
			}
		}
		else_actions {

		}
	}
	throttle_wep_Thrustmaster {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isThrustmasterHotas4:b = true
			}
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			triggerDisable {
				target:t = "throttle_main_hint"
				target:t = "dialogue_throttle_p07"
				target:t = "dialogue_throttle_p08"
				target:t = "throttle_wep"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_throttle_main"
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			wait {
				time:r = 0.5
			}
			triggerEnable {
				target:t = "dialogue_throttle_p09"
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "AXIS_THROTTLE"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_throttle_wep"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "#ui/gameuiskin#tm_throttle_up"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "throttle_wep_flight_Thrustmaster"
			}
		}
		else_actions {

		}
	}
	throttle_wep_flight {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			unitWhenProperties {
				object:t = "player"
				func:t = "more"
				value:r = 0.4
				property:t = "throttle"
				check_filter:t = "all"
				object_type:t = "isAlive"
				object_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
			}
		}
		actions {
			wait {
				time:r = 5
			}
			triggerDisable {
				target:t = "dialogue_throttle_p09"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_throttle_wep"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "throttle=max_hold"
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = true
			}
			wait {
				time:r = 2
			}
			triggerEnable {
				target:t = "dialogue_throttle_p10"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_throttle_wep_hold"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "throttle=max_hold"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "throttle_done"
				target:t = "mission_timer"
				target:t = "throttle_wep_done"
			}
		}
		else_actions {

		}
	}
	throttle_wep_flight_Thrustmaster {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			playerAxisValueReached {
				value:r = 0.4
				func:t = "more"
				axis:t = "AXIS_THROTTLE"
			}
		}
		actions {
			wait {
				time:r = 5
			}
			triggerDisable {
				target:t = "dialogue_throttle_p09"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = true
			}
			wait {
				time:r = 2
			}
			triggerEnable {
				target:t = "dialogue_throttle_p10"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_throttle_wep_hold"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "#ui/gameuiskin#tm_throttle_up"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "throttle_done"
				target:t = "mission_timer"
				target:t = "throttle_wep_done"
			}
		}
		else_actions {

		}
	}
	throttle_wep_done {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			playerAxisValueReached {
				value:r = 1
				func:t = "more"
				axis:t = "AXIS_THROTTLE"
			}
		}
		actions {
			wait {
				time:r = 5
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_throttle_wep_hold"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "throttle=max_hold"
				shouldBlink:b = false
			}
		}
		else_actions {

		}
	}
	throttle_done {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			unitWhenInArea {
				math:t = "3D"
				object_type:t = "isAlive"
				object_marking:i = 0
				check_objects:t = "any"
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object:t = "player"
				target:t = "waypoint02"
				object_var_value:i = 0
			}
		}
		actions {
			triggerDisable {
				target:t = "initial"
				target:t = "flight_if_MA"
				target:t = "flight_if_not_MA"
				target:t = "flight_elevator_hint"
				target:t = "flight_ailerons_hint"
				target:t = "flight_rudder_hint"
				target:t = "flight_MA_hint"
				target:t = "flight_waypoint_hint"
				target:t = "flight_waypoint_start"
				target:t = "flight_waypoint_reached"
				target:t = "throttle_increase"
				target:t = "throttle_increased_flight"
				target:t = "throttle_wep"
				target:t = "throttle_wep_flight"
				target:t = "retry_flight_hint"
				target:t = "mission_timer"
				target:t = "throttle_decrease"
				target:t = "throttle_increased"
				target:t = "throttle_decreased"
				target:t = "throttle_wep_done"
				target:t = "dialogue_throttle_p10"
				target:t = "dialogue_throttle_p11"
			}
			bigQueryAddRecord {
				name:t = "tutorialB_fighter"
				params:t = "task 2/8: movement controls learned"
				event:t = ""
			}
			missionStopSpeech {

			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionMarkAsWaypoint {
				visible:b = false
				primary:b = true
				oriented:b = false
				ignoreDifficulty:b = false
				scale:r = 1
				target:t = "waypoint00"
				target:t = "waypoint01"
				target:t = "waypoint02"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			moSetObjectiveStatus {
				target:t = "tutorialB_fighter_waypoints"
				status:i = 2
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
				object_marking:i = 0
			}
			wait {
				time:r = 0.5
			}
			triggerEnable {
				target:t = "map_initial_hint"
				target:t = "map_initial_hint_Thrustmaster"
			}
		}
		else_actions {

		}
	}
	map_initial_hint {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isThrustmasterHotas4:b = false
			}
		}
		actions {
			triggerDisable {
				target:t = "map_initial_hint_Thrustmaster"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = true
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			wait {
				time:r = 1
			}
			playerControls {
				setStatus:t = "disable"
				control:t = "ALL"
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_FLIGHTMENU"
				control:t = "ID_FLIGHTMENU_SETUP"
				control:t = "ID_CONTINUE"
				control:t = "ID_CONTINUE_SETUP"
			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			moAddMissionObjective {
				target:t = "tutorialB_fighter_map"
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
			}
			wait {
				time:r = 0.5
			}
			triggerEnable {
				target:t = "dialogue_map_p01"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_about_objectives"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ID_TACTICAL_MAP"
				shouldBlink:b = false
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_TACTICAL_MAP"
			}
			triggerEnable {
				target:t = "map_objective_hint"
			}
		}
		else_actions {

		}
	}
	map_initial_hint_Thrustmaster {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isThrustmasterHotas4:b = true
			}
		}
		actions {
			triggerDisable {
				target:t = "map_initial_hint"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = true
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			wait {
				time:r = 1
			}
			playerControls {
				setStatus:t = "disable"
				control:t = "ALL"
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_FLIGHTMENU"
				control:t = "ID_FLIGHTMENU_SETUP"
				control:t = "ID_CONTINUE"
				control:t = "ID_CONTINUE_SETUP"
			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			moAddMissionObjective {
				target:t = "tutorialB_fighter_map"
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
			}
			wait {
				time:r = 0.5
			}
			triggerEnable {
				target:t = "dialogue_map_p01"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_about_objectives"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ID_TACTICAL_MAP=2"
				shouldBlink:b = false
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_TACTICAL_MAP"
			}
			triggerEnable {
				target:t = "map_objective_hint"
			}
		}
		else_actions {

		}
	}
	map_objective_hint {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_TACTICAL_MAP"
			}
		}
		actions {
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_about_objectives"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ID_TACTICAL_MAP"
				shouldBlink:b = false
			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = false
			}
			triggerEnable {
				target:t = "map_press_button_hint"
			}
			wait {
				time:r = 1
			}
			moSetObjectiveStatus {
				target:t = "tutorialB_fighter_map"
				status:i = 2
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
				object_marking:i = 0
			}
		}
		else_actions {

		}
	}
	map_press_button_hint {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			triggerDisable {
				target:t = "mission_timer"
			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			triggerEnable {
				target:t = "map_button_pressed"
				target:t = "mission_timer"
			}
		}
		else_actions {

		}
	}
	map_button_pressed {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "timer"
				value:i = 10
				comparasion_func:t = "more"
			}
		}
		actions {
			triggerDisable {
				target:t = "initial"
				target:t = "flight_MA_hint"
				target:t = "flight_waypoint_hint"
				target:t = "flight_waypoint_start"
				target:t = "flight_waypoint_reached"
				target:t = "retry_flight_hint"
				target:t = "throttle_increase"
				target:t = "throttle_increased_flight"
				target:t = "throttle_wep"
				target:t = "throttle_done"
				target:t = "mission_timer"
				target:t = "throttle_wep_flight"
				target:t = "shooting_press_fire"
				target:t = "retry_balloon_hint"
				target:t = "shooting_balloon_dead"
				target:t = "flight_elevator_hint"
				target:t = "flight_ailerons_hint"
				target:t = "flight_rudder_hint"
				target:t = "flight_if_MA"
				target:t = "flight_if_not_MA"
				target:t = "map_objective_hint"
				target:t = "map_press_button_hint"
				target:t = "map_initial_hint"
				target:t = "dialogue_map_p01"
				target:t = "dialogue_map_p02"
			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			bigQueryAddRecord {
				name:t = "tutorialB_fighter"
				params:t = "task 3/8: map controls learned"
				event:t = ""
			}
			missionStopSpeech {

			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			playerControls {
				setStatus:t = "disable"
				control:t = "ID_TACTICAL_MAP"
			}
			wait {
				time:r = 0.5
			}
			triggerEnable {
				target:t = "shooting_initial"
			}
		}
		else_actions {

		}
	}
	retry_flight_hint {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "timer"
				value:i = 30
				comparasion_func:t = "more"
			}
			unitWhenStatus {
				object_type:t = "isUseless"
				object_marking:i = 0
				check_objects:t = "all"
				target_type:t = "isAlive"
				check_period:r = 1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				object:t = "player"
			}
		}
		actions {
			triggerDisable {
				target:t = "initial"
				target:t = "flight_if_MA"
				target:t = "flight_if_not_MA"
				target:t = "flight_elevator_hint"
				target:t = "flight_ailerons_hint"
				target:t = "flight_rudder_hint"
				target:t = "flight_MA_hint"
				target:t = "flight_waypoint_hint"
				target:t = "flight_waypoint_start"
				target:t = "flight_waypoint_reached"
				target:t = "throttle_increase"
				target:t = "throttle_increased_flight"
				target:t = "throttle_wep"
				target:t = "throttle_wep_flight"
				target:t = "throttle_done"
				target:t = "map_initial_hint"
				target:t = "map_objective_hint"
				target:t = "map_press_button_hint"
				target:t = "map_button_pressed"
				target:t = "throttle_increased"
				target:t = "throttle_decrease"
				target:t = "throttle_decreased"
				target:t = "throttle_wep_done"
			}
			triggerDisable {
				target:t = "dialogue_intro_p01"
				target:t = "dialogue_intro_p02"
				target:t = "dialogue_main_controls_p01"
				target:t = "dialogue_main_controls_p02"
				target:t = "dialogue_main_controls_p03"
				target:t = "dialogue_main_controls_p04"
				target:t = "dialogue_main_controls_MA_p01"
				target:t = "dialogue_main_controls_MA_p02"
				target:t = "dialogue_main_controls_MA_p03"
				target:t = "dialogue_main_controls_p05"
				target:t = "dialogue_throttle_p01"
				target:t = "dialogue_throttle_p02"
				target:t = "dialogue_throttle_p03"
				target:t = "dialogue_throttle_p04"
				target:t = "dialogue_throttle_p05"
				target:t = "dialogue_throttle_p06"
				target:t = "dialogue_throttle_p07"
				target:t = "dialogue_throttle_p08"
				target:t = "dialogue_throttle_p09"
				target:t = "dialogue_throttle_p10"
				target:t = "dialogue_throttle_p11"
				target:t = "dialogue_map_p01"
				target:t = "dialogue_map_p02"
				target:t = "dialogue_immobile_p01"
				target:t = "dialogue_immobile_p02"
				target:t = "dialogue_immobile_p03"
				target:t = "dialogue_immobile_p04"
				target:t = "dialogue_fight_p01"
				target:t = "dialogue_fight_p02"
				target:t = "dialogue_fight_p03"
				target:t = "dialogue_fight_p04"
				target:t = "dialogue_fight_p05"
				target:t = "dialogue_fight_MA_p05"
				target:t = "dialogue_fight_p06"
				target:t = "dialogue_fight_MA_p06"
				target:t = "dialogue_fight_MA_p07"
				target:t = "dialogue_fight_p07"
				target:t = "dialogue_fight_p08"
				target:t = "dialogue_fight_p09"
				target:t = "dialogue_training_p01"
				target:t = "dialogue_training_p02"
				target:t = "dialogue_ground_fight_p01"
				target:t = "dialogue_ground_fight_p02"
				target:t = "dialogue_ground_fight_p03"
				target:t = "dialogue_ground_fight_p04"
				target:t = "dialogue_ground_fight_p05"
				target:t = "dialogue_ground_fight_p06"
				target:t = "dialogue_ground_fight_p07"
				target:t = "dialogue_ground_fight_p08"
				target:t = "dialogue_ground_fight_p09"
				target:t = "dialogue_ground_fight_MA_p09"
				target:t = "dialogue_victory_p01"
				target:t = "dialogue_victory_p02"
				target:t = "dialogue_victory_p03"
			}
			triggerDisable {
				target:t = "flight_if_Thrustmaster"
				target:t = "flight_howTo_Thrustmaster"
				target:t = "flight_elevator_hint_Thrustmaster"
				target:t = "flight_ailerons_hint_Thrustmaster"
				target:t = "flight_rudder_hint_Thrustmaster"
				target:t = "flight_waypoint_reached_Thrustmaster"
				target:t = "throttle_increase_Thrustmaster"
				target:t = "throttle_increased_flight_Thrustmaster"
				target:t = "throttle_decrease_Thrustmaster"
				target:t = "throttle_wep_Thrustmaster"
				target:t = "throttle_wep_flight_Thrustmaster"
				target:t = "map_initial_hint_Thrustmaster"
				target:t = "shooting_initial_hint_Thrustmaster"
				target:t = "shooting_initial_hint"
				target:t = "shootingNotMA_precision_Thrustmaster"
				target:t = "shootingNotMA_initial_hint"
				target:t = "shootingNotMA_initial_hint_Thrustmaster"
				target:t = "training_look_at_the_target_Thrustmaster"
				target:t = "assault_zoom_in_Thrustmaster"
				target:t = "assault_zoom_out_Thrustmaster"
				target:t = "assault_targets_indicator_hint_Thrustmaster"
				target:t = "assault_change_direction_Thrustmaster"
			}
			triggerDisable {
				target:t = "shootingMA_screen01"
				target:t = "shootingMA_video01"
				target:t = "shootingMA_video02"
				target:t = "shootingMA_video03"
				target:t = "shooting_start"
				target:t = "shooting_start_ps4_MA"
				target:t = "shootingNotMA_screen01"
				target:t = "shootingNotMA_screen02"
				target:t = "shootingNotMA_screen03"
			}
			missionStopSpeech {

			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			missionMarkAsWaypoint {
				visible:b = false
				primary:b = true
				oriented:b = false
				ignoreDifficulty:b = false
				scale:r = 0.5
				target:t = "waypoint00"
				target:t = "waypoint01"
				target:t = "waypoint02"
			}
			playerControls {
				setStatus:t = "disable"
				control:t = "ALL"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_retry"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			wait {
				time:r = 2
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_retry"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "initial"
			}
		}
		else_actions {

		}
	}
	shooting_initial {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0
			}
		}
		conditions {

		}
		actions {
			triggerDisable {
				target:t = "initial"
				target:t = "flight_MA_hint"
				target:t = "flight_waypoint_hint"
				target:t = "flight_waypoint_start"
				target:t = "flight_waypoint_reached"
				target:t = "retry_flight_hint"
				target:t = "throttle_increase"
				target:t = "throttle_increased_flight"
				target:t = "throttle_wep"
				target:t = "throttle_done"
				target:t = "mission_timer"
				target:t = "throttle_wep_flight"
				target:t = "shooting_press_fire"
				target:t = "retry_balloon_hint"
				target:t = "shooting_balloon_dead"
				target:t = "flight_elevator_hint"
				target:t = "flight_ailerons_hint"
				target:t = "flight_rudder_hint"
				target:t = "flight_if_MA"
				target:t = "flight_if_not_MA"
				target:t = "map_objective_hint"
				target:t = "map_press_button_hint"
				target:t = "map_initial_hint"
				target:t = "map_button_pressed"
				target:t = "shooting_initial_hint"
			}
			triggerDisable {
				target:t = "flight_if_Thrustmaster"
				target:t = "flight_howTo_Thrustmaster"
				target:t = "flight_elevator_hint_Thrustmaster"
				target:t = "flight_ailerons_hint_Thrustmaster"
				target:t = "flight_rudder_hint_Thrustmaster"
				target:t = "flight_waypoint_reached_Thrustmaster"
				target:t = "throttle_increase_Thrustmaster"
				target:t = "throttle_increased_flight_Thrustmaster"
				target:t = "throttle_decrease_Thrustmaster"
				target:t = "throttle_wep_Thrustmaster"
				target:t = "throttle_wep_flight_Thrustmaster"
				target:t = "map_initial_hint_Thrustmaster"
				target:t = "shooting_initial_hint_Thrustmaster"
				target:t = "shooting_initial_hint"
				target:t = "shootingNotMA_precision_Thrustmaster"
				target:t = "shootingNotMA_initial_hint"
				target:t = "shootingNotMA_initial_hint_Thrustmaster"
				target:t = "training_look_at_the_target_Thrustmaster"
				target:t = "assault_zoom_in_Thrustmaster"
				target:t = "assault_zoom_out_Thrustmaster"
				target:t = "assault_targets_indicator_hint_Thrustmaster"
				target:t = "assault_change_direction_Thrustmaster"
			}
			triggerDisable {
				target:t = "shootingMA_screen01"
				target:t = "shootingMA_video01"
				target:t = "shootingMA_video02"
				target:t = "shootingMA_video03"
				target:t = "shooting_start"
				target:t = "shooting_start_ps4_MA"
				target:t = "shootingNotMA_screen01"
				target:t = "shootingNotMA_screen02"
				target:t = "shootingNotMA_screen03"
			}
			playerControls {
				setStatus:t = "disable"
				control:t = "ALL"
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_FLIGHTMENU"
				control:t = "ID_FLIGHTMENU_SETUP"
				control:t = "ID_CONTINUE"
				control:t = "ID_CONTINUE_SETUP"
			}
			missionSetFade {
				mode:t = "fadeOut"
				color:p3 = 0, 0, 0
				time:r = 0.1
			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			unitWakeUp {
				target:t = "target_balloon"
			}
			wait {
				time:r = 0.8
			}
			unitRestore {
				ressurectIfDead:b = true
				fullRestore:b = true
				target_marking:i = 0
				target:t = "target_balloon"
				target:t = "player"
				ammoRestore:b = true
			}
			playerOptions {
				respawnBullets:b = true
			}
			missionKillEffects {
				area:t = "big_area"
			}
			wait {
				time:r = 0.2
			}
			unitMoveTo {
				target:t = "player_spawn01"
				follow_target:b = false
				teleportHeightType:t = "target"
				useUnitHeightForTele:b = false
				shouldKeepFormation:b = false
				teleportHeightValue:r = 0
				horizontalDirectionForTeleport:b = true
				waypointReachedDist:r = 10
				recalculatePathDist:r = -1
				object_marking:i = 0
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				fastClimb:b = false
				destTimeMode:b = false
				target_var_name:t = ""
				target_var_comp_op:t = "equal"
				target_var_value:i = 0
				object:t = "player"
				move_type:t = "teleport"
				speed:r = 400
				lookat:t = "target_balloon"
				velocity:r = 400
			}
			missionSetFade {
				mode:t = "fadeIn"
				color:p3 = 0, 0, 0
				time:r = 0.6
			}
			wait {
				time:r = 0.7
			}
			unitForceRearmSpeed {
				rearmSpeedK:r = 100000
				target:t = "player"
			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			triggerEnable {
				target:t = "dialogue_immobile_p01"
			}
			wait {
				time:r = 1
			}
			moAddMissionObjective {
				target:t = "tutorialB_fighter_balloon"
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
			}
			wait {
				time:r = 1
			}
			triggerEnable {
				target:t = "shooting_initial_hint"
				target:t = "shooting_initial_hint_Thrustmaster"
				target:t = "retry_balloon_hint"
			}
		}
		else_actions {

		}
	}
	shooting_initial_hint {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0
			}
		}
		conditions {
			playerWhenOptions {
				isThrustmasterHotas4:b = false
			}
		}
		actions {
			triggerDisable {
				target:t = "shooting_initial_hint_Thrustmaster"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_howTo_immobile"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "pseudo_fire"
				shouldBlink:b = false
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_FIRE"
				control:t = "ID_FIRE_MGUNS"
				control:t = "ID_FIRE_CANNONS"
				control:t = "AXIS_FIRE"
			}
			triggerEnable {
				target:t = "shooting_press_fire"
			}
		}
		else_actions {

		}
	}
	shooting_initial_hint_Thrustmaster {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0
			}
		}
		conditions {
			playerWhenOptions {
				isThrustmasterHotas4:b = true
			}
		}
		actions {
			triggerDisable {
				target:t = "shooting_initial_hint"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_howTo_immobile"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ID_FIRE_CANNONS=2"
				shouldBlink:b = false
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_FIRE"
				control:t = "ID_FIRE_MGUNS"
				control:t = "ID_FIRE_CANNONS"
				control:t = "AXIS_FIRE"
			}
			triggerEnable {
				target:t = "shooting_press_fire"
			}
		}
		else_actions {

		}
	}
	shooting_press_fire {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_FIRE"
			}
			playerShortcutPressed {
				control:t = "ID_FIRE_MGUNS"
			}
			playerShortcutPressed {
				control:t = "ID_FIRE_CANNONS"
			}
			playerAxisValueReached {
				value:r = 0.3
				func:t = "more"
				axis:t = "AXIS_FIRE"
			}
		}
		actions {
			triggerDisable {
				target:t = "dialogue_immobile_p01"
				target:t = "dialogue_immobile_p02"
				target:t = "dialogue_immobile_p03"
				target:t = "dialogue_immobile_p04"
			}
			missionStopSpeech {

			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_howTo_immobile"
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "pseudo_fire"
				shouldBlink:b = false
			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = false
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ALL"
			}
			triggerEnable {
				target:t = "shooting_balloon_dead"
				target:t = "mission_timer"
				target:t = "retry_balloon_hint"
			}
		}
		else_actions {

		}
	}
	shooting_balloon_dead {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			unitWhenStatus {
				object_type:t = "isKilled"
				object_marking:i = 0
				check_objects:t = "all"
				target_type:t = "isAlive"
				check_period:r = 1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				object:t = "target_balloon"
			}
		}
		actions {
			triggerDisable {
				target:t = "initial"
				target:t = "flight_MA_hint"
				target:t = "flight_waypoint_hint"
				target:t = "flight_waypoint_start"
				target:t = "flight_waypoint_reached"
				target:t = "retry_flight_hint"
				target:t = "throttle_increase"
				target:t = "throttle_increased_flight"
				target:t = "throttle_wep"
				target:t = "throttle_done"
				target:t = "mission_timer"
				target:t = "throttle_wep_flight"
				target:t = "shooting_press_fire"
				target:t = "shooting_initial"
				target:t = "flight_elevator_hint"
				target:t = "flight_ailerons_hint"
				target:t = "flight_rudder_hint"
				target:t = "flight_if_MA"
				target:t = "flight_if_not_MA"
				target:t = "map_objective_hint"
				target:t = "map_press_button_hint"
				target:t = "map_initial_hint"
				target:t = "map_button_pressed"
				target:t = "retry_balloon_hint"
			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			bigQueryAddRecord {
				name:t = "tutorialB_fighter"
				params:t = "task 4/8: player killed the balloon"
				event:t = ""
			}
			moSetObjectiveStatus {
				target:t = "tutorialB_fighter_balloon"
				status:i = 2
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
				object_marking:i = 0
			}
			wait {
				time:r = 2
			}
			triggerEnable {
				target:t = "shooting_kill_plane_initial"
				target:t = "shootingNotMA_kill_plane_initial"
			}
		}
		else_actions {

		}
	}
	retry_balloon_hint {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "timer"
				value:i = 20
				comparasion_func:t = "more"
			}
			unitWhenStatus {
				object_type:t = "isUseless"
				object_marking:i = 0
				check_objects:t = "all"
				target_type:t = "isAlive"
				check_period:r = 1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				object:t = "player"
			}
		}
		actions {
			triggerDisable {
				target:t = "initial"
				target:t = "flight_MA_hint"
				target:t = "flight_waypoint_hint"
				target:t = "flight_waypoint_start"
				target:t = "flight_waypoint_reached"
				target:t = "retry_flight_hint"
				target:t = "throttle_increase"
				target:t = "throttle_increased_flight"
				target:t = "throttle_wep"
				target:t = "throttle_done"
				target:t = "mission_timer"
				target:t = "throttle_wep_flight"
				target:t = "shooting_press_fire"
				target:t = "shooting_initial"
				target:t = "shooting_balloon_dead"
				target:t = "flight_elevator_hint"
				target:t = "flight_ailerons_hint"
				target:t = "flight_rudder_hint"
				target:t = "flight_if_MA"
				target:t = "flight_if_not_MA"
				target:t = "map_objective_hint"
				target:t = "map_press_button_hint"
				target:t = "map_initial_hint"
				target:t = "map_button_pressed"
			}
			triggerDisable {
				target:t = "dialogue_intro_p01"
				target:t = "dialogue_intro_p02"
				target:t = "dialogue_main_controls_p01"
				target:t = "dialogue_main_controls_p02"
				target:t = "dialogue_main_controls_p03"
				target:t = "dialogue_main_controls_p04"
				target:t = "dialogue_main_controls_MA_p01"
				target:t = "dialogue_main_controls_MA_p02"
				target:t = "dialogue_main_controls_MA_p03"
				target:t = "dialogue_main_controls_p05"
				target:t = "dialogue_throttle_p01"
				target:t = "dialogue_throttle_p02"
				target:t = "dialogue_throttle_p03"
				target:t = "dialogue_throttle_p04"
				target:t = "dialogue_throttle_p05"
				target:t = "dialogue_throttle_p06"
				target:t = "dialogue_throttle_p07"
				target:t = "dialogue_throttle_p08"
				target:t = "dialogue_throttle_p09"
				target:t = "dialogue_throttle_p10"
				target:t = "dialogue_throttle_p11"
				target:t = "dialogue_map_p01"
				target:t = "dialogue_map_p02"
				target:t = "dialogue_immobile_p01"
				target:t = "dialogue_immobile_p02"
				target:t = "dialogue_immobile_p03"
				target:t = "dialogue_immobile_p04"
				target:t = "dialogue_fight_p01"
				target:t = "dialogue_fight_p02"
				target:t = "dialogue_fight_p03"
				target:t = "dialogue_fight_p04"
				target:t = "dialogue_fight_p05"
				target:t = "dialogue_fight_MA_p05"
				target:t = "dialogue_fight_p06"
				target:t = "dialogue_fight_MA_p06"
				target:t = "dialogue_fight_MA_p07"
				target:t = "dialogue_fight_p07"
				target:t = "dialogue_fight_p08"
				target:t = "dialogue_fight_p09"
				target:t = "dialogue_training_p01"
				target:t = "dialogue_training_p02"
				target:t = "dialogue_ground_fight_p01"
				target:t = "dialogue_ground_fight_p02"
				target:t = "dialogue_ground_fight_p03"
				target:t = "dialogue_ground_fight_p04"
				target:t = "dialogue_ground_fight_p05"
				target:t = "dialogue_ground_fight_p06"
				target:t = "dialogue_ground_fight_p07"
				target:t = "dialogue_ground_fight_p08"
				target:t = "dialogue_ground_fight_p09"
				target:t = "dialogue_ground_fight_MA_p09"
				target:t = "dialogue_victory_p01"
				target:t = "dialogue_victory_p02"
				target:t = "dialogue_victory_p03"
			}
			triggerDisable {
				target:t = "flight_if_Thrustmaster"
				target:t = "flight_howTo_Thrustmaster"
				target:t = "flight_elevator_hint_Thrustmaster"
				target:t = "flight_ailerons_hint_Thrustmaster"
				target:t = "flight_rudder_hint_Thrustmaster"
				target:t = "flight_waypoint_reached_Thrustmaster"
				target:t = "throttle_increase_Thrustmaster"
				target:t = "throttle_increased_flight_Thrustmaster"
				target:t = "throttle_decrease_Thrustmaster"
				target:t = "throttle_wep_Thrustmaster"
				target:t = "throttle_wep_flight_Thrustmaster"
				target:t = "map_initial_hint_Thrustmaster"
				target:t = "shooting_initial_hint_Thrustmaster"
				target:t = "shooting_initial_hint"
				target:t = "shootingNotMA_precision_Thrustmaster"
				target:t = "shootingNotMA_initial_hint"
				target:t = "shootingNotMA_initial_hint_Thrustmaster"
				target:t = "training_look_at_the_target_Thrustmaster"
				target:t = "assault_zoom_in_Thrustmaster"
				target:t = "assault_zoom_out_Thrustmaster"
				target:t = "assault_targets_indicator_hint_Thrustmaster"
				target:t = "assault_change_direction_Thrustmaster"
			}
			triggerDisable {
				target:t = "shootingMA_screen01"
				target:t = "shootingMA_video01"
				target:t = "shootingMA_video02"
				target:t = "shootingMA_video03"
				target:t = "shooting_start"
				target:t = "shooting_start_ps4_MA"
				target:t = "shootingNotMA_screen01"
				target:t = "shootingNotMA_screen02"
				target:t = "shootingNotMA_screen03"
			}
			missionStopSpeech {

			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = true
			}
			playerControls {
				setStatus:t = "disable"
				control:t = "ALL"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_retry"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			wait {
				time:r = 2
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_retry"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "shooting_initial"
			}
		}
		else_actions {

		}
	}
	shootingNotMA_kill_plane_initial {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isMouseAim:b = false
			}
			playerWhenOptions {
				isGamepadPseudoMouseAim:b = false
			}
		}
		actions {
			triggerDisable {
				target:t = "initial"
				target:t = "flight_MA_hint"
				target:t = "flight_waypoint_hint"
				target:t = "flight_waypoint_start"
				target:t = "flight_waypoint_reached"
				target:t = "retry_flight_hint"
				target:t = "throttle_increase"
				target:t = "throttle_increased_flight"
				target:t = "throttle_wep"
				target:t = "throttle_done"
				target:t = "mission_timer"
				target:t = "throttle_wep_flight"
				target:t = "shooting_press_fire"
				target:t = "shooting_initial"
				target:t = "shooting_balloon_dead"
				target:t = "shooting_lock_target_pressed"
				target:t = "shooting_plane_killed"
				target:t = "retry_plane_hint"
				target:t = "flight_elevator_hint"
				target:t = "flight_ailerons_hint"
				target:t = "flight_rudder_hint"
				target:t = "flight_if_MA"
				target:t = "flight_if_not_MA"
				target:t = "map_objective_hint"
				target:t = "map_press_button_hint"
				target:t = "map_initial_hint"
				target:t = "map_button_pressed"
				target:t = "shooting_precision"
				target:t = "shooting_cursor_moved"
				target:t = "shooting_keep_aiming"
				target:t = "shooting_open_fire"
				target:t = "shootingNotMA_plane_killed"
				target:t = "retry_planeNotMA_hint"
				target:t = "shootingNotMA_lock_target_pressed"
				target:t = "shootingNotMA_precision"
				target:t = "shootingNotMA_shoot_now"
			}
			triggerDisable {
				target:t = "flight_if_Thrustmaster"
				target:t = "flight_howTo_Thrustmaster"
				target:t = "flight_elevator_hint_Thrustmaster"
				target:t = "flight_ailerons_hint_Thrustmaster"
				target:t = "flight_rudder_hint_Thrustmaster"
				target:t = "flight_waypoint_reached_Thrustmaster"
				target:t = "throttle_increase_Thrustmaster"
				target:t = "throttle_increased_flight_Thrustmaster"
				target:t = "throttle_decrease_Thrustmaster"
				target:t = "throttle_wep_Thrustmaster"
				target:t = "throttle_wep_flight_Thrustmaster"
				target:t = "map_initial_hint_Thrustmaster"
				target:t = "shooting_initial_hint_Thrustmaster"
				target:t = "shooting_initial_hint"
				target:t = "shootingNotMA_precision_Thrustmaster"
				target:t = "shootingNotMA_initial_hint"
				target:t = "shootingNotMA_initial_hint_Thrustmaster"
				target:t = "training_look_at_the_target_Thrustmaster"
				target:t = "assault_zoom_in_Thrustmaster"
				target:t = "assault_zoom_out_Thrustmaster"
				target:t = "assault_targets_indicator_hint_Thrustmaster"
				target:t = "assault_change_direction_Thrustmaster"
			}
			triggerDisable {
				target:t = "shootingMA_screen01"
				target:t = "shootingMA_video01"
				target:t = "shootingMA_video02"
				target:t = "shootingMA_video03"
				target:t = "shooting_start"
				target:t = "shooting_start_ps4_MA"
				target:t = "shootingNotMA_screen01"
				target:t = "shootingNotMA_screen02"
				target:t = "shootingNotMA_screen03"
			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			playerControls {
				setStatus:t = "disable"
				control:t = "ALL"
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_FLIGHTMENU"
				control:t = "ID_FLIGHTMENU_SETUP"
				control:t = "ID_CONTINUE"
				control:t = "ID_CONTINUE_SETUP"
			}
			missionSetFade {
				mode:t = "fadeOut"
				color:p3 = 0, 0, 0
				time:r = 0.5
			}
			wait {
				time:r = 0.6
			}
			unitRestore {
				ressurectIfDead:b = true
				fullRestore:b = true
				target_marking:i = 0
				target:t = "player"
				target:t = "target_plane01"
				ammoRestore:b = true
			}
			playerOptions {
				respawnBullets:b = true
			}
			missionKillEffects {
				area:t = "big_area"
			}
			unitWakeUp {
				target:t = "target_plane01"
			}
			wait {
				time:r = 0.15
			}
			unitMoveTo {
				target:t = "target_plane01_starting_positionNotMA"
				follow_target:b = false
				teleportHeightType:t = "target"
				useUnitHeightForTele:b = false
				shouldKeepFormation:b = false
				teleportHeightValue:r = 0
				horizontalDirectionForTeleport:b = true
				waypointReachedDist:r = 10
				recalculatePathDist:r = -1
				object_marking:i = 0
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				fastClimb:b = false
				destTimeMode:b = false
				target_var_name:t = ""
				target_var_comp_op:t = "equal"
				target_var_value:i = 0
				object:t = "target_plane01"
				move_type:t = "teleport"
				lookat:t = "way_of_plane01"
			}
			wait {
				time:r = 0.15
			}
			unitMoveTo {
				target:t = "player_spawn02"
				follow_target:b = false
				teleportHeightType:t = "target"
				useUnitHeightForTele:b = false
				shouldKeepFormation:b = false
				teleportHeightValue:r = 0
				horizontalDirectionForTeleport:b = true
				waypointReachedDist:r = 10
				recalculatePathDist:r = -1
				object_marking:i = 0
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				fastClimb:b = false
				destTimeMode:b = false
				target_var_name:t = ""
				target_var_comp_op:t = "equal"
				target_var_value:i = 0
				object:t = "player"
				move_type:t = "teleport"
				lookat:t = "player_spawn04"
			}
			unitMoveTo {
				target:t = "way_of_plane01"
				follow_target:b = false
				teleportHeightType:t = "absolute"
				useUnitHeightForTele:b = true
				shouldKeepFormation:b = false
				teleportHeightValue:r = 1000
				horizontalDirectionForTeleport:b = true
				waypointReachedDist:r = 10
				recalculatePathDist:r = -1
				object_marking:i = 0
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				fastClimb:b = false
				destTimeMode:b = false
				target_var_name:t = ""
				target_var_comp_op:t = "equal"
				target_var_value:i = 0
				object:t = "target_plane01"
			}
			missionSetFade {
				mode:t = "fadeIn"
				color:p3 = 0, 0, 0
				time:r = 0.5
			}
			__wait {
				time:r = 0.6
			}
			unitForceRearmSpeed {
				rearmSpeedK:r = 30
				target:t = "player"
			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			triggerEnable {
				target:t = "shootingNotMA_screen01"
			}
		}
		else_actions {

		}
	}
	shootingNotMA_screen01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			hudElementShow {
				element:t = "air_tutorial_basic_shooting_all_images_and_texts_noMA"
				show:b = true
				time:i = -1
			}
			wait {
				time:r = 0.5
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_fighter_video_01"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "tutorialB_fighter_forestall_explanation_notMA01"
			}
			wait {
				time:r = 2
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_fighter_video_01_continue"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "shootingNotMA_screen02"
			}
		}
		else_actions {

		}
	}
	shootingNotMA_screen02 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			hudElementShow {
				element:t = "air_tutorial_basic_shooting_all_images_and_texts_noMA"
				show:b = false
				time:i = -1
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_fighter_video_02_notMA"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			hudElementShow {
				element:t = "air_tutorial_basic_shooting_screen03_noMA"
				show:b = true
				time:i = -1
			}
			triggerEnable {
				target:t = "tutorialB_fighter_forestall_explanation_notMA02"
			}
			wait {
				time:r = 2
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_fighter_video_02_notMA_continue"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "shootingNotMA_screen03"
			}
		}
		else_actions {

		}
	}
	shootingNotMA_screen03 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			hudElementShow {
				element:t = "air_tutorial_basic_shooting_screen04_noMA"
				show:b = true
				time:i = -1
			}
			hudElementShow {
				element:t = "air_tutorial_basic_shooting_screen03_noMA"
				show:b = false
				time:i = -1
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_fighter_video_04"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "tutorialB_fighter_forestall_explanation04"
			}
			wait {
				time:r = 2
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_fighter_video_04_continue"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "shootingNotMA_precision"
				target:t = "retry_planeNotMA_hint"
				target:t = "shootingNotMA_precision_Thrustmaster"
			}
		}
		else_actions {

		}
	}
	shootingNotMA_initial_hint {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isThrustmasterHotas4:b = false
			}
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			triggerDisable {
				target:t = "shootingNotMA_initial_hint_Thrustmaster"
			}
			playerLockTarget {
				target:t = "target_plane01"
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_LOCK_TARGET"
			}
			moAddMissionObjective {
				target:t = "tutorialB_fighter_planes"
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
			}
			hudElementShow {
				element:t = "air_tutorial_basic_shooting_screen04_noMA"
				show:b = false
				time:i = -1
			}
			wait {
				time:r = 1
			}
			triggerEnable {
				target:t = "dialogue_fightNotMA_p05"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_howTo_mobile"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ID_LOCK_TARGET"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "shootingNotMA_lock_target_pressed"
			}
		}
		else_actions {

		}
	}
	shootingNotMA_initial_hint_Thrustmaster {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isThrustmasterHotas4:b = true
			}
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			triggerDisable {
				target:t = "shootingNotMA_initial_hint"
			}
			playerLockTarget {
				target:t = "target_plane01"
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_LOCK_TARGET"
			}
			moAddMissionObjective {
				target:t = "tutorialB_fighter_planes"
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
			}
			hudElementShow {
				element:t = "air_tutorial_basic_shooting_screen04_noMA"
				show:b = false
				time:i = -1
			}
			wait {
				time:r = 1
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_howTo_mobile"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ID_LOCK_TARGET=2"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "dialogue_fightNotMA_p01"
			}
			triggerEnable {
				target:t = "shootingNotMA_lock_target_pressed"
			}
		}
		else_actions {

		}
	}
	shootingNotMA_lock_target_pressed {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_LOCK_TARGET"
			}
		}
		actions {
			triggerDisable {
				target:t = "dialogue_fightNotMA_p01"
				target:t = "dialogue_fight_p02"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_howTo_mobile"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ID_LOCK_TARGET"
				item:t = "ID_LOCK_TARGET=2"
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			wait {
				time:r = 0.5
			}
			hudElementSelectionShade {
				element:t = "forestall"
			}
			triggerEnable {
				target:t = "dialogue_fight_p03"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_forestallNotMA"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			wait {
				time:r = 2
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_forestallNotMA_continue"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "shootingNotMA_precision"
				target:t = "shootingNotMA_precision_Thrustmaster"
			}
		}
		else_actions {

		}
	}
	shootingNotMA_precision {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isThrustmasterHotas4:b = false
			}
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			triggerDisable {
				target:t = "dialogue_fight_p03"
				target:t = "dialogue_fight_p04"
				target:t = "shootingNotMA_precision_Thrustmaster"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_forestall"
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			hudElementShow {
				element:t = "air_tutorial_basic_shooting_screen04_noMA"
				show:b = false
				time:i = -1
			}
			wait {
				time:r = 0.5
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "AXIS_AILERONS"
				control:t = "AXIS_ELEVATOR"
				control:t = "AXIS_RUDDER"
				control:t = "AXIS_THROTTLE"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
				control:t = "AXIS_MOUSE_AIM_X"
				control:t = "AXIS_MOUSE_AIM_Y"
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_FIRE"
				control:t = "ID_FIRE_MGUNS"
				control:t = "ID_FIRE_CANNONS"
				control:t = "AXIS_FIRE"
			}
			triggerEnable {
				target:t = "dialogue_fightNotMA_p05"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_cursorNotMA"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "pseudo_fire"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "shootingNotMA_shoot_now"
			}
		}
		else_actions {

		}
	}
	shootingNotMA_precision_Thrustmaster {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isThrustmasterHotas4:b = true
			}
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			triggerDisable {
				target:t = "dialogue_fight_p03"
				target:t = "dialogue_fight_p04"
				target:t = "shootingNotMA_precision"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_forestall"
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			hudElementShow {
				element:t = "air_tutorial_basic_shooting_screen04_noMA"
				show:b = false
				time:i = -1
			}
			wait {
				time:r = 0.5
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "AXIS_AILERONS"
				control:t = "AXIS_ELEVATOR"
				control:t = "AXIS_RUDDER"
				control:t = "AXIS_THROTTLE"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
				control:t = "AXIS_MOUSE_AIM_X"
				control:t = "AXIS_MOUSE_AIM_Y"
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_FIRE"
				control:t = "ID_FIRE_MGUNS"
				control:t = "ID_FIRE_CANNONS"
				control:t = "AXIS_FIRE"
			}
			triggerEnable {
				target:t = "dialogue_fightNotMA_p05"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_cursorNotMA"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ID_FIRE_CANNONS=2"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "shootingNotMA_shoot_now"
			}
		}
		else_actions {

		}
	}
	shootingNotMA_shoot_now {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_FIRE"
			}
			playerShortcutPressed {
				control:t = "ID_FIRE_MGUNS"
			}
			playerShortcutPressed {
				control:t = "ID_FIRE_CANNONS"
			}
			playerAxisValueReached {
				value:r = 0.1
				func:t = "more"
				axis:t = "AXIS_FIRE"
			}
		}
		actions {
			triggerDisable {
				target:t = "dialogue_fightNotMA_p05"
				target:t = "dialogue_fight_p08"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			hudElementSelectionShade {
				element:t = ""
			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = true
			}
			triggerEnable {
				target:t = "shootingNotMA_plane_killed"
				target:t = "mission_timer"
			}
		}
		else_actions {

		}
	}
	shootingNotMA_plane_killed {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			unitWhenStatus {
				object_type:t = "damaged"
				object_marking:i = 0
				check_objects:t = "any"
				target_type:t = "isAlive"
				check_period:r = 1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				object:t = "target_plane01"
			}
		}
		actions {
			unitDamage {
				part:i = 21
				power:r = 1
				useEffect:b = false
				countEffects:i = 1
				delay:p2 = 1, 1
				offset:p3 = 0, 0, 0
				radiusOffset:p2 = 10, 15
				target:t = "target_plane01"
				doExplosion:b = true
			}
			triggerEnable {
				target:t = "dialogue_fight_p09"
			}
			triggerDisable {
				target:t = "initial"
				target:t = "flight_MA_hint"
				target:t = "flight_waypoint_hint"
				target:t = "flight_waypoint_start"
				target:t = "flight_waypoint_reached"
				target:t = "retry_flight_hint"
				target:t = "throttle_increase"
				target:t = "throttle_increased_flight"
				target:t = "throttle_wep"
				target:t = "throttle_done"
				target:t = "mission_timer"
				target:t = "throttle_wep_flight"
				target:t = "shooting_press_fire"
				target:t = "shooting_initial"
				target:t = "shooting_balloon_dead"
				target:t = "shooting_lock_target_pressed"
				target:t = "shooting_plane_killed"
				target:t = "retry_plane_hint"
				target:t = "flight_elevator_hint"
				target:t = "flight_ailerons_hint"
				target:t = "flight_rudder_hint"
				target:t = "flight_if_MA"
				target:t = "flight_if_not_MA"
				target:t = "map_objective_hint"
				target:t = "map_press_button_hint"
				target:t = "map_initial_hint"
				target:t = "map_button_pressed"
				target:t = "shooting_precision"
				target:t = "shooting_cursor_moved"
				target:t = "shooting_keep_aiming"
				target:t = "shooting_open_fire"
				target:t = "shootingNotMA_kill_plane_initial"
				target:t = "retry_planeNotMA_hint"
				target:t = "shootingNotMA_lock_target_pressed"
				target:t = "shootingNotMA_precision"
				target:t = "shootingNotMA_shoot_now"
			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			bigQueryAddRecord {
				name:t = "tutorialB_fighter"
				params:t = "task 5/8: player hit the enemy plane / forestall indication learned"
				event:t = ""
			}
			wait {
				time:r = 0.5
			}
			moSetObjectiveStatus {
				target:t = "tutorialB_fighter_planes"
				status:i = 2
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
				object_marking:i = 0
			}
			wait {
				time:r = 1
			}
			triggerEnable {
				target:t = "training_initial"
			}
		}
		else_actions {

		}
	}
	retry_planeNotMA_hint {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			unitWhenInArea {
				math:t = "2D"
				object_type:t = "isAlive"
				object_marking:i = 0
				check_objects:t = "any"
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object:t = "target_plane01"
				target:t = "way_of_plane01"
				object_var_value:i = 0
			}
			varCompareInt {
				var_value:t = "timer"
				value:i = 60
				comparasion_func:t = "more"
			}
			unitWhenStatus {
				object_type:t = "isUseless"
				object_marking:i = 0
				check_objects:t = "all"
				target_type:t = "isAlive"
				check_period:r = 1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				object:t = "player"
			}
		}
		actions {
			triggerDisable {
				target:t = "initial"
				target:t = "flight_MA_hint"
				target:t = "flight_waypoint_hint"
				target:t = "flight_waypoint_start"
				target:t = "flight_waypoint_reached"
				target:t = "retry_flight_hint"
				target:t = "throttle_increase"
				target:t = "throttle_increased_flight"
				target:t = "throttle_wep"
				target:t = "throttle_done"
				target:t = "mission_timer"
				target:t = "throttle_wep_flight"
				target:t = "shooting_press_fire"
				target:t = "shooting_initial"
				target:t = "shooting_balloon_dead"
				target:t = "shooting_lock_target_pressed"
				target:t = "shooting_plane_killed"
				target:t = "retry_plane_hint"
				target:t = "flight_elevator_hint"
				target:t = "flight_ailerons_hint"
				target:t = "flight_rudder_hint"
				target:t = "flight_if_MA"
				target:t = "flight_if_not_MA"
				target:t = "map_objective_hint"
				target:t = "map_press_button_hint"
				target:t = "map_initial_hint"
				target:t = "map_button_pressed"
				target:t = "shooting_precision"
				target:t = "shooting_cursor_moved"
				target:t = "shooting_keep_aiming"
				target:t = "shooting_open_fire"
				target:t = "shootingNotMA_plane_killed"
				target:t = "shootingNotMA_kill_plane_initial"
				target:t = "shootingNotMA_lock_target_pressed"
				target:t = "shootingNotMA_precision"
				target:t = "shootingNotMA_shoot_now"
			}
			triggerDisable {
				target:t = "dialogue_intro_p01"
				target:t = "dialogue_intro_p02"
				target:t = "dialogue_main_controls_p01"
				target:t = "dialogue_main_controls_p02"
				target:t = "dialogue_main_controls_p03"
				target:t = "dialogue_main_controls_p04"
				target:t = "dialogue_main_controls_MA_p01"
				target:t = "dialogue_main_controls_MA_p02"
				target:t = "dialogue_main_controls_MA_p03"
				target:t = "dialogue_main_controls_p05"
				target:t = "dialogue_throttle_p01"
				target:t = "dialogue_throttle_p02"
				target:t = "dialogue_throttle_p03"
				target:t = "dialogue_throttle_p04"
				target:t = "dialogue_throttle_p05"
				target:t = "dialogue_throttle_p06"
				target:t = "dialogue_throttle_p07"
				target:t = "dialogue_throttle_p08"
				target:t = "dialogue_throttle_p09"
				target:t = "dialogue_throttle_p10"
				target:t = "dialogue_throttle_p11"
				target:t = "dialogue_map_p01"
				target:t = "dialogue_map_p02"
				target:t = "dialogue_immobile_p01"
				target:t = "dialogue_immobile_p02"
				target:t = "dialogue_immobile_p03"
				target:t = "dialogue_immobile_p04"
				target:t = "dialogue_fight_p01"
				target:t = "dialogue_fight_p02"
				target:t = "dialogue_fight_p03"
				target:t = "dialogue_fight_p04"
				target:t = "dialogue_fight_p05"
				target:t = "dialogue_fight_MA_p05"
				target:t = "dialogue_fight_p06"
				target:t = "dialogue_fight_MA_p06"
				target:t = "dialogue_fight_MA_p07"
				target:t = "dialogue_fight_p07"
				target:t = "dialogue_fight_p08"
				target:t = "dialogue_fight_p09"
				target:t = "dialogue_training_p01"
				target:t = "dialogue_training_p02"
				target:t = "dialogue_ground_fight_p01"
				target:t = "dialogue_ground_fight_p02"
				target:t = "dialogue_ground_fight_p03"
				target:t = "dialogue_ground_fight_p04"
				target:t = "dialogue_ground_fight_p05"
				target:t = "dialogue_ground_fight_p06"
				target:t = "dialogue_ground_fight_p07"
				target:t = "dialogue_ground_fight_p08"
				target:t = "dialogue_ground_fight_p09"
				target:t = "dialogue_ground_fight_MA_p09"
				target:t = "dialogue_victory_p01"
				target:t = "dialogue_victory_p02"
				target:t = "dialogue_victory_p03"
			}
			triggerDisable {
				target:t = "flight_if_Thrustmaster"
				target:t = "flight_howTo_Thrustmaster"
				target:t = "flight_elevator_hint_Thrustmaster"
				target:t = "flight_ailerons_hint_Thrustmaster"
				target:t = "flight_rudder_hint_Thrustmaster"
				target:t = "flight_waypoint_reached_Thrustmaster"
				target:t = "throttle_increase_Thrustmaster"
				target:t = "throttle_increased_flight_Thrustmaster"
				target:t = "throttle_decrease_Thrustmaster"
				target:t = "throttle_wep_Thrustmaster"
				target:t = "throttle_wep_flight_Thrustmaster"
				target:t = "map_initial_hint_Thrustmaster"
				target:t = "shooting_initial_hint_Thrustmaster"
				target:t = "shooting_initial_hint"
				target:t = "shootingNotMA_precision_Thrustmaster"
				target:t = "shootingNotMA_initial_hint"
				target:t = "shootingNotMA_initial_hint_Thrustmaster"
				target:t = "training_look_at_the_target_Thrustmaster"
				target:t = "assault_zoom_in_Thrustmaster"
				target:t = "assault_zoom_out_Thrustmaster"
				target:t = "assault_targets_indicator_hint_Thrustmaster"
				target:t = "assault_change_direction_Thrustmaster"
			}
			triggerDisable {
				target:t = "shootingMA_screen01"
				target:t = "shootingMA_video01"
				target:t = "shootingMA_video02"
				target:t = "shootingMA_video03"
				target:t = "shooting_start"
				target:t = "shooting_start_ps4_MA"
				target:t = "shootingNotMA_screen01"
				target:t = "shootingNotMA_screen02"
				target:t = "shootingNotMA_screen03"
			}
			hudElementShow {
				element:t = "air_tutorial_basic_shooting_screen04"
				show:b = false
				time:i = -1
			}
			missionStopSpeech {

			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			varSetInt {
				value:i = 0
				var:t = "slow_timer"
			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = false
			}
			playerControls {
				setStatus:t = "disable"
				control:t = "ALL"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_retry"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			wait {
				time:r = 2
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_retry"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "shootingNotMA_kill_plane_initial"
			}
		}
		else_actions {

		}
	}
	shooting_kill_plane_initial {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isMouseAim:b = true
			}
			playerWhenOptions {
				isGamepadPseudoMouseAim:b = true
			}
		}
		actions {
			triggerDisable {
				target:t = "initial"
				target:t = "flight_MA_hint"
				target:t = "flight_waypoint_hint"
				target:t = "flight_waypoint_start"
				target:t = "flight_waypoint_reached"
				target:t = "retry_flight_hint"
				target:t = "throttle_increase"
				target:t = "throttle_increased_flight"
				target:t = "throttle_wep"
				target:t = "throttle_done"
				target:t = "mission_timer"
				target:t = "throttle_wep_flight"
				target:t = "shooting_press_fire"
				target:t = "shooting_initial"
				target:t = "shooting_balloon_dead"
				target:t = "shooting_lock_target_pressed"
				target:t = "shooting_plane_killed"
				target:t = "retry_plane_hint"
				target:t = "flight_elevator_hint"
				target:t = "flight_ailerons_hint"
				target:t = "flight_rudder_hint"
				target:t = "flight_if_MA"
				target:t = "flight_if_not_MA"
				target:t = "map_objective_hint"
				target:t = "map_press_button_hint"
				target:t = "map_initial_hint"
				target:t = "map_button_pressed"
				target:t = "shooting_precision"
				target:t = "shooting_cursor_moved"
				target:t = "shooting_keep_aiming"
				target:t = "shooting_open_fire"
				target:t = "shootingNotMA_kill_plane_initial"
				target:t = "shootingNotMA_plane_killed"
				target:t = "shootingNotMA_lock_target_pressed"
				target:t = "shootingNotMA_precision"
				target:t = "shootingNotMA_shoot_now"
				target:t = "retry_planeNotMA_hint"
			}
			triggerDisable {
				target:t = "flight_if_Thrustmaster"
				target:t = "flight_howTo_Thrustmaster"
				target:t = "flight_elevator_hint_Thrustmaster"
				target:t = "flight_ailerons_hint_Thrustmaster"
				target:t = "flight_rudder_hint_Thrustmaster"
				target:t = "flight_waypoint_reached_Thrustmaster"
				target:t = "throttle_increase_Thrustmaster"
				target:t = "throttle_increased_flight_Thrustmaster"
				target:t = "throttle_decrease_Thrustmaster"
				target:t = "throttle_wep_Thrustmaster"
				target:t = "throttle_wep_flight_Thrustmaster"
				target:t = "map_initial_hint_Thrustmaster"
				target:t = "shooting_initial_hint_Thrustmaster"
				target:t = "shooting_initial_hint"
				target:t = "shootingNotMA_precision_Thrustmaster"
				target:t = "shootingNotMA_initial_hint"
				target:t = "shootingNotMA_initial_hint_Thrustmaster"
				target:t = "training_look_at_the_target_Thrustmaster"
				target:t = "assault_zoom_in_Thrustmaster"
				target:t = "assault_zoom_out_Thrustmaster"
				target:t = "assault_targets_indicator_hint_Thrustmaster"
				target:t = "assault_change_direction_Thrustmaster"
			}
			triggerDisable {
				target:t = "shootingMA_screen01"
				target:t = "shootingMA_video01"
				target:t = "shootingMA_video02"
				target:t = "shootingMA_video03"
				target:t = "shooting_start"
				target:t = "shooting_start_ps4_MA"
				target:t = "shootingNotMA_screen01"
				target:t = "shootingNotMA_screen02"
				target:t = "shootingNotMA_screen03"
			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			playerControls {
				setStatus:t = "disable"
				control:t = "ALL"
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_FLIGHTMENU"
				control:t = "ID_FLIGHTMENU_SETUP"
				control:t = "ID_CONTINUE"
				control:t = "ID_CONTINUE_SETUP"
			}
			missionSetFade {
				mode:t = "fadeOut"
				color:p3 = 0, 0, 0
				time:r = 0.5
			}
			unitPutToSleep {
				target:t = "enemies_squad"
			}
			wait {
				time:r = 0.6
			}
			unitWakeUp {
				target:t = "target_plane01"
			}
			unitRestore {
				ressurectIfDead:b = true
				fullRestore:b = true
				target_marking:i = 0
				target:t = "player"
				target:t = "target_plane01"
				ammoRestore:b = true
			}
			playerOptions {
				respawnBullets:b = true
			}
			missionKillEffects {
				area:t = "big_area"
			}
			wait {
				time:r = 0.15
			}
			unitMoveTo {
				target:t = "target_plane01_starting_position"
				follow_target:b = false
				teleportHeightType:t = "target"
				useUnitHeightForTele:b = false
				shouldKeepFormation:b = false
				teleportHeightValue:r = 0
				horizontalDirectionForTeleport:b = true
				waypointReachedDist:r = 10
				recalculatePathDist:r = -1
				object_marking:i = 0
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				fastClimb:b = false
				destTimeMode:b = false
				target_var_name:t = ""
				target_var_comp_op:t = "equal"
				target_var_value:i = 0
				object:t = "target_plane01"
				move_type:t = "teleport"
				lookat:t = "target_plane01_lookAtArea"
			}
			wait {
				time:r = 0.15
			}
			unitMoveTo {
				target:t = "player_spawn02"
				follow_target:b = false
				teleportHeightType:t = "target"
				useUnitHeightForTele:b = false
				shouldKeepFormation:b = false
				teleportHeightValue:r = 0
				horizontalDirectionForTeleport:b = true
				waypointReachedDist:r = 10
				recalculatePathDist:r = -1
				object_marking:i = 0
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				fastClimb:b = false
				destTimeMode:b = false
				target_var_name:t = ""
				target_var_comp_op:t = "equal"
				target_var_value:i = 0
				object:t = "player"
				move_type:t = "teleport"
				lookat:t = "player_lookAtArea"
			}
			unitMoveTo {
				target:t = "target_plane01_lookAtArea"
				follow_target:b = false
				teleportHeightType:t = "absolute"
				useUnitHeightForTele:b = true
				shouldKeepFormation:b = false
				teleportHeightValue:r = 1000
				horizontalDirectionForTeleport:b = true
				waypointReachedDist:r = 10
				recalculatePathDist:r = -1
				object_marking:i = 0
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				fastClimb:b = false
				destTimeMode:b = false
				target_var_name:t = ""
				target_var_comp_op:t = "equal"
				target_var_value:i = 0
				object:t = "target_plane01"
			}
			playerSetMouseAim {
				lookat:t = "target_plane01_starting_position"
			}
			missionSetFade {
				mode:t = "fadeIn"
				color:p3 = 0, 0, 0
				time:r = 0.5
			}
			__wait {
				time:r = 0.6
			}
			unitForceRearmSpeed {
				rearmSpeedK:r = 30
				target:t = "player"
			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			triggerEnable {
				target:t = "shootingMA_screen01"
				target:t = "retry_plane_hint"
			}
		}
		else_actions {

		}
	}
	shootingMA_screen01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			hudElementShow {
				element:t = "air_tutorial_basic_shooting_all_images_and_texts"
				show:b = true
				time:i = -1
			}
			hudElementShow {
				element:t = "air_tutorial_basic_shooting_screen01_MA"
				show:b = true
				time:i = -1
			}
			__wait {
				time:r = 0.5
			}
			wait {
				time:r = 2
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_fighter_video_01"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "tutorialB_fighter_forestall_explanation01"
			}
			wait {
				time:r = 2
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_fighter_video_01_continue"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "shootingMA_video01"
			}
		}
		else_actions {

		}
	}
	shootingMA_video01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			triggerDisable {
				target:t = "tutorialB_fighter_forestall_explanation01"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			hudElementShow {
				element:t = "air_tutorial_basic_shooting_all_images_and_texts"
				show:b = false
				time:i = -1
			}
			hudElementShow {
				element:t = "air_tutorial_basic_shooting_screen01_MA"
				show:b = false
				time:i = -1
			}
			hudElementShow {
				element:t = "air_tutorial_basic_shooting01"
				show:b = true
				time:i = -1
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_fighter_video_02"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "tutorialB_fighter_forestall_explanation02"
			}
			wait {
				time:r = 13
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_fighter_video_02_continue"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			hudElementShow {
				element:t = "air_tutorial_basic_shooting_screen02"
				show:b = true
				time:i = -1
			}
			hudElementShow {
				element:t = "air_tutorial_basic_shooting01"
				show:b = false
				time:i = -1
			}
			triggerEnable {
				target:t = "shootingMA_video02"
			}
		}
		else_actions {

		}
	}
	shootingMA_video02 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			hudElementShow {
				element:t = "air_tutorial_basic_shooting02"
				show:b = true
				time:i = -1
			}
			hudElementShow {
				element:t = "air_tutorial_basic_shooting_screen02"
				show:b = false
				time:i = -1
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_fighter_video_03"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "tutorialB_fighter_forestall_explanation03"
			}
			wait {
				time:r = 16
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_fighter_video_03_continue"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			hudElementShow {
				element:t = "air_tutorial_basic_shooting_screen03"
				show:b = true
				time:i = -1
			}
			hudElementShow {
				element:t = "air_tutorial_basic_shooting02"
				show:b = false
				time:i = -1
			}
			triggerEnable {
				target:t = "shootingMA_video03"
			}
		}
		else_actions {

		}
	}
	shootingMA_video03 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			hudElementShow {
				element:t = "air_tutorial_basic_shooting03"
				show:b = true
				time:i = -1
			}
			hudElementShow {
				element:t = "air_tutorial_basic_shooting_screen03"
				show:b = false
				time:i = -1
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_fighter_video_04"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "tutorialB_fighter_forestall_explanation04"
			}
			wait {
				time:r = 15
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_fighter_video_04_continue"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			hudElementShow {
				element:t = "air_tutorial_basic_shooting_screen04"
				show:b = true
				time:i = -1
			}
			hudElementShow {
				element:t = "air_tutorial_basic_shooting03"
				show:b = false
				time:i = -1
			}
			triggerEnable {
				target:t = "shooting_start"
				target:t = "shooting_start_ps4_MA"
			}
		}
		else_actions {

		}
	}
	shooting_start {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isThrustmasterHotas4:b = false
			}
			playerWhenOptions {
				isMouseAim:b = true
			}
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			triggerDisable {
				target:t = "shootingMA_screen01"
				target:t = "shootingMA_video01"
				target:t = "shootingMA_video02"
				target:t = "shootingMA_video03"
				target:t = "shooting_start_ps4_MA"
				target:t = "shootingNotMA_screen01"
				target:t = "shootingNotMA_screen02"
				target:t = "shootingNotMA_screen03"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			hudElementShow {
				element:t = "air_tutorial_basic_shooting_screen04"
				show:b = false
				time:i = -1
			}
			wait {
				time:r = 1
			}
			triggerEnable {
				target:t = "tutorialB_fighter_fight_aim_and_keep_p01"
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_LOCK_TARGET"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_shooting_initial_cursor"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			hudElementSelectionShade {
				element:t = "forestall"
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "AXIS_AILERONS"
				control:t = "AXIS_ELEVATOR"
				control:t = "AXIS_RUDDER"
				control:t = "AXIS_THROTTLE"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
				control:t = "AXIS_MOUSE_AIM_X"
				control:t = "AXIS_MOUSE_AIM_Y"
			}
			triggerEnable {
				target:t = "shooting_cursor_moved"
				target:t = "retry_plane_hint"
			}
		}
		else_actions {

		}
	}
	shooting_start_ps4_MA {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isGamepadPseudoMouseAim:b = true
			}
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			triggerDisable {
				target:t = "shootingMA_screen01"
				target:t = "shootingMA_video01"
				target:t = "shootingMA_video02"
				target:t = "shootingMA_video03"
				target:t = "shooting_start"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			hudElementShow {
				element:t = "air_tutorial_basic_shooting_screen04"
				show:b = false
				time:i = -1
			}
			wait {
				time:r = 1
			}
			triggerEnable {
				target:t = "tutorialB_fighter_fight_aim_and_keep_p01"
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "AXIS_AILERONS"
				control:t = "AXIS_ELEVATOR"
				control:t = "AXIS_RUDDER"
				control:t = "AXIS_THROTTLE"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
				control:t = "AXIS_MOUSE_AIM_X"
				control:t = "AXIS_MOUSE_AIM_Y"
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_LOCK_TARGET"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_shooting_initial_cursor"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			hudElementSelectionShade {
				element:t = "forestall"
			}
			triggerEnable {
				target:t = "shooting_cursor_moved"
				target:t = "retry_plane_hint"
			}
		}
		else_actions {

		}
	}
	shooting_kill_plane_initial_ps4_MA {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isGamepadPseudoMouseAim:b = true
			}
		}
		actions {
			triggerDisable {
				target:t = "initial"
				target:t = "flight_MA_hint"
				target:t = "flight_waypoint_hint"
				target:t = "flight_waypoint_start"
				target:t = "flight_waypoint_reached"
				target:t = "retry_flight_hint"
				target:t = "throttle_increase"
				target:t = "throttle_increased_flight"
				target:t = "throttle_wep"
				target:t = "throttle_done"
				target:t = "mission_timer"
				target:t = "throttle_wep_flight"
				target:t = "shooting_press_fire"
				target:t = "shooting_initial"
				target:t = "shooting_balloon_dead"
				target:t = "shooting_lock_target_pressed"
				target:t = "shooting_plane_killed"
				target:t = "retry_plane_hint"
				target:t = "flight_elevator_hint"
				target:t = "flight_ailerons_hint"
				target:t = "flight_rudder_hint"
				target:t = "flight_if_MA"
				target:t = "flight_if_not_MA"
				target:t = "map_objective_hint"
				target:t = "map_press_button_hint"
				target:t = "map_initial_hint"
				target:t = "map_button_pressed"
				target:t = "shooting_precision"
				target:t = "shooting_cursor_moved"
				target:t = "shooting_keep_aiming"
				target:t = "shooting_open_fire"
				target:t = "shootingNotMA_kill_plane_initial"
				target:t = "shootingNotMA_plane_killed"
				target:t = "shootingNotMA_lock_target_pressed"
				target:t = "shootingNotMA_precision"
				target:t = "shootingNotMA_shoot_now"
				target:t = "retry_planeNotMA_hint"
			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			playerControls {
				setStatus:t = "disable"
				control:t = "ALL"
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_FLIGHTMENU"
				control:t = "ID_FLIGHTMENU_SETUP"
				control:t = "ID_CONTINUE"
				control:t = "ID_CONTINUE_SETUP"
			}
			missionSetFade {
				mode:t = "fadeOut"
				color:p3 = 0, 0, 0
				time:r = 0.5
			}
			unitPutToSleep {
				target:t = "enemies_squad"
			}
			playerOptions {
				allowAutoTargeting:b = false
			}
			wait {
				time:r = 0.6
			}
			unitWakeUp {
				target:t = "target_plane01"
			}
			unitRestore {
				ressurectIfDead:b = true
				fullRestore:b = true
				target_marking:i = 0
				target:t = "player"
				target:t = "target_plane01"
				ammoRestore:b = true
			}
			playerOptions {
				respawnBullets:b = true
			}
			missionKillEffects {
				area:t = "big_area"
			}
			wait {
				time:r = 0.15
			}
			unitMoveTo {
				target:t = "target_plane01_starting_position"
				follow_target:b = false
				teleportHeightType:t = "target"
				useUnitHeightForTele:b = false
				shouldKeepFormation:b = false
				teleportHeightValue:r = 0
				horizontalDirectionForTeleport:b = true
				waypointReachedDist:r = 10
				recalculatePathDist:r = -1
				object_marking:i = 0
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				fastClimb:b = false
				destTimeMode:b = false
				target_var_name:t = ""
				target_var_comp_op:t = "equal"
				target_var_value:i = 0
				object:t = "target_plane01"
				move_type:t = "teleport"
				lookat:t = "target_plane01_lookAtArea"
			}
			wait {
				time:r = 0.15
			}
			unitMoveTo {
				target:t = "player_spawn02"
				follow_target:b = false
				teleportHeightType:t = "target"
				useUnitHeightForTele:b = false
				shouldKeepFormation:b = false
				teleportHeightValue:r = 0
				horizontalDirectionForTeleport:b = true
				waypointReachedDist:r = 10
				recalculatePathDist:r = -1
				object_marking:i = 0
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				fastClimb:b = false
				destTimeMode:b = false
				target_var_name:t = ""
				target_var_comp_op:t = "equal"
				target_var_value:i = 0
				object:t = "player"
				move_type:t = "teleport"
				lookat:t = "player_lookAtArea"
			}
			unitMoveTo {
				target:t = "target_plane01_lookAtArea"
				follow_target:b = false
				teleportHeightType:t = "absolute"
				useUnitHeightForTele:b = true
				shouldKeepFormation:b = false
				teleportHeightValue:r = 1000
				horizontalDirectionForTeleport:b = true
				waypointReachedDist:r = 10
				recalculatePathDist:r = -1
				object_marking:i = 0
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				fastClimb:b = false
				destTimeMode:b = false
				target_var_name:t = ""
				target_var_comp_op:t = "equal"
				target_var_value:i = 0
				object:t = "target_plane01"
			}
			playerSetMouseAim {
				lookat:t = "target_plane01_starting_position"
			}
			missionSetFade {
				mode:t = "fadeIn"
				color:p3 = 0, 0, 0
				time:r = 0.5
			}
			wait {
				time:r = 0.6
			}
			unitForceRearmSpeed {
				rearmSpeedK:r = 30
				target:t = "player"
			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			triggerEnable {
				target:t = "dialogue_fightNotMA_p01"
			}
			wait {
				time:r = 1
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_LOCK_TARGET"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_howTo_mobile"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ID_LOCK_TARGET"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "shooting_lock_target_pressed"
				target:t = "retry_plane_hint"
			}
		}
		else_actions {

		}
	}
	shooting_lock_target_pressed {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_LOCK_TARGET"
			}
		}
		actions {
			triggerDisable {
				target:t = "dialogue_fightNotMA_p01"
				target:t = "dialogue_fight_p02"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_howTo_mobile"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ID_LOCK_TARGET"
				item:t = "ID_LOCK_TARGET=2"
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			wait {
				time:r = 0.5
			}
			hudElementSelectionShade {
				element:t = "forestall"
			}
			triggerEnable {
				target:t = "dialogue_fight_p03"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_forestallNotMA"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			wait {
				time:r = 2
			}
			triggerEnable {
				target:t = "shooting_precision"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_forestallNotMA_continue"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
		}
		else_actions {

		}
	}
	shooting_precision {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			triggerDisable {
				target:t = "dialogue_fight_p01"
				target:t = "dialogue_fight_p03"
				target:t = "dialogue_fight_p04"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			wait {
				time:r = 1
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "AXIS_AILERONS"
				control:t = "AXIS_ELEVATOR"
				control:t = "AXIS_RUDDER"
				control:t = "AXIS_THROTTLE"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
				control:t = "AXIS_MOUSE_AIM_X"
				control:t = "AXIS_MOUSE_AIM_Y"
			}
			triggerEnable {
				target:t = "dialogue_fight_p05"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_cursor"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			hudElementBlink {
				element:t = "mouseAim"
				time:r = 10
				blink:b = true
			}
			triggerEnable {
				target:t = "shooting_cursor_moved"
			}
		}
		else_actions {

		}
	}
	shooting_cursor_moved {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenCursorIn {
				cursor:t = "mouseAim"
				element:t = "forestall"
			}
		}
		actions {
			triggerDisable {
				target:t = "dialogue_fight_p05"
				target:t = "dialogue_fight_MA_p05"
				target:t = "tutorialB_fighter_fight_aim_and_keep_p01"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_cursor"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			wait {
				time:r = 1
			}
			triggerEnable {
				target:t = "dialogue_fight_MA_p06"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_keep_aiming"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			wait {
				time:r = 2
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_keep_aiming_continue"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "shooting_keep_aiming"
			}
		}
		else_actions {

		}
	}
	shooting_keep_aiming {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			triggerDisable {
				target:t = "shooting_cursor_moved"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_keep_aiming"
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionSetTimeSpeed {
				speed:r = 0.1
				realtimeTriggers:b = true
			}
			triggerEnable {
				target:t = "shooting_aim_completed"
				target:t = "mission_timer"
			}
		}
		else_actions {

		}
	}
	shooting_aim_completed {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenCursorIn {
				cursor:t = "crosshair"
				element:t = "forestall"
			}
		}
		actions {
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			triggerDisable {
				target:t = "shooting_keep_aiming"
				target:t = "mission_timer"
				target:t = "dialogue_fight_p06"
				target:t = "dialogue_fight_MA_p06"
			}
			missionStopSpeech {

			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			wait {
				time:r = 0.5
			}
			triggerEnable {
				target:t = "dialogue_fight_p07"
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_FIRE"
				control:t = "ID_FIRE_MGUNS"
				control:t = "ID_FIRE_CANNONS"
				control:t = "AXIS_FIRE"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_time_to_fire"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "pseudo_fire"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "shooting_open_fire"
			}
		}
		else_actions {

		}
	}
	shooting_open_fire {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_FIRE"
			}
			playerShortcutPressed {
				control:t = "ID_FIRE_MGUNS"
			}
			playerShortcutPressed {
				control:t = "ID_FIRE_CANNONS"
			}
			playerAxisValueReached {
				value:r = 0.3
				func:t = "more"
				axis:t = "AXIS_FIRE"
			}
		}
		actions {
			triggerDisable {
				target:t = "dialogue_fight_p07"
				target:t = "dialogue_fight_p08"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_time_to_fire"
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "pseudo_fire"
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = true
			}
			triggerEnable {
				target:t = "shooting_plane_killed"
				target:t = "mission_timer"
			}
			hudElementSelectionShade {
				element:t = ""
			}
			moAddMissionObjective {
				target:t = "tutorialB_fighter_planes"
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
			}
		}
		else_actions {

		}
	}
	shooting_plane_killed {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			unitWhenStatus {
				object_type:t = "damaged"
				object_marking:i = 0
				check_objects:t = "all"
				target_type:t = "isAlive"
				check_period:r = 1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				object:t = "target_plane01"
			}
		}
		actions {
			unitDamage {
				part:i = 21
				power:r = 1
				useEffect:b = false
				countEffects:i = 1
				delay:p2 = 1, 1
				offset:p3 = 0, 0, 0
				radiusOffset:p2 = 10, 15
				target:t = "target_plane01"
				doExplosion:b = true
			}
			triggerEnable {
				target:t = "dialogue_fight_p09"
			}
			triggerDisable {
				target:t = "initial"
				target:t = "flight_MA_hint"
				target:t = "flight_waypoint_hint"
				target:t = "flight_waypoint_start"
				target:t = "flight_waypoint_reached"
				target:t = "retry_flight_hint"
				target:t = "throttle_increase"
				target:t = "throttle_increased_flight"
				target:t = "throttle_wep"
				target:t = "throttle_done"
				target:t = "mission_timer"
				target:t = "throttle_wep_flight"
				target:t = "shooting_press_fire"
				target:t = "shooting_initial"
				target:t = "shooting_balloon_dead"
				target:t = "shooting_lock_target_pressed"
				target:t = "shooting_kill_plane_initial"
				target:t = "flight_elevator_hint"
				target:t = "flight_ailerons_hint"
				target:t = "flight_rudder_hint"
				target:t = "flight_if_MA"
				target:t = "flight_if_not_MA"
				target:t = "map_objective_hint"
				target:t = "map_press_button_hint"
				target:t = "map_initial_hint"
				target:t = "map_button_pressed"
				target:t = "shooting_precision"
				target:t = "shooting_cursor_moved"
				target:t = "shooting_keep_aiming"
				target:t = "shooting_open_fire"
				target:t = "shootingNotMA_kill_plane_initial"
				target:t = "shootingNotMA_plane_killed"
				target:t = "shootingNotMA_lock_target_pressed"
				target:t = "shootingNotMA_precision"
				target:t = "shootingNotMA_shoot_now"
				target:t = "retry_planeNotMA_hint"
			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			bigQueryAddRecord {
				name:t = "tutorialB_fighter"
				params:t = "task 5/8: player hit the enemy plane / forestall indication learned"
				event:t = ""
			}
			moSetObjectiveStatus {
				target:t = "tutorialB_fighter_planes"
				status:i = 2
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
				object_marking:i = 0
			}
		}
		else_actions {

		}
	}
	retry_plane_hint {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			unitWhenInArea {
				math:t = "2D"
				object_type:t = "isAlive"
				object_marking:i = 0
				check_objects:t = "any"
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object:t = "target_plane01"
				target:t = "way_of_plane01"
				object_var_value:i = 0
			}
			varCompareInt {
				var_value:t = "timer"
				value:i = 40
				comparasion_func:t = "more"
			}
			unitWhenStatus {
				object_type:t = "isUseless"
				object_marking:i = 0
				check_objects:t = "all"
				target_type:t = "isAlive"
				check_period:r = 1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				object:t = "player"
			}
		}
		actions {
			triggerDisable {
				target:t = "initial"
				target:t = "flight_MA_hint"
				target:t = "flight_waypoint_hint"
				target:t = "flight_waypoint_start"
				target:t = "flight_waypoint_reached"
				target:t = "retry_flight_hint"
				target:t = "throttle_increase"
				target:t = "throttle_increased_flight"
				target:t = "throttle_wep"
				target:t = "throttle_done"
				target:t = "mission_timer"
				target:t = "throttle_wep_flight"
				target:t = "shooting_initial"
				target:t = "shooting_press_fire"
				target:t = "retry_balloon_hint"
				target:t = "shooting_balloon_dead"
				target:t = "shooting_kill_plane_initial"
				target:t = "shooting_lock_target_pressed"
				target:t = "flight_elevator_hint"
				target:t = "flight_ailerons_hint"
				target:t = "flight_rudder_hint"
				target:t = "shooting_plane_killed"
				target:t = "flight_if_MA"
				target:t = "flight_if_not_MA"
				target:t = "map_objective_hint"
				target:t = "map_press_button_hint"
				target:t = "map_initial_hint"
				target:t = "map_button_pressed"
				target:t = "shooting_precision"
				target:t = "shooting_cursor_moved"
				target:t = "shooting_keep_aiming"
				target:t = "shooting_open_fire"
				target:t = "shootingNotMA_kill_plane_initial"
				target:t = "shootingNotMA_plane_killed"
				target:t = "retry_planeNotMA_hint"
				target:t = "shootingNotMA_lock_target_pressed"
				target:t = "shootingNotMA_precision"
				target:t = "shootingNotMA_shoot_now"
			}
			triggerDisable {
				target:t = "dialogue_intro_p01"
				target:t = "dialogue_intro_p02"
				target:t = "dialogue_main_controls_p01"
				target:t = "dialogue_main_controls_p02"
				target:t = "dialogue_main_controls_p03"
				target:t = "dialogue_main_controls_p04"
				target:t = "dialogue_main_controls_MA_p01"
				target:t = "dialogue_main_controls_MA_p02"
				target:t = "dialogue_main_controls_MA_p03"
				target:t = "dialogue_main_controls_p05"
				target:t = "dialogue_throttle_p01"
				target:t = "dialogue_throttle_p02"
				target:t = "dialogue_throttle_p03"
				target:t = "dialogue_throttle_p04"
				target:t = "dialogue_throttle_p05"
				target:t = "dialogue_throttle_p06"
				target:t = "dialogue_throttle_p07"
				target:t = "dialogue_throttle_p08"
				target:t = "dialogue_throttle_p09"
				target:t = "dialogue_throttle_p10"
				target:t = "dialogue_throttle_p11"
				target:t = "dialogue_map_p01"
				target:t = "dialogue_map_p02"
				target:t = "dialogue_immobile_p01"
				target:t = "dialogue_immobile_p02"
				target:t = "dialogue_immobile_p03"
				target:t = "dialogue_immobile_p04"
				target:t = "dialogue_fight_p01"
				target:t = "dialogue_fight_p02"
				target:t = "dialogue_fight_p03"
				target:t = "dialogue_fight_p04"
				target:t = "dialogue_fight_p05"
				target:t = "dialogue_fight_MA_p05"
				target:t = "dialogue_fight_p06"
				target:t = "dialogue_fight_MA_p06"
				target:t = "dialogue_fight_MA_p07"
				target:t = "dialogue_fight_p07"
				target:t = "dialogue_fight_p08"
				target:t = "dialogue_fight_p09"
				target:t = "dialogue_training_p01"
				target:t = "dialogue_training_p02"
				target:t = "dialogue_ground_fight_p01"
				target:t = "dialogue_ground_fight_p02"
				target:t = "dialogue_ground_fight_p03"
				target:t = "dialogue_ground_fight_p04"
				target:t = "dialogue_ground_fight_p05"
				target:t = "dialogue_ground_fight_p06"
				target:t = "dialogue_ground_fight_p07"
				target:t = "dialogue_ground_fight_p08"
				target:t = "dialogue_ground_fight_p09"
				target:t = "dialogue_ground_fight_MA_p09"
				target:t = "dialogue_victory_p01"
				target:t = "dialogue_victory_p02"
				target:t = "dialogue_victory_p03"
			}
			triggerDisable {
				target:t = "flight_if_Thrustmaster"
				target:t = "flight_howTo_Thrustmaster"
				target:t = "flight_elevator_hint_Thrustmaster"
				target:t = "flight_ailerons_hint_Thrustmaster"
				target:t = "flight_rudder_hint_Thrustmaster"
				target:t = "flight_waypoint_reached_Thrustmaster"
				target:t = "throttle_increase_Thrustmaster"
				target:t = "throttle_increased_flight_Thrustmaster"
				target:t = "throttle_decrease_Thrustmaster"
				target:t = "throttle_wep_Thrustmaster"
				target:t = "throttle_wep_flight_Thrustmaster"
				target:t = "map_initial_hint_Thrustmaster"
				target:t = "shooting_initial_hint_Thrustmaster"
				target:t = "shooting_initial_hint"
				target:t = "shootingNotMA_precision_Thrustmaster"
				target:t = "shootingNotMA_initial_hint"
				target:t = "shootingNotMA_initial_hint_Thrustmaster"
				target:t = "training_look_at_the_target_Thrustmaster"
				target:t = "assault_zoom_in_Thrustmaster"
				target:t = "assault_zoom_out_Thrustmaster"
				target:t = "assault_targets_indicator_hint_Thrustmaster"
				target:t = "assault_change_direction_Thrustmaster"
			}
			triggerDisable {
				target:t = "shootingMA_screen01"
				target:t = "shootingMA_video01"
				target:t = "shootingMA_video02"
				target:t = "shootingMA_video03"
				target:t = "shooting_start"
				target:t = "shooting_start_ps4_MA"
				target:t = "shootingNotMA_screen01"
				target:t = "shootingNotMA_screen02"
				target:t = "shootingNotMA_screen03"
			}
			hudElementShow {
				element:t = "air_tutorial_basic_shooting_screen04"
				show:b = false
				time:i = -1
			}
			missionStopSpeech {

			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = true
			}
			playerControls {
				setStatus:t = "disable"
				control:t = "ALL"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_retry"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			wait {
				time:r = 2
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_retry"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "shooting_kill_plane_initial"
			}
		}
		else_actions {

		}
	}
	training_initial {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			triggerDisable {
				target:t = "initial"
				target:t = "flight_MA_hint"
				target:t = "flight_waypoint_hint"
				target:t = "flight_waypoint_start"
				target:t = "flight_waypoint_reached"
				target:t = "retry_flight_hint"
				target:t = "throttle_increase"
				target:t = "throttle_increased_flight"
				target:t = "throttle_wep"
				target:t = "throttle_done"
				target:t = "mission_timer"
				target:t = "throttle_wep_flight"
				target:t = "shooting_press_fire"
				target:t = "shooting_initial"
				target:t = "shooting_balloon_dead"
				target:t = "shooting_lock_target_pressed"
				target:t = "shooting_plane_killed"
				target:t = "retry_plane_hint"
				target:t = "flight_elevator_hint"
				target:t = "flight_ailerons_hint"
				target:t = "flight_rudder_hint"
				target:t = "flight_if_MA"
				target:t = "flight_if_not_MA"
				target:t = "map_objective_hint"
				target:t = "map_press_button_hint"
				target:t = "map_initial_hint"
				target:t = "map_button_pressed"
				target:t = "shooting_precision"
				target:t = "shooting_cursor_moved"
				target:t = "shooting_keep_aiming"
				target:t = "shooting_open_fire"
				target:t = "shooting_kill_plane_initial"
				target:t = "training_planes_killed"
				target:t = "retry_training_hint"
				target:t = "shootingNotMA_kill_plane_initial"
				target:t = "shootingNotMA_plane_killed"
				target:t = "retry_planeNotMA_hint"
				target:t = "shootingNotMA_lock_target_pressed"
				target:t = "shootingNotMA_precision"
				target:t = "shootingNotMA_shoot_now"
				target:t = "training_look_at_the_target_ps4"
				target:t = "training_target_camera_used_ps4"
			}
			triggerDisable {
				target:t = "dialogue_intro_p01"
				target:t = "dialogue_intro_p02"
				target:t = "dialogue_main_controls_p01"
				target:t = "dialogue_main_controls_p02"
				target:t = "dialogue_main_controls_p03"
				target:t = "dialogue_main_controls_p04"
				target:t = "dialogue_main_controls_MA_p01"
				target:t = "dialogue_main_controls_MA_p02"
				target:t = "dialogue_main_controls_MA_p03"
				target:t = "dialogue_main_controls_p05"
				target:t = "dialogue_throttle_p01"
				target:t = "dialogue_throttle_p02"
				target:t = "dialogue_throttle_p03"
				target:t = "dialogue_throttle_p04"
				target:t = "dialogue_throttle_p05"
				target:t = "dialogue_throttle_p06"
				target:t = "dialogue_throttle_p07"
				target:t = "dialogue_throttle_p08"
				target:t = "dialogue_throttle_p09"
				target:t = "dialogue_throttle_p10"
				target:t = "dialogue_throttle_p11"
				target:t = "dialogue_map_p01"
				target:t = "dialogue_map_p02"
				target:t = "dialogue_immobile_p01"
				target:t = "dialogue_immobile_p02"
				target:t = "dialogue_immobile_p03"
				target:t = "dialogue_immobile_p04"
				target:t = "dialogue_fight_p01"
				target:t = "dialogue_fight_p02"
				target:t = "dialogue_fight_p03"
				target:t = "dialogue_fight_p04"
				target:t = "dialogue_fight_p05"
				target:t = "dialogue_fight_MA_p05"
				target:t = "dialogue_fight_p06"
				target:t = "dialogue_fight_MA_p06"
				target:t = "dialogue_fight_MA_p07"
				target:t = "dialogue_fight_p07"
				target:t = "dialogue_fight_p08"
				target:t = "dialogue_fight_p09"
				target:t = "dialogue_training_p01"
				target:t = "dialogue_training_p02"
				target:t = "dialogue_ground_fight_p01"
				target:t = "dialogue_ground_fight_p02"
				target:t = "dialogue_ground_fight_p03"
				target:t = "dialogue_ground_fight_p04"
				target:t = "dialogue_ground_fight_p05"
				target:t = "dialogue_ground_fight_p06"
				target:t = "dialogue_ground_fight_p07"
				target:t = "dialogue_ground_fight_p08"
				target:t = "dialogue_ground_fight_p09"
				target:t = "dialogue_ground_fight_MA_p09"
				target:t = "dialogue_victory_p01"
				target:t = "dialogue_victory_p02"
				target:t = "dialogue_victory_p03"
			}
			triggerDisable {
				target:t = "flight_if_Thrustmaster"
				target:t = "flight_howTo_Thrustmaster"
				target:t = "flight_elevator_hint_Thrustmaster"
				target:t = "flight_ailerons_hint_Thrustmaster"
				target:t = "flight_rudder_hint_Thrustmaster"
				target:t = "flight_waypoint_reached_Thrustmaster"
				target:t = "throttle_increase_Thrustmaster"
				target:t = "throttle_increased_flight_Thrustmaster"
				target:t = "throttle_decrease_Thrustmaster"
				target:t = "throttle_wep_Thrustmaster"
				target:t = "throttle_wep_flight_Thrustmaster"
				target:t = "map_initial_hint_Thrustmaster"
				target:t = "shooting_initial_hint_Thrustmaster"
				target:t = "shooting_initial_hint"
				target:t = "shootingNotMA_precision_Thrustmaster"
				target:t = "shootingNotMA_initial_hint"
				target:t = "shootingNotMA_initial_hint_Thrustmaster"
				target:t = "training_look_at_the_target_Thrustmaster"
				target:t = "assault_zoom_in_Thrustmaster"
				target:t = "assault_zoom_out_Thrustmaster"
				target:t = "assault_targets_indicator_hint_Thrustmaster"
				target:t = "assault_change_direction_Thrustmaster"
			}
			triggerDisable {
				target:t = "shootingMA_screen01"
				target:t = "shootingMA_video01"
				target:t = "shootingMA_video02"
				target:t = "shootingMA_video03"
				target:t = "shooting_start"
				target:t = "shooting_start_ps4_MA"
				target:t = "shootingNotMA_screen01"
				target:t = "shootingNotMA_screen02"
				target:t = "shootingNotMA_screen03"
			}
			missionStopSpeech {

			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			playerControls {
				setStatus:t = "disable"
				control:t = "ALL"
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_FLIGHTMENU"
				control:t = "ID_FLIGHTMENU_SETUP"
				control:t = "ID_CONTINUE"
				control:t = "ID_CONTINUE_SETUP"
			}
			missionSetFade {
				mode:t = "fadeOut"
				color:p3 = 0, 0, 0
				time:r = 0.5
			}
			unitPutToSleep {
				target:t = "enemies_squad"
			}
			wait {
				time:r = 0.6
			}
			unitWakeUp {
				target:t = "target_plane02"
			}
			unitRestore {
				ressurectIfDead:b = true
				fullRestore:b = true
				target_marking:i = 0
				target:t = "player"
				target:t = "target_plane02"
				ammoRestore:b = true
			}
			playerOptions {
				respawnBullets:b = true
				allowAutoTargeting:b = true
			}
			missionKillEffects {
				area:t = "big_area"
			}
			wait {
				time:r = 0.15
			}
			unitMoveTo {
				target:t = "target_plane02_starting_position"
				follow_target:b = false
				teleportHeightType:t = "target"
				useUnitHeightForTele:b = false
				shouldKeepFormation:b = true
				teleportHeightValue:r = 0
				horizontalDirectionForTeleport:b = true
				waypointReachedDist:r = 10
				recalculatePathDist:r = -1
				object_marking:i = 0
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				fastClimb:b = false
				destTimeMode:b = false
				target_var_name:t = ""
				target_var_comp_op:t = "equal"
				target_var_value:i = 0
				object:t = "target_plane02"
				move_type:t = "teleport"
				lookat:t = "target_plane02_final_position"
			}
			wait {
				time:r = 0.15
			}
			unitMoveTo {
				target:t = "player_spawn04"
				follow_target:b = false
				teleportHeightType:t = "target"
				useUnitHeightForTele:b = false
				shouldKeepFormation:b = false
				teleportHeightValue:r = 0
				horizontalDirectionForTeleport:b = true
				waypointReachedDist:r = 10
				recalculatePathDist:r = -1
				object_marking:i = 0
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				fastClimb:b = false
				destTimeMode:b = false
				target_var_name:t = ""
				target_var_comp_op:t = "equal"
				target_var_value:i = 0
				object:t = "player"
				move_type:t = "teleport"
				lookat:t = "target_plane02_starting_position"
			}
			unitMoveTo {
				target:t = "target_plane02_final_position"
				follow_target:b = false
				teleportHeightType:t = "absolute"
				useUnitHeightForTele:b = true
				shouldKeepFormation:b = false
				teleportHeightValue:r = 1000
				horizontalDirectionForTeleport:b = true
				waypointReachedDist:r = 10
				recalculatePathDist:r = -1
				object_marking:i = 0
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				fastClimb:b = false
				destTimeMode:b = false
				target_var_name:t = ""
				target_var_comp_op:t = "equal"
				target_var_value:i = 0
				object:t = "target_plane02"
				move_type:t = "zigzag_move"
				zzPeriod:r = 5
				zzAmp:r = 20
			}
			unitSetProperties {
				object:t = "target_plane02"
				object_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				attack_type:t = "hold_fire"
				ignoresEnemy:b = true
			}
			missionSetFade {
				mode:t = "fadeIn"
				color:p3 = 0, 0, 0
				time:r = 0.5
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_FIRE"
				control:t = "ID_FIRE_MGUNS"
				control:t = "ID_FIRE_CANNONS"
				control:t = "AXIS_FIRE"
				control:t = "ID_LOCK_TARGET"
				control:t = "AXIS_AILERONS"
				control:t = "AXIS_ELEVATOR"
				control:t = "AXIS_RUDDER"
				control:t = "AXIS_THROTTLE"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
				control:t = "AXIS_MOUSE_AIM_X"
				control:t = "AXIS_MOUSE_AIM_Y"
			}
			wait {
				time:r = 0.6
			}
			unitForceRearmSpeed {
				rearmSpeedK:r = 30
				target:t = "player"
			}
			triggerEnable {
				target:t = "dialogue_training_p01"
			}
			wait {
				time:r = 1
			}
			moAddMissionObjective {
				target:t = "tutorialB_fighter_training"
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
			}
			triggerEnable {
				target:t = "retry_training_hint"
				target:t = "mission_timer"
			}
		}
		else_actions {

		}
	}
	training_look_at_the_target_ps4 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.1
			}
		}
		conditions {
			playerWhenOptions {
				isGamepadPseudoMouseAim:b = true
			}
			playerWhenOptions {
				isGamepadClassicConsole:b = true
			}
		}
		actions {
			triggerDisable {
				target:t = "dialogue_training_p01"
				target:t = "mission_timer"
				target:t = "training_look_at_the_target_Thrustmaster"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			wait {
				time:r = 2
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_TARGET_CAMERA"
			}
			missionSetTimeSpeed {
				speed:r = 0.01
				realtimeTriggers:b = true
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_target_camera"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ID_TARGET_CAMERA"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "training_target_camera_used_ps4"
			}
		}
		else_actions {

		}
	}
	training_look_at_the_target_Thrustmaster {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.1
			}
		}
		conditions {
			playerWhenOptions {
				isThrustmasterHotas4:b = true
			}
		}
		actions {
			triggerDisable {
				target:t = "dialogue_training_p01"
				target:t = "mission_timer"
				target:t = "training_look_at_the_target_ps4"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			wait {
				time:r = 2
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_TARGET_CAMERA"
			}
			missionSetTimeSpeed {
				speed:r = 0.01
				realtimeTriggers:b = true
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_target_camera"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ID_TARGET_CAMERA=2"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "training_target_camera_used_ps4"
			}
		}
		else_actions {

		}
	}
	training_target_camera_used_ps4 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.1
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_TARGET_CAMERA"
			}
		}
		actions {
			wait {
				time:r = 2
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = true
			}
			triggerEnable {
				target:t = "training_planes_killed"
				target:t = "mission_timer"
			}
		}
		else_actions {

		}
	}
	training_planes_killed {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			unitWhenStatus {
				object_type:t = "isKilled"
				object_marking:i = 0
				check_objects:t = "all"
				target_type:t = "isAlive"
				check_period:r = 1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				object:t = "target_plane02"
			}
		}
		actions {
			unitDamage {
				part:i = 21
				power:r = 1
				useEffect:b = false
				countEffects:i = 1
				delay:p2 = 1, 1
				offset:p3 = 0, 0, 0
				radiusOffset:p2 = 10, 15
				target:t = "target_plane02"
				doExplosion:b = true
			}
			triggerDisable {
				target:t = "initial"
				target:t = "flight_MA_hint"
				target:t = "flight_waypoint_hint"
				target:t = "flight_waypoint_start"
				target:t = "flight_waypoint_reached"
				target:t = "retry_flight_hint"
				target:t = "throttle_increase"
				target:t = "throttle_increased_flight"
				target:t = "throttle_wep"
				target:t = "throttle_done"
				target:t = "mission_timer"
				target:t = "throttle_wep_flight"
				target:t = "shooting_press_fire"
				target:t = "shooting_initial"
				target:t = "shooting_balloon_dead"
				target:t = "shooting_lock_target_pressed"
				target:t = "shooting_plane_killed"
				target:t = "retry_plane_hint"
				target:t = "flight_elevator_hint"
				target:t = "flight_ailerons_hint"
				target:t = "flight_rudder_hint"
				target:t = "flight_if_MA"
				target:t = "flight_if_not_MA"
				target:t = "map_objective_hint"
				target:t = "map_press_button_hint"
				target:t = "map_initial_hint"
				target:t = "map_button_pressed"
				target:t = "shooting_precision"
				target:t = "shooting_cursor_moved"
				target:t = "shooting_keep_aiming"
				target:t = "shooting_open_fire"
				target:t = "shooting_kill_plane_initial"
				target:t = "training_initial"
				target:t = "retry_training_hint"
				target:t = "shootingNotMA_kill_plane_initial"
				target:t = "shootingNotMA_plane_killed"
				target:t = "retry_planeNotMA_hint"
				target:t = "shootingNotMA_lock_target_pressed"
				target:t = "shootingNotMA_precision"
				target:t = "shootingNotMA_shoot_now"
				target:t = "training_look_at_the_target_ps4"
				target:t = "training_target_camera_used_ps4"
			}
			triggerEnable {
				target:t = "dialogue_training_p02"
			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			moSetObjectiveStatus {
				target:t = "tutorialB_fighter_training"
				status:i = 2
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
				object_marking:i = 0
			}
			playerControls {
				setStatus:t = "disable"
				control:t = "ID_TARGET_CAMERA"
			}
			bigQueryAddRecord {
				name:t = "tutorialB_fighter"
				params:t = "task 6/8: player killed 2 enemy planes"
				event:t = ""
			}
			wait {
				time:r = 2
			}
			triggerEnable {
				target:t = "assault_initial"
			}
		}
		else_actions {

		}
	}
	retry_training_hint {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "timer"
				value:i = 60
				comparasion_func:t = "more"
			}
			unitWhenStatus {
				object_type:t = "isUseless"
				object_marking:i = 0
				check_objects:t = "all"
				target_type:t = "isAlive"
				check_period:r = 1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				object:t = "player"
			}
		}
		actions {
			triggerDisable {
				target:t = "initial"
				target:t = "flight_MA_hint"
				target:t = "flight_waypoint_hint"
				target:t = "flight_waypoint_start"
				target:t = "flight_waypoint_reached"
				target:t = "retry_flight_hint"
				target:t = "throttle_increase"
				target:t = "throttle_increased_flight"
				target:t = "throttle_wep"
				target:t = "throttle_done"
				target:t = "mission_timer"
				target:t = "throttle_wep_flight"
				target:t = "shooting_press_fire"
				target:t = "shooting_initial"
				target:t = "shooting_balloon_dead"
				target:t = "shooting_lock_target_pressed"
				target:t = "shooting_plane_killed"
				target:t = "retry_plane_hint"
				target:t = "flight_elevator_hint"
				target:t = "flight_ailerons_hint"
				target:t = "flight_rudder_hint"
				target:t = "flight_if_MA"
				target:t = "flight_if_not_MA"
				target:t = "map_objective_hint"
				target:t = "map_press_button_hint"
				target:t = "map_initial_hint"
				target:t = "map_button_pressed"
				target:t = "shooting_precision"
				target:t = "shooting_cursor_moved"
				target:t = "shooting_keep_aiming"
				target:t = "shooting_open_fire"
				target:t = "shooting_kill_plane_initial"
				target:t = "training_initial"
				target:t = "training_planes_killed"
				target:t = "shootingNotMA_kill_plane_initial"
				target:t = "shootingNotMA_plane_killed"
				target:t = "retry_planeNotMA_hint"
				target:t = "shootingNotMA_lock_target_pressed"
				target:t = "shootingNotMA_precision"
				target:t = "shootingNotMA_shoot_now"
				target:t = "training_look_at_the_target_ps4"
				target:t = "training_target_camera_used_ps4"
			}
			triggerDisable {
				target:t = "dialogue_intro_p01"
				target:t = "dialogue_intro_p02"
				target:t = "dialogue_main_controls_p01"
				target:t = "dialogue_main_controls_p02"
				target:t = "dialogue_main_controls_p03"
				target:t = "dialogue_main_controls_p04"
				target:t = "dialogue_main_controls_MA_p01"
				target:t = "dialogue_main_controls_MA_p02"
				target:t = "dialogue_main_controls_MA_p03"
				target:t = "dialogue_main_controls_p05"
				target:t = "dialogue_throttle_p01"
				target:t = "dialogue_throttle_p02"
				target:t = "dialogue_throttle_p03"
				target:t = "dialogue_throttle_p04"
				target:t = "dialogue_throttle_p05"
				target:t = "dialogue_throttle_p06"
				target:t = "dialogue_throttle_p07"
				target:t = "dialogue_throttle_p08"
				target:t = "dialogue_throttle_p09"
				target:t = "dialogue_throttle_p10"
				target:t = "dialogue_throttle_p11"
				target:t = "dialogue_map_p01"
				target:t = "dialogue_map_p02"
				target:t = "dialogue_immobile_p01"
				target:t = "dialogue_immobile_p02"
				target:t = "dialogue_immobile_p03"
				target:t = "dialogue_immobile_p04"
				target:t = "dialogue_fight_p01"
				target:t = "dialogue_fight_p02"
				target:t = "dialogue_fight_p03"
				target:t = "dialogue_fight_p04"
				target:t = "dialogue_fight_p05"
				target:t = "dialogue_fight_MA_p05"
				target:t = "dialogue_fight_p06"
				target:t = "dialogue_fight_MA_p06"
				target:t = "dialogue_fight_MA_p07"
				target:t = "dialogue_fight_p07"
				target:t = "dialogue_fight_p08"
				target:t = "dialogue_fight_p09"
				target:t = "dialogue_training_p01"
				target:t = "dialogue_training_p02"
				target:t = "dialogue_ground_fight_p01"
				target:t = "dialogue_ground_fight_p02"
				target:t = "dialogue_ground_fight_p03"
				target:t = "dialogue_ground_fight_p04"
				target:t = "dialogue_ground_fight_p05"
				target:t = "dialogue_ground_fight_p06"
				target:t = "dialogue_ground_fight_p07"
				target:t = "dialogue_ground_fight_p08"
				target:t = "dialogue_ground_fight_p09"
				target:t = "dialogue_ground_fight_MA_p09"
				target:t = "dialogue_victory_p01"
				target:t = "dialogue_victory_p02"
				target:t = "dialogue_victory_p03"
			}
			triggerDisable {
				target:t = "flight_if_Thrustmaster"
				target:t = "flight_howTo_Thrustmaster"
				target:t = "flight_elevator_hint_Thrustmaster"
				target:t = "flight_ailerons_hint_Thrustmaster"
				target:t = "flight_rudder_hint_Thrustmaster"
				target:t = "flight_waypoint_reached_Thrustmaster"
				target:t = "throttle_increase_Thrustmaster"
				target:t = "throttle_increased_flight_Thrustmaster"
				target:t = "throttle_decrease_Thrustmaster"
				target:t = "throttle_wep_Thrustmaster"
				target:t = "throttle_wep_flight_Thrustmaster"
				target:t = "map_initial_hint_Thrustmaster"
				target:t = "shooting_initial_hint_Thrustmaster"
				target:t = "shooting_initial_hint"
				target:t = "shootingNotMA_precision_Thrustmaster"
				target:t = "shootingNotMA_initial_hint"
				target:t = "shootingNotMA_initial_hint_Thrustmaster"
				target:t = "training_look_at_the_target_Thrustmaster"
				target:t = "assault_zoom_in_Thrustmaster"
				target:t = "assault_zoom_out_Thrustmaster"
				target:t = "assault_targets_indicator_hint_Thrustmaster"
				target:t = "assault_change_direction_Thrustmaster"
			}
			missionStopSpeech {

			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = true
			}
			playerControls {
				setStatus:t = "disable"
				control:t = "ALL"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_retry"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			wait {
				time:r = 2
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_retry"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "training_initial"
			}
		}
		else_actions {

		}
	}
	assault_initial {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			triggerDisable {
				target:t = "initial"
				target:t = "flight_MA_hint"
				target:t = "flight_waypoint_hint"
				target:t = "flight_waypoint_start"
				target:t = "flight_waypoint_reached"
				target:t = "retry_flight_hint"
				target:t = "throttle_increase"
				target:t = "throttle_increased_flight"
				target:t = "throttle_wep"
				target:t = "throttle_done"
				target:t = "mission_timer"
				target:t = "throttle_wep_flight"
				target:t = "shooting_press_fire"
				target:t = "shooting_initial"
				target:t = "shooting_balloon_dead"
				target:t = "shooting_lock_target_pressed"
				target:t = "shooting_plane_killed"
				target:t = "retry_plane_hint"
				target:t = "flight_elevator_hint"
				target:t = "flight_ailerons_hint"
				target:t = "flight_rudder_hint"
				target:t = "flight_if_MA"
				target:t = "flight_if_not_MA"
				target:t = "map_objective_hint"
				target:t = "map_press_button_hint"
				target:t = "map_initial_hint"
				target:t = "map_button_pressed"
				target:t = "shooting_precision"
				target:t = "shooting_cursor_moved"
				target:t = "shooting_keep_aiming"
				target:t = "shooting_open_fire"
				target:t = "shooting_kill_plane_initial"
				target:t = "training_planes_killed"
				target:t = "retry_training_hint"
				target:t = "training_initial"
				target:t = "assault_destroy_truck"
				target:t = "assault_truck_indicator"
				target:t = "assault_truck_dead"
				target:t = "retry_assault_hint"
				target:t = "assault_change_direction_MA"
				target:t = "assault_direction_changed_MA"
				target:t = "assault_completed"
				target:t = "assault_change_direction"
				target:t = "assault_direction_changed"
				target:t = "shootingNotMA_kill_plane_initial"
				target:t = "shootingNotMA_plane_killed"
				target:t = "retry_planeNotMA_hint"
				target:t = "shootingNotMA_lock_target_pressed"
				target:t = "shootingNotMA_precision"
				target:t = "shootingNotMA_shoot_now"
				target:t = "training_look_at_the_target_ps4"
				target:t = "training_target_camera_used_ps4"
			}
			triggerDisable {
				target:t = "assault_plane_levelled"
			}
			triggerDisable {
				target:t = "flight_if_Thrustmaster"
				target:t = "flight_howTo_Thrustmaster"
				target:t = "flight_elevator_hint_Thrustmaster"
				target:t = "flight_ailerons_hint_Thrustmaster"
				target:t = "flight_rudder_hint_Thrustmaster"
				target:t = "flight_waypoint_reached_Thrustmaster"
				target:t = "throttle_increase_Thrustmaster"
				target:t = "throttle_increased_flight_Thrustmaster"
				target:t = "throttle_decrease_Thrustmaster"
				target:t = "throttle_wep_Thrustmaster"
				target:t = "throttle_wep_flight_Thrustmaster"
				target:t = "map_initial_hint_Thrustmaster"
				target:t = "shooting_initial_hint_Thrustmaster"
				target:t = "shooting_initial_hint"
				target:t = "shootingNotMA_precision_Thrustmaster"
				target:t = "shootingNotMA_initial_hint"
				target:t = "shootingNotMA_initial_hint_Thrustmaster"
				target:t = "training_look_at_the_target_Thrustmaster"
				target:t = "assault_zoom_in_Thrustmaster"
				target:t = "assault_zoom_out_Thrustmaster"
				target:t = "assault_targets_indicator_hint_Thrustmaster"
				target:t = "assault_change_direction_Thrustmaster"
			}
			triggerDisable {
				target:t = "shootingMA_screen01"
				target:t = "shootingMA_video01"
				target:t = "shootingMA_video02"
				target:t = "shootingMA_video03"
				target:t = "shooting_start"
				target:t = "shooting_start_ps4_MA"
				target:t = "shootingNotMA_screen01"
				target:t = "shootingNotMA_screen02"
				target:t = "shootingNotMA_screen03"
			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			missionSetTargetsIndicator {
				target_type:t = "isAlive"
				target_marking:i = 0
				delta:i = 0
				icon:t = "truck"
				"icon army":i = 2
				set:b = false
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				target:t = "target_vehicle_01"
			}
			playerControls {
				setStatus:t = "disable"
				control:t = "ALL"
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_FLIGHTMENU"
				control:t = "ID_FLIGHTMENU_SETUP"
				control:t = "ID_CONTINUE"
				control:t = "ID_CONTINUE_SETUP"
			}
			missionSetFade {
				mode:t = "fadeOut"
				color:p3 = 0, 0, 0
				time:r = 0.5
			}
			wait {
				time:r = 0.6
			}
			unitPutToSleep {
				target:t = "enemies_squad"
			}
			unitWakeUp {
				target:t = "target_vehicle_01"
			}
			unitRestore {
				ressurectIfDead:b = true
				fullRestore:b = true
				target_marking:i = 0
				target:t = "player"
				target:t = "target_vehicle_01"
				ammoRestore:b = true
			}
			playerOptions {
				currentView:t = "3rdperson"
				respawnBullets:b = true
			}
			missionKillEffects {
				area:t = "big_area"
			}
			wait {
				time:r = 0.15
			}
			unitMoveTo {
				target:t = "player_spawn06"
				follow_target:b = false
				teleportHeightType:t = "target"
				useUnitHeightForTele:b = false
				shouldKeepFormation:b = false
				teleportHeightValue:r = 0
				horizontalDirectionForTeleport:b = false
				waypointReachedDist:r = 10
				recalculatePathDist:r = -1
				object_marking:i = 0
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				fastClimb:b = false
				destTimeMode:b = false
				target_var_name:t = ""
				target_var_comp_op:t = "equal"
				target_var_value:i = 0
				object:t = "player"
				move_type:t = "teleport"
				lookat:t = "vehicle_area"
			}
			unitSetProperties {
				object:t = "target_vehicle_01"
				object_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				attack_type:t = "hold_fire"
				ignoresEnemy:b = true
			}
			missionSetFade {
				mode:t = "fadeIn"
				color:p3 = 0, 0, 0
				time:r = 0.5
			}
			wait {
				time:r = 0.6
			}
			unitForceRearmSpeed {
				rearmSpeedK:r = 30
				target:t = "player"
			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			triggerEnable {
				target:t = "dialogue_ground_fight_p01"
			}
			moAddMissionObjective {
				target:t = "tutorialB_fighter_ground_target"
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
			}
			unitSetIndication {
				set:b = true
				target:t = "target_vehicle_01"
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
			}
			wait {
				time:r = 1
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_targets_indicator"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			hudElementSelectionShade {
				element:t = "targetsCounter"
			}
			triggerEnable {
				target:t = "assault_truck_indicator"
			}
			hudElementBlink {
				element:t = "targetsCounter"
				time:r = 100
				blink:b = true
			}
			wait {
				time:r = 2
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_targets_indicator_continue"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "assault_targets_indicator_hint"
				target:t = "retry_assault_hint"
				target:t = "assault_targets_indicator_hint_Thrustmaster"
			}
		}
		else_actions {

		}
	}
	assault_retry_start {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			triggerDisable {
				target:t = "initial"
				target:t = "flight_MA_hint"
				target:t = "flight_waypoint_hint"
				target:t = "flight_waypoint_start"
				target:t = "flight_waypoint_reached"
				target:t = "retry_flight_hint"
				target:t = "throttle_increase"
				target:t = "throttle_increased_flight"
				target:t = "throttle_wep"
				target:t = "throttle_done"
				target:t = "mission_timer"
				target:t = "throttle_wep_flight"
				target:t = "shooting_press_fire"
				target:t = "shooting_initial"
				target:t = "shooting_balloon_dead"
				target:t = "shooting_lock_target_pressed"
				target:t = "shooting_plane_killed"
				target:t = "retry_plane_hint"
				target:t = "flight_elevator_hint"
				target:t = "flight_ailerons_hint"
				target:t = "flight_rudder_hint"
				target:t = "flight_if_MA"
				target:t = "flight_if_not_MA"
				target:t = "map_objective_hint"
				target:t = "map_press_button_hint"
				target:t = "map_initial_hint"
				target:t = "map_button_pressed"
				target:t = "shooting_precision"
				target:t = "shooting_cursor_moved"
				target:t = "shooting_keep_aiming"
				target:t = "shooting_open_fire"
				target:t = "shooting_kill_plane_initial"
				target:t = "training_planes_killed"
				target:t = "retry_training_hint"
				target:t = "training_initial"
				target:t = "assault_destroy_truck"
				target:t = "assault_truck_indicator"
				target:t = "assault_truck_dead"
				target:t = "retry_assault_hint"
				target:t = "assault_change_direction_MA"
				target:t = "assault_direction_changed_MA"
				target:t = "assault_completed"
				target:t = "assault_change_direction"
				target:t = "assault_direction_changed"
				target:t = "shootingNotMA_kill_plane_initial"
				target:t = "shootingNotMA_plane_killed"
				target:t = "retry_planeNotMA_hint"
				target:t = "shootingNotMA_lock_target_pressed"
				target:t = "shootingNotMA_precision"
				target:t = "shootingNotMA_shoot_now"
			}
			triggerDisable {
				target:t = "assault_plane_levelled"
			}
			triggerDisable {
				target:t = "flight_if_Thrustmaster"
				target:t = "flight_howTo_Thrustmaster"
				target:t = "flight_elevator_hint_Thrustmaster"
				target:t = "flight_ailerons_hint_Thrustmaster"
				target:t = "flight_rudder_hint_Thrustmaster"
				target:t = "flight_waypoint_reached_Thrustmaster"
				target:t = "throttle_increase_Thrustmaster"
				target:t = "throttle_increased_flight_Thrustmaster"
				target:t = "throttle_decrease_Thrustmaster"
				target:t = "throttle_wep_Thrustmaster"
				target:t = "throttle_wep_flight_Thrustmaster"
				target:t = "map_initial_hint_Thrustmaster"
				target:t = "shooting_initial_hint_Thrustmaster"
				target:t = "shooting_initial_hint"
				target:t = "shootingNotMA_precision_Thrustmaster"
				target:t = "shootingNotMA_initial_hint"
				target:t = "shootingNotMA_initial_hint_Thrustmaster"
				target:t = "training_look_at_the_target_Thrustmaster"
				target:t = "assault_zoom_in_Thrustmaster"
				target:t = "assault_zoom_out_Thrustmaster"
				target:t = "assault_targets_indicator_hint_Thrustmaster"
				target:t = "assault_change_direction_Thrustmaster"
			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			missionKillEffects {
				area:t = "big_area"
			}
			missionSetTargetsIndicator {
				target_type:t = "isAlive"
				target_marking:i = 0
				delta:i = 0
				icon:t = "truck"
				"icon army":i = 2
				set:b = false
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				target:t = "target_vehicle_01"
			}
			playerControls {
				setStatus:t = "disable"
				control:t = "ALL"
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_FLIGHTMENU"
				control:t = "ID_FLIGHTMENU_SETUP"
				control:t = "ID_CONTINUE"
				control:t = "ID_CONTINUE_SETUP"
			}
			missionSetFade {
				mode:t = "fadeOut"
				color:p3 = 0, 0, 0
				time:r = 0.5
			}
			wait {
				time:r = 0.6
			}
			unitPutToSleep {
				target:t = "enemies_squad"
			}
			unitWakeUp {
				target:t = "target_vehicle_01"
			}
			unitRestore {
				ressurectIfDead:b = true
				fullRestore:b = true
				target_marking:i = 0
				target:t = "player"
				target:t = "target_vehicle_01"
				ammoRestore:b = true
			}
			playerOptions {
				respawnBullets:b = true
			}
			wait {
				time:r = 0.15
			}
			unitMoveTo {
				target:t = "player_spawn06"
				follow_target:b = false
				teleportHeightType:t = "target"
				useUnitHeightForTele:b = false
				shouldKeepFormation:b = false
				teleportHeightValue:r = 0
				horizontalDirectionForTeleport:b = false
				waypointReachedDist:r = 10
				recalculatePathDist:r = -1
				object_marking:i = 0
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				fastClimb:b = false
				destTimeMode:b = false
				target_var_name:t = ""
				target_var_comp_op:t = "equal"
				target_var_value:i = 0
				object:t = "player"
				move_type:t = "teleport"
				lookat:t = "vehicle_area"
			}
			unitSetProperties {
				object:t = "target_vehicle_01"
				object_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				attack_type:t = "hold_fire"
				ignoresEnemy:b = true
			}
			missionSetFade {
				mode:t = "fadeIn"
				color:p3 = 0, 0, 0
				time:r = 0.5
			}
			wait {
				time:r = 0.6
			}
			unitForceRearmSpeed {
				rearmSpeedK:r = 30
				target:t = "player"
			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			moAddMissionObjective {
				target:t = "tutorialB_fighter_ground_target"
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
			}
			unitSetIndication {
				set:b = true
				target:t = "target_vehicle_01"
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
			}
			triggerEnable {
				target:t = "dialogue_ground_fight_p06"
			}
			wait {
				time:r = 1
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_FIRE"
				control:t = "ID_FIRE_MGUNS"
				control:t = "ID_FIRE_CANNONS"
				control:t = "AXIS_FIRE"
				control:t = "ID_LOCK_TARGET"
				control:t = "AXIS_AILERONS"
				control:t = "AXIS_ELEVATOR"
				control:t = "AXIS_RUDDER"
				control:t = "AXIS_THROTTLE"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
				control:t = "AXIS_MOUSE_AIM_X"
				control:t = "AXIS_MOUSE_AIM_Y"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_fighter_assault"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "pseudo_fire"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "assault_truck_indicator"
				target:t = "retry_assault_hint"
				target:t = "assault_destroy_truck"
			}
		}
		else_actions {

		}
	}
	assault_targets_indicator_hint {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isThrustmasterHotas4:b = false
			}
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			triggerDisable {
				target:t = "assault_initial"
				target:t = "dialogue_ground_fight_p01"
				target:t = "dialogue_ground_fight_p02"
				target:t = "dialogue_ground_fight_p03"
				target:t = "assault_targets_indicator_hint_Thrustmaster"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_targets_indicator"
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			hudElementSelectionShade {
				element:t = ""
			}
			hudElementBlink {
				element:t = "targetsCounter"
				time:r = 10
				blink:b = false
			}
			wait {
				time:r = 0.5
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_ZOOM"
				control:t = "ID_ZOOM_TOGGLE"
				control:t = "AXIS_ZOOM"
			}
			triggerEnable {
				target:t = "dialogue_ground_fight_p04"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_zoom_in"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "@ID_ZOOM"
				item:t = "ID_ZOOM_TOGGLE"
				item:t = "@zoom=max"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "assault_zoom_in"
			}
		}
		else_actions {

		}
	}
	assault_targets_indicator_hint_Thrustmaster {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isThrustmasterHotas4:b = true
			}
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			triggerDisable {
				target:t = "assault_initial"
				target:t = "dialogue_ground_fight_p01"
				target:t = "dialogue_ground_fight_p02"
				target:t = "dialogue_ground_fight_p03"
				target:t = "assault_targets_indicator_hint"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_targets_indicator"
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			hudElementSelectionShade {
				element:t = ""
			}
			hudElementBlink {
				element:t = "targetsCounter"
				time:r = 10
				blink:b = false
			}
			wait {
				time:r = 0.5
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_ZOOM"
				control:t = "ID_ZOOM_TOGGLE"
				control:t = "AXIS_ZOOM"
			}
			triggerEnable {
				target:t = "dialogue_ground_fight_p04"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_zoom_in"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "@ID_ZOOM"
				item:t = "ID_ZOOM_TOGGLE=2"
				item:t = "@zoom=max"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "assault_zoom_in_Thrustmaster"
			}
		}
		else_actions {

		}
	}
	assault_zoom_in {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenCameraState {
				value:r = 50
				state:t = "fov"
				comparasion_func:t = "less"
			}
		}
		actions {
			triggerDisable {
				target:t = "dialogue_ground_fight_p04"
				target:t = "assault_zoom_in_Thrustmaster"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			wait {
				time:r = 0.5
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_zoom_out"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "@ID_ZOOM"
				item:t = "ID_ZOOM_TOGGLE"
				item:t = "@zoom=min"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "assault_zoom_out"
				target:t = "dialogue_ground_fight_p05"
			}
		}
		else_actions {

		}
	}
	assault_zoom_in_Thrustmaster {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenCameraState {
				value:r = 50
				state:t = "fov"
				comparasion_func:t = "less"
			}
		}
		actions {
			triggerDisable {
				target:t = "dialogue_ground_fight_p04"
				target:t = "assault_zoom_in"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			wait {
				time:r = 0.5
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_zoom_out"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "@ID_ZOOM"
				item:t = "ID_ZOOM_TOGGLE=2"
				item:t = "@zoom=min"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "assault_zoom_out_Thrustmaster"
				target:t = "dialogue_ground_fight_p05"
			}
		}
		else_actions {

		}
	}
	assault_zoom_out {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenCameraState {
				value:r = 60
				state:t = "fov"
				comparasion_func:t = "more"
			}
		}
		actions {
			triggerDisable {
				target:t = "dialogue_ground_fight_p05"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			wait {
				time:r = 0.5
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_FIRE"
				control:t = "ID_FIRE_MGUNS"
				control:t = "ID_FIRE_CANNONS"
				control:t = "AXIS_FIRE"
				control:t = "ID_LOCK_TARGET"
				control:t = "AXIS_AILERONS"
				control:t = "AXIS_ELEVATOR"
				control:t = "AXIS_RUDDER"
				control:t = "AXIS_THROTTLE"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
				control:t = "AXIS_MOUSE_AIM_X"
				control:t = "AXIS_MOUSE_AIM_Y"
			}
			triggerEnable {
				target:t = "dialogue_ground_fight_p06"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_fighter_assault"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "pseudo_fire"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "assault_destroy_truck"
			}
		}
		else_actions {

		}
	}
	assault_zoom_out_Thrustmaster {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenCameraState {
				value:r = 60
				state:t = "fov"
				comparasion_func:t = "more"
			}
		}
		actions {
			triggerDisable {
				target:t = "dialogue_ground_fight_p05"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			wait {
				time:r = 0.5
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_FIRE"
				control:t = "ID_FIRE_MGUNS"
				control:t = "ID_FIRE_CANNONS"
				control:t = "AXIS_FIRE"
				control:t = "ID_LOCK_TARGET"
				control:t = "AXIS_AILERONS"
				control:t = "AXIS_ELEVATOR"
				control:t = "AXIS_RUDDER"
				control:t = "AXIS_THROTTLE"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
				control:t = "AXIS_MOUSE_AIM_X"
				control:t = "AXIS_MOUSE_AIM_Y"
			}
			triggerEnable {
				target:t = "dialogue_ground_fight_p06"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_fighter_assault"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ID_FIRE_CANNONS=2"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "assault_destroy_truck"
			}
		}
		else_actions {

		}
	}
	assault_destroy_truck {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_FIRE"
			}
			playerShortcutPressed {
				control:t = "ID_FIRE_MGUNS"
			}
			playerShortcutPressed {
				control:t = "ID_FIRE_CANNONS"
			}
			playerAxisValueReached {
				value:r = 0.3
				func:t = "more"
				axis:t = "AXIS_FIRE"
			}
		}
		actions {
			triggerDisable {
				target:t = "dialogue_ground_fight_p06"
				target:t = "dialogue_ground_fight_p07"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_fighter_assault"
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "pseudo_fire"
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			missionSetTimeSpeed {
				speed:r = 0.4
				realtimeTriggers:b = true
			}
			triggerEnable {
				target:t = "assault_truck_dead"
				target:t = "mission_timer"
			}
		}
		else_actions {

		}
	}
	assault_truck_indicator {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {

		}
		actions {
			missionSetTargetsIndicator {
				target_type:t = "isAlive"
				target_marking:i = 0
				delta:i = 0
				icon:t = "truck"
				"icon army":i = 2
				set:b = true
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				target:t = "target_vehicle_01"
			}
		}
		else_actions {

		}
	}
	assault_truck_dead {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			unitWhenStatus {
				object_type:t = "damaged"
				object_marking:i = 0
				check_objects:t = "all"
				target_type:t = "isAlive"
				check_period:r = 1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				object:t = "target_vehicle_01"
			}
		}
		actions {
			unitDamage {
				part:i = 1
				power:r = 1
				useEffect:b = false
				countEffects:i = 1
				delay:p2 = 1, 1
				offset:p3 = 0, 0, 0
				radiusOffset:p2 = 10, 15
				target:t = "target_vehicle_01"
				doExplosion:b = true
			}
			triggerDisable {
				target:t = "assault_destroy_truck"
				target:t = "assault_truck_indicator"
				target:t = "mission_timer"
			}
			missionSetTargetsIndicator {
				target_type:t = "isAlive"
				target_marking:i = 0
				delta:i = 0
				icon:t = "truck"
				"icon army":i = 2
				set:b = false
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				target:t = "target_vehicle_01"
			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			bigQueryAddRecord {
				name:t = "tutorialB_fighter"
				params:t = "task 7/8: player killed the truck"
				event:t = ""
			}
			wait {
				time:r = 1
			}
			playerCenterMouseAim {

			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			triggerEnable {
				target:t = "assault_change_direction_MA"
				target:t = "assault_change_direction"
				target:t = "assault_change_direction_Thrustmaster"
			}
		}
		else_actions {

		}
	}
	assault_change_direction_MA {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isMouseAim:b = true
			}
			playerWhenOptions {
				isGamepadPseudoMouseAim:b = true
			}
		}
		actions {
			triggerDisable {
				target:t = "assault_change_direction"
			}
			triggerEnable {
				target:t = "dialogue_ground_fight_p08"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_change_direction_MA"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			hudElementSelectionShade {
				element:t = "screenTop"
			}
			triggerEnable {
				target:t = "assault_direction_changed_MA"
			}
		}
		else_actions {

		}
	}
	assault_direction_changed_MA {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenCursorIn {
				cursor:t = "mouseAim"
				element:t = "screenTop"
			}
		}
		actions {
			wait {
				time:r = 0.5
			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = false
			}
			triggerEnable {
				target:t = "assault_plane_levelled"
			}
		}
		else_actions {

		}
	}
	assault_change_direction {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isGamepadPseudoMouseAim:b = false
			}
			playerWhenOptions {
				isMouseAim:b = false
			}
			playerWhenOptions {
				isThrustmasterHotas4:b = false
			}
		}
		actions {
			triggerDisable {
				target:t = "assault_change_direction_MA"
				target:t = "assault_change_direction_Thrustmaster"
			}
			triggerEnable {
				target:t = "dialogue_ground_fightNotMA_p08"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_change_direction"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "elevator=max"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "assault_direction_changed"
			}
		}
		else_actions {

		}
	}
	assault_change_direction_Thrustmaster {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isThrustmasterHotas4:b = true
			}
		}
		actions {
			triggerDisable {
				target:t = "assault_change_direction_MA"
				target:t = "assault_change_direction"
			}
			triggerEnable {
				target:t = "dialogue_ground_fightNotMA_p08"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_change_direction"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "#ui/gameuiskin#tm_stick_down"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "assault_direction_changed"
			}
		}
		else_actions {

		}
	}
	assault_direction_changed {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerAxisValueReached {
				value:r = 0.3
				func:t = "more"
				axis:t = "AXIS_ELEVATOR"
			}
		}
		actions {
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = false
			}
			triggerEnable {
				target:t = "assault_plane_levelled"
			}
		}
		else_actions {

		}
	}
	assault_plane_levelled {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOrientation {
				value:r = -5
				orientation:t = "pitch"
				comparasion_func:t = "more"
			}
		}
		actions {
			triggerDisable {
				target:t = "dialogue_ground_fight_p08"
				target:t = "dialogue_ground_fight_p09"
				target:t = "dialogue_ground_fight_MA_p09"
				target:t = "dialogue_ground_fightNotMA_p08"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			hudElementSelectionShade {
				element:t = ""
			}
			triggerEnable {
				target:t = "assault_completed"
			}
		}
		else_actions {

		}
	}
	assault_completed {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {

		}
		actions {
			triggerDisable {
				target:t = "initial"
				target:t = "flight_MA_hint"
				target:t = "flight_waypoint_hint"
				target:t = "flight_waypoint_start"
				target:t = "flight_waypoint_reached"
				target:t = "retry_flight_hint"
				target:t = "throttle_increase"
				target:t = "throttle_increased_flight"
				target:t = "throttle_wep"
				target:t = "throttle_done"
				target:t = "mission_timer"
				target:t = "throttle_wep_flight"
				target:t = "shooting_press_fire"
				target:t = "shooting_initial"
				target:t = "shooting_balloon_dead"
				target:t = "shooting_lock_target_pressed"
				target:t = "shooting_plane_killed"
				target:t = "retry_plane_hint"
				target:t = "flight_elevator_hint"
				target:t = "flight_ailerons_hint"
				target:t = "flight_rudder_hint"
				target:t = "flight_if_MA"
				target:t = "flight_if_not_MA"
				target:t = "map_objective_hint"
				target:t = "map_press_button_hint"
				target:t = "map_initial_hint"
				target:t = "map_button_pressed"
				target:t = "shooting_precision"
				target:t = "shooting_cursor_moved"
				target:t = "shooting_keep_aiming"
				target:t = "shooting_open_fire"
				target:t = "shooting_kill_plane_initial"
				target:t = "training_planes_killed"
				target:t = "retry_training_hint"
				target:t = "training_initial"
				target:t = "assault_destroy_truck"
				target:t = "assault_truck_indicator"
				target:t = "assault_truck_dead"
				target:t = "retry_assault_hint"
				target:t = "assault_change_direction_MA"
				target:t = "assault_direction_changed_MA"
				target:t = "assault_initial"
				target:t = "assault_change_direction"
				target:t = "assault_direction_changed"
				target:t = "shootingNotMA_kill_plane_initial"
				target:t = "shootingNotMA_plane_killed"
				target:t = "retry_planeNotMA_hint"
				target:t = "shootingNotMA_lock_target_pressed"
				target:t = "shootingNotMA_precision"
				target:t = "shootingNotMA_shoot_now"
			}
			triggerDisable {
				target:t = "assault_plane_levelled"
			}
			triggerEnable {
				target:t = "dialogue_victory_p01"
			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = true
			}
			moSetObjectiveStatus {
				target:t = "tutorialB_fighter_ground_target"
				status:i = 2
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
				object_marking:i = 0
			}
			wait {
				time:r = 1
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_mission_won"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
		}
		else_actions {

		}
	}
	mission_end {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerDisable {
				target:t = "assault_completed"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			bigQueryAddRecord {
				name:t = "tutorialB_fighter"
				params:t = "task 8/8: player pulled out of a dive maneuver and finished the tutorial"
				event:t = ""
			}
			wait {
				time:r = 0.5
			}
			missionCompleted {
				timer:b = false
				debriefingTimer:i = 2
			}
			wait {
				time:r = 2
			}
			missionDebriefing {

			}
		}
		else_actions {

		}
	}
	retry_assault_hint {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "timer"
				value:i = 60
				comparasion_func:t = "more"
			}
			unitWhenStatus {
				object_type:t = "isUseless"
				object_marking:i = 0
				check_objects:t = "all"
				target_type:t = "isAlive"
				check_period:r = 1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				object:t = "player"
			}
		}
		actions {
			triggerDisable {
				target:t = "initial"
				target:t = "flight_MA_hint"
				target:t = "flight_waypoint_hint"
				target:t = "flight_waypoint_start"
				target:t = "flight_waypoint_reached"
				target:t = "retry_flight_hint"
				target:t = "throttle_increase"
				target:t = "throttle_increased_flight"
				target:t = "throttle_wep"
				target:t = "throttle_done"
				target:t = "mission_timer"
				target:t = "throttle_wep_flight"
				target:t = "shooting_press_fire"
				target:t = "shooting_initial"
				target:t = "shooting_balloon_dead"
				target:t = "shooting_lock_target_pressed"
				target:t = "shooting_plane_killed"
				target:t = "retry_plane_hint"
				target:t = "flight_elevator_hint"
				target:t = "flight_ailerons_hint"
				target:t = "flight_rudder_hint"
				target:t = "flight_if_MA"
				target:t = "flight_if_not_MA"
				target:t = "map_objective_hint"
				target:t = "map_press_button_hint"
				target:t = "map_initial_hint"
				target:t = "map_button_pressed"
				target:t = "shooting_precision"
				target:t = "shooting_cursor_moved"
				target:t = "shooting_keep_aiming"
				target:t = "shooting_open_fire"
				target:t = "shooting_kill_plane_initial"
				target:t = "training_planes_killed"
				target:t = "retry_training_hint"
				target:t = "training_initial"
				target:t = "assault_destroy_truck"
				target:t = "assault_truck_indicator"
				target:t = "assault_truck_dead"
				target:t = "assault_initial"
				target:t = "assault_change_direction_MA"
				target:t = "assault_direction_changed_MA"
				target:t = "assault_completed"
				target:t = "assault_change_direction"
				target:t = "assault_direction_changed"
				target:t = "shootingNotMA_kill_plane_initial"
				target:t = "shootingNotMA_plane_killed"
				target:t = "retry_planeNotMA_hint"
				target:t = "shootingNotMA_lock_target_pressed"
				target:t = "shootingNotMA_precision"
				target:t = "shootingNotMA_shoot_now"
				target:t = "training_look_at_the_target_ps4"
				target:t = "training_target_camera_used_ps4"
			}
			triggerDisable {
				target:t = "assault_plane_levelled"
				target:t = "assault_zoom_in"
				target:t = "assault_zoom_out"
				target:t = "assault_initial"
			}
			triggerDisable {
				target:t = "dialogue_intro_p01"
				target:t = "dialogue_intro_p02"
				target:t = "dialogue_main_controls_p01"
				target:t = "dialogue_main_controls_p02"
				target:t = "dialogue_main_controls_p03"
				target:t = "dialogue_main_controls_p04"
				target:t = "dialogue_main_controls_MA_p01"
				target:t = "dialogue_main_controls_MA_p02"
				target:t = "dialogue_main_controls_MA_p03"
				target:t = "dialogue_main_controls_p05"
				target:t = "dialogue_throttle_p01"
				target:t = "dialogue_throttle_p02"
				target:t = "dialogue_throttle_p03"
				target:t = "dialogue_throttle_p04"
				target:t = "dialogue_throttle_p05"
				target:t = "dialogue_throttle_p06"
				target:t = "dialogue_throttle_p07"
				target:t = "dialogue_throttle_p08"
				target:t = "dialogue_throttle_p09"
				target:t = "dialogue_throttle_p10"
				target:t = "dialogue_throttle_p11"
				target:t = "dialogue_map_p01"
				target:t = "dialogue_map_p02"
				target:t = "dialogue_immobile_p01"
				target:t = "dialogue_immobile_p02"
				target:t = "dialogue_immobile_p03"
				target:t = "dialogue_immobile_p04"
				target:t = "dialogue_fight_p01"
				target:t = "dialogue_fight_p02"
				target:t = "dialogue_fight_p03"
				target:t = "dialogue_fight_p04"
				target:t = "dialogue_fight_p05"
				target:t = "dialogue_fight_MA_p05"
				target:t = "dialogue_fight_p06"
				target:t = "dialogue_fight_MA_p06"
				target:t = "dialogue_fight_MA_p07"
				target:t = "dialogue_fight_p07"
				target:t = "dialogue_fight_p08"
				target:t = "dialogue_fight_p09"
				target:t = "dialogue_training_p01"
				target:t = "dialogue_training_p02"
				target:t = "dialogue_ground_fight_p01"
				target:t = "dialogue_ground_fight_p02"
				target:t = "dialogue_ground_fight_p03"
				target:t = "dialogue_ground_fight_p04"
				target:t = "dialogue_ground_fight_p05"
				target:t = "dialogue_ground_fight_p06"
				target:t = "dialogue_ground_fight_p07"
				target:t = "dialogue_ground_fight_p08"
				target:t = "dialogue_ground_fight_p09"
				target:t = "dialogue_ground_fight_MA_p09"
				target:t = "dialogue_victory_p01"
				target:t = "dialogue_victory_p02"
				target:t = "dialogue_victory_p03"
			}
			triggerDisable {
				target:t = "shootingMA_screen01"
				target:t = "shootingMA_video01"
				target:t = "shootingMA_video02"
				target:t = "shootingMA_video03"
				target:t = "shooting_start"
				target:t = "shooting_start_ps4_MA"
				target:t = "shootingNotMA_screen01"
				target:t = "shootingNotMA_screen02"
				target:t = "shootingNotMA_screen03"
			}
			missionStopSpeech {

			}
			varSetInt {
				value:i = 0
				var:t = "timer"
			}
			hudElementSelectionShade {
				element:t = ""
			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = true
			}
			playerControls {
				setStatus:t = "disable"
				control:t = "ALL"
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_retry"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			missionKillEffects {
				area:t = "big_area"
			}
			wait {
				time:r = 2
			}
			playHint {
				hintType:t = "tutorialHint"
				name:t = "hints/tutorialB_retry"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "assault_retry_start"
			}
		}
		else_actions {

		}
	}
	mission_timer {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {

		}
		actions {
			varModify {
				operator:t = "add"
				value:r = 1
				var:t = "timer"
			}
		}
		else_actions {

		}
	}
	forever_full_ammo {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 10
			}
		}
		conditions {

		}
		actions {
			unitRestore {
				ressurectIfDead:b = false
				fullRestore:b = true
				target_marking:i = 0
				target:t = "player"
				ammoRestore:b = true
			}
			playerOptions {
				respawnBullets:b = true
			}
		}
		else_actions {

		}
	}
	dialogue_intro_p01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_intro_p01"
				showInGame:b = false
			}
			triggerEnable {
				target:t = "dialogue_intro_p02"
			}
		}
		else_actions {

		}
	}
	dialogue_intro_p02 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_intro_p02"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_main_controls_p01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_main_controls_p01"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_main_controls_p02 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_main_controls_p02"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_main_controls_p03 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_main_controls_p03"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_main_controls_p04 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_main_controls_p04"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_main_controls_MA_p01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_main_controls_MA_p01"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_main_controls_MA_p02 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_main_controls_MA_p02"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_main_controls_MA_p03 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_main_controls_MA_p03"
				showInGame:b = false
			}
			wait {
				time:r = 0.5
			}
			triggerEnable {
				target:t = "dialogue_main_controls_p05"
			}
		}
		else_actions {

		}
	}
	dialogue_main_controls_p05 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_main_controls_p05"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_throttle_p01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_throttle_p01"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_throttle_p02 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_throttle_p02"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_throttle_p03 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_throttle_p03"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_throttle_p04 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_throttle_p04"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_throttle_p05 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_throttle_p05"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_throttle_p06 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_throttle_p06"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_throttle_p07 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_throttle_p07"
				showInGame:b = false
			}
			triggerEnable {
				target:t = "dialogue_throttle_p08"
			}
		}
		else_actions {

		}
	}
	dialogue_throttle_p08 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_throttle_p08"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_throttle_p09 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_throttle_p09"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_throttle_p10 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_throttle_p10"
				showInGame:b = false
			}
			triggerEnable {
				target:t = "dialogue_throttle_p11"
			}
		}
		else_actions {

		}
	}
	dialogue_throttle_p11 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_throttle_p11"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_map_p01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_map_p01"
				showInGame:b = false
			}
			triggerEnable {
				target:t = "dialogue_map_p02"
			}
		}
		else_actions {

		}
	}
	dialogue_map_p02 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_map_p02"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_immobile_p01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_immobile_p01"
				showInGame:b = false
			}
			triggerEnable {
				target:t = "dialogue_immobile_p02"
			}
		}
		else_actions {

		}
	}
	dialogue_immobile_p02 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_immobile_p02"
				showInGame:b = false
			}
			triggerEnable {
				target:t = "dialogue_immobile_p03"
			}
		}
		else_actions {

		}
	}
	dialogue_immobile_p03 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_immobile_p03"
				showInGame:b = false
			}
			triggerEnable {
				target:t = "dialogue_immobile_p04"
			}
		}
		else_actions {

		}
	}
	dialogue_immobile_p04 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_immobile_p04"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_fightNotMA_p01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_fight_p01"
				showInGame:b = false
			}
			triggerEnable {
				target:t = "dialogue_fight_p02"
			}
		}
		else_actions {

		}
	}
	dialogue_fight_p01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_fight_p01"
				showInGame:b = false
			}
			triggerEnable {
				target:t = "dialogue_fight_p03"
			}
		}
		else_actions {

		}
	}
	dialogue_fight_p02 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_fight_p02"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_fight_p03 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_fight_p03"
				showInGame:b = false
			}
			triggerEnable {
				target:t = "dialogue_fight_p04"
			}
		}
		else_actions {

		}
	}
	dialogue_fight_p04 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_fight_p04"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_fightNotMA_p05 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_fight_p05"
				showInGame:b = false
			}
			triggerEnable {
				target:t = "dialogue_fight_p08"
			}
		}
		else_actions {

		}
	}
	dialogue_fight_p05 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_fight_p05"
				showInGame:b = false
			}
			triggerEnable {
				target:t = "dialogue_fight_MA_p05"
			}
		}
		else_actions {

		}
	}
	dialogue_fight_MA_p05 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_fight_MA_p05"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_fight_p06 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_fight_p06"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_fight_MA_p06 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_fight_MA_p06"
				showInGame:b = false
			}
			triggerEnable {
				target:t = "dialogue_fight_p06"
			}
		}
		else_actions {

		}
	}
	dialogue_fight_MA_p07 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_fight_MA_p07"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_fight_p07 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_fight_p07"
				showInGame:b = false
			}
			triggerEnable {
				target:t = "dialogue_fight_p08"
			}
		}
		else_actions {

		}
	}
	dialogue_fight_p08 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_fight_p08"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_fight_p09 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_fight_p09"
				showInGame:b = false
			}
			triggerEnable {
				target:t = "training_initial"
			}
		}
		else_actions {

		}
	}
	dialogue_training_p01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_training_p01"
				showInGame:b = false
			}
			triggerEnable {
				target:t = "training_look_at_the_target_ps4"
				target:t = "training_planes_killed"
				target:t = "training_look_at_the_target_Thrustmaster"
			}
		}
		else_actions {

		}
	}
	dialogue_training_p02 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_training_p02"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_ground_fight_p01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_ground_fight_p01"
				showInGame:b = false
			}
			triggerEnable {
				target:t = "dialogue_ground_fight_p02"
			}
		}
		else_actions {

		}
	}
	dialogue_ground_fight_p02 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_ground_fight_p02"
				showInGame:b = false
			}
			triggerEnable {
				target:t = "dialogue_ground_fight_p03"
			}
		}
		else_actions {

		}
	}
	dialogue_ground_fight_p03 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_ground_fight_p03"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_ground_fight_p04 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_ground_fight_p04"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_ground_fight_p05 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_ground_fight_p05"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_ground_fight_p06 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_ground_fight_p06"
				showInGame:b = false
			}
			triggerEnable {
				target:t = "dialogue_ground_fight_p07"
			}
		}
		else_actions {

		}
	}
	dialogue_ground_fight_p07 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_ground_fight_p07"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_ground_fightNotMA_p08 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_ground_fight_p08"
				showInGame:b = false
			}
			triggerEnable {
				target:t = "dialogue_ground_fight_p09"
			}
		}
		else_actions {

		}
	}
	dialogue_ground_fight_p08 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_ground_fight_p08"
				showInGame:b = false
			}
			triggerEnable {
				target:t = "dialogue_ground_fight_MA_p09"
			}
		}
		else_actions {

		}
	}
	dialogue_ground_fight_p09 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_ground_fight_p09"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_ground_fight_MA_p09 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_ground_fight_MA_p09"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	dialogue_victory_p01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_victory_p01"
				showInGame:b = false
			}
			triggerEnable {
				target:t = "dialogue_victory_p02"
			}
		}
		else_actions {

		}
	}
	dialogue_victory_p02 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_victory_p02"
				showInGame:b = false
			}
			triggerEnable {
				target:t = "dialogue_victory_p03"
			}
		}
		else_actions {

		}
	}
	dialogue_victory_p03 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_victory_p03"
				showInGame:b = false
			}
			triggerEnable {
				target:t = "mission_end"
			}
		}
		else_actions {

		}
	}
	tutorialB_fighter_forestall_explanation_notMA01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_forestall_explanation_notMA01"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	tutorialB_fighter_forestall_explanation_notMA02 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_forestall_explanation_notMA02"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	tutorialB_fighter_forestall_explanation01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_forestall_explanation01"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	tutorialB_fighter_forestall_explanation02 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_forestall_explanation02"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	tutorialB_fighter_forestall_explanation03 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_forestall_explanation03"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	tutorialB_fighter_forestall_explanation04 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_forestall_explanation04"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	tutorialB_fighter_fight_aim_and_keep_p01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_fight_aim_and_keep_p01"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
	tutorialB_fighter_fight_initial_p01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorialB_fighter_fight_initial_p01"
				showInGame:b = false
			}
		}
		else_actions {

		}
	}
}
mission_objectives {
	isCategory:b = true
	is_enabled:b = true
	tutorialB_fighter_waypoints {
		is_enabled:b = false
		comments:t = ""
		type:t = "abstractMissionObjective"
		props {
			isPrimary:b = true
			timeLimit:i = 7200
			scoreConst:i = 100
			scoreTime:i = 400
		}
		onSuccess {

		}
		onFailed {

		}
	}
	tutorialB_fighter_map {
		is_enabled:b = false
		comments:t = ""
		type:t = "abstractMissionObjective"
		props {
			isPrimary:b = true
			timeLimit:i = 7200
			scoreConst:i = 100
			scoreTime:i = 400
		}
		onSuccess {

		}
		onFailed {

		}
	}
	tutorialB_fighter_balloon {
		is_enabled:b = false
		comments:t = ""
		type:t = "abstractMissionObjective"
		props {
			isPrimary:b = true
			timeLimit:i = 7200
			scoreConst:i = 100
			scoreTime:i = 400
		}
		onSuccess {

		}
		onFailed {

		}
	}
	tutorialB_fighter_planes {
		is_enabled:b = false
		comments:t = ""
		type:t = "abstractMissionObjective"
		props {
			isPrimary:b = true
			timeLimit:i = 7200
			scoreConst:i = 100
			scoreTime:i = 400
		}
		onSuccess {

		}
		onFailed {

		}
	}
	tutorialB_fighter_training {
		is_enabled:b = false
		comments:t = ""
		type:t = "abstractMissionObjective"
		props {
			isPrimary:b = true
			timeLimit:i = 7200
			scoreConst:i = 100
			scoreTime:i = 400
		}
		onSuccess {

		}
		onFailed {

		}
	}
	tutorialB_fighter_ground_target {
		is_enabled:b = false
		comments:t = ""
		type:t = "abstractMissionObjective"
		props {
			isPrimary:b = true
			timeLimit:i = 7200
			scoreConst:i = 100
			scoreTime:i = 400
		}
		onSuccess {

		}
		onFailed {

		}
	}
}
variables {
	timer:i = 0
	slow_timer:i = 0
}
dialogs {
	tutorialB_fighter_intro_p01 {
		speech {
			id:t = "tutorialB_fighter_intro_p01"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_intro_p02 {
		speech {
			id:t = "tutorialB_fighter_intro_p02"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_main_controls_p01 {
		speech {
			id:t = "tutorialB_fighter_main_controls_p01"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_main_controls_p02 {
		speech {
			id:t = "tutorialB_fighter_main_controls_p02"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_main_controls_p03 {
		speech {
			id:t = "tutorialB_fighter_main_controls_p03"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_main_controls_p04 {
		speech {
			id:t = "tutorialB_fighter_main_controls_p04"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_main_controls_MA_p01 {
		speech {
			id:t = "tutorialB_fighter_main_controls_MA_p01"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_main_controls_MA_p02 {
		speech {
			id:t = "tutorialB_fighter_main_controls_MA_p02"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_main_controls_MA_p03 {
		speech {
			id:t = "tutorialB_fighter_main_controls_MA_p03"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_main_controls_p05 {
		speech {
			id:t = "tutorialB_fighter_main_controls_p05"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_throttle_p01 {
		speech {
			id:t = "tutorialB_fighter_throttle_p01"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_throttle_p02 {
		speech {
			id:t = "tutorialB_fighter_throttle_p02"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_throttle_p03 {
		speech {
			id:t = "tutorialB_fighter_throttle_p03"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_throttle_p04 {
		speech {
			id:t = "tutorialB_fighter_throttle_p04"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_throttle_p05 {
		speech {
			id:t = "tutorialB_fighter_throttle_p05"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_throttle_p06 {
		speech {
			id:t = "tutorialB_fighter_throttle_p06"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_throttle_p07 {
		speech {
			id:t = "tutorialB_fighter_throttle_p07"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_throttle_p08 {
		speech {
			id:t = "tutorialB_fighter_throttle_p08"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_throttle_p09 {
		speech {
			id:t = "tutorialB_fighter_throttle_p09"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_throttle_p10 {
		speech {
			id:t = "tutorialB_fighter_throttle_p10"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_throttle_p11 {
		speech {
			id:t = "tutorialB_fighter_throttle_p11"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_map_p01 {
		speech {
			id:t = "tutorialB_fighter_map_p01"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_map_p02 {
		speech {
			id:t = "tutorialB_fighter_map_p02"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_immobile_p01 {
		speech {
			id:t = "tutorialB_fighter_immobile_p01"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_immobile_p02 {
		speech {
			id:t = "tutorialB_fighter_immobile_p02"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_immobile_p03 {
		speech {
			id:t = "tutorialB_fighter_immobile_p03"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_immobile_p04 {
		speech {
			id:t = "tutorialB_fighter_immobile_p04"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_forestall_explanation_notMA01 {
		speech {
			id:t = "tutorialB_fighter_forestall_explanation_notMA01"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_forestall_explanation_notMA02 {
		speech {
			id:t = "tutorialB_fighter_forestall_explanation_notMA02"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_forestall_explanation01 {
		speech {
			id:t = "tutorialB_fighter_forestall_explanation01"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_forestall_explanation02 {
		speech {
			id:t = "tutorialB_fighter_forestall_explanation02"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_forestall_explanation03 {
		speech {
			id:t = "tutorialB_fighter_forestall_explanation03"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_forestall_explanation04 {
		speech {
			id:t = "tutorialB_fighter_forestall_explanation04"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_fight_aim_and_keep_p01 {
		speech {
			id:t = "tutorialB_fighter_fight_aim_and_keep_p01"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_fight_initial_p01 {
		speech {
			id:t = "tutorialB_fighter_fight_initial_p01"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_fight_p01 {
		speech {
			id:t = "tutorialB_fighter_fight_p01"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_fight_p02 {
		speech {
			id:t = "tutorialB_fighter_fight_p02"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_fight_p03 {
		speech {
			id:t = "tutorialB_fighter_fight_p03"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_fight_p04 {
		speech {
			id:t = "tutorialB_fighter_fight_p04"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_fight_p05 {
		speech {
			id:t = "tutorialB_fighter_fight_p05"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_fight_MA_p05 {
		speech {
			id:t = "tutorialB_fighter_fight_MA_p05"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_fight_p06 {
		speech {
			id:t = "tutorialB_fighter_fight_p06"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_fight_MA_p06 {
		speech {
			id:t = "tutorialB_fighter_fight_MA_p06"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_fight_MA_p07 {
		speech {
			id:t = "tutorialB_fighter_fight_MA_p07"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_fight_p07 {
		speech {
			id:t = "tutorialB_fighter_fight_p07"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_fight_p08 {
		speech {
			id:t = "tutorialB_fighter_fight_p08"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_fight_p09 {
		speech {
			id:t = "tutorialB_fighter_fight_p09"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_training_p01 {
		speech {
			id:t = "tutorialB_fighter_training_p01"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_training_p02 {
		speech {
			id:t = "tutorialB_fighter_training_p02"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_ground_fight_p01 {
		speech {
			id:t = "tutorialB_fighter_ground_fight_p01"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_ground_fight_p02 {
		speech {
			id:t = "tutorialB_fighter_ground_fight_p02"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_ground_fight_p03 {
		speech {
			id:t = "tutorialB_fighter_ground_fight_p03"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_ground_fight_p04 {
		speech {
			id:t = "tutorialB_fighter_ground_fight_p04"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_ground_fight_p05 {
		speech {
			id:t = "tutorialB_fighter_ground_fight_p05"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_ground_fight_p06 {
		speech {
			id:t = "tutorialB_fighter_ground_fight_p06"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_ground_fight_p07 {
		speech {
			id:t = "tutorialB_fighter_ground_fight_p07"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_ground_fight_p08 {
		speech {
			id:t = "tutorialB_fighter_ground_fight_p08"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_ground_fight_p09 {
		speech {
			id:t = "tutorialB_fighter_ground_fight_p09"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_ground_fight_MA_p09 {
		speech {
			id:t = "tutorialB_fighter_ground_fight_MA_p09"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_victory_p01 {
		speech {
			id:t = "tutorialB_fighter_victory_p01"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_victory_p02 {
		speech {
			id:t = "tutorialB_fighter_victory_p02"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorialB_fighter_victory_p03 {
		speech {
			id:t = "tutorialB_fighter_victory_p03"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
}
airfields {

}
effects {

}
units {
	armada {
		name:t = "player"
		tm:m = [[-0.461748, 0.0, -0.887011] [0.0, 1.0, 0.0] [0.887011, 0.0, -0.461748] [-3299.15, 900.0, -8279.7]]
		unit_class:t = "i-153p"
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = "I153_default"
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 1
			count:i = 1
			free_distance:r = 70
			floating_distance:r = 50
			minimum_distance_to_earth:r = 20
			altLimit:r = 6000
			attack_type:t = "fire_at_will"
			skill:i = 4
			uniqueName:t = ""
			plane {
				wing_formation:t = "Diamond"
				row_distances:r = 3
				col_distances:r = 3
				super_formation:t = "Diamond"
				super_row_distances:r = 1.5
				super_col_distances:r = 1.5
				ai_skill:t = "NORMAL"
				task:t = "FLY_WAYPOINT"
			}
		}
		way {

		}
	}
	structures {
		name:t = "target_balloon"
		tm:m = [[-0.887011, 0.0, 0.461748] [0.0, 1.0, 0.0] [-0.461748, 0.0, -0.887011] [-3949.48, 900.0, -9572.91]]
		unit_class:t = "barrage_balloon_unit_light"
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 1
			formation_type:t = "rows"
			formation_div:i = 3
			formation_step:p2 = 2.5, 2
			formation_noise:p2 = 0.1, 0.1
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
		}
		way {

		}
	}
	armada {
		name:t = "target_plane01"
		tm:m = [[0.866025, 0.0, -0.5] [0.0, 1.0, 0.0] [0.5, 0.0, 0.866025] [-4506.1, 900.0, -10497.8]]
		unit_class:t = "he51a1"
		closed_waypoints:b = true
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = "he51a1_default"
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 1
			free_distance:r = 70
			floating_distance:r = 50
			minimum_distance_to_earth:r = 20
			altLimit:r = 6000
			attack_type:t = "hold_fire"
			skill:i = 4
			uniqueName:t = ""
			speed:r = 300
			plane {
				wing_formation:t = "Diamond"
				row_distances:r = 3
				col_distances:r = 3
				super_formation:t = "Diamond"
				super_row_distances:r = 1.5
				super_col_distances:r = 1.5
				ai_skill:t = "NORMAL"
				task:t = "FLY_WAYPOINT"
			}
		}
		way {

		}
	}
	squad {
		name:t = "enemies_squad"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-3944.85, -2.6, -11501.7]]
		props {
			squad_members:t = "target_plane01"
			squad_members:t = "target_balloon"
			squad_members:t = "target_plane02"
			squad_members:t = "target_vehicle_01"
			object_marking:i = 0
		}
	}
	armada {
		name:t = "target_plane02"
		tm:m = [[-0.999048, 0.0, 0.0436196] [0.0, 1.0, 0.0] [-0.0436196, 0.0, -0.999048] [-5046.2, 900.0, -11985.3]]
		unit_class:t = "he51a1"
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = "he51a1_default"
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 2
			free_distance:r = 70
			floating_distance:r = 50
			minimum_distance_to_earth:r = 20
			altLimit:r = 6000
			attack_type:t = "fire_at_will"
			skill:i = 4
			uniqueName:t = ""
			plane {
				wing_formation:t = "Diamond"
				row_distances:r = 3
				col_distances:r = 3
				super_formation:t = "Diamond"
				super_row_distances:r = 1.5
				super_col_distances:r = 1.5
				ai_skill:t = "NORMAL"
				task:t = "FLY_WAYPOINT"
			}
		}
		way {

		}
	}
	wheeled_vehicles {
		name:t = "target_vehicle_01"
		tm:m = [[-0.642787, 0.0, -0.766045] [0.0, 1.0, 0.0] [0.766045, 0.0, -0.642787] [-4411.6, -3.8, -12733.8]]
		unit_class:t = "germ_opelBlitz_tent"
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 1
			formation_type:t = "rows"
			formation_div:i = 3
			formation_step:p2 = 2.5, 2
			formation_noise:p2 = 0.1, 0.1
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
		}
		way {

		}
	}
}
areas {
	target_balloon_area {
		type:t = "Sphere"
		tm:m = [[3400.0, 0.0, 0.0] [0.0, 3400.0, 0.0] [0.0, 0.0, 3400.0] [-3945.9, -3.15, -9577.25]]
		props {
			forceReplication:b = true
		}
	}
	player_spawn01 {
		type:t = "Sphere"
		tm:m = [[358.9, 0.0, 0.0] [0.0, 358.9, 0.0] [0.0, 0.0, 358.9] [-3464.5, 900.0, -8635.7]]
		props {
			forceReplication:b = true
		}
	}
	player_spawn02 {
		type:t = "Sphere"
		tm:m = [[40.0, 0.0, 0.0] [0.0, 40.0, 0.0] [0.0, 0.0, 40.0] [-4133.65, 700.0, -9848.9]]
		props {
			forceReplication:b = true
		}
	}
	player_spawn03 {
		type:t = "Sphere"
		tm:m = [[358.9, 0.0, 0.0] [0.0, 358.9, 0.0] [0.0, 0.0, 358.9] [-1977.65, 900.0, -6335.7]]
		props {
			forceReplication:b = true
		}
	}
	way_of_plane01 {
		type:t = "Sphere"
		tm:m = [[422.4, 0.0, 0.0] [0.0, 422.4, 0.0] [0.0, 0.0, 422.4] [-1212.05, 700.0, -13553.7]]
		props {
			forceReplication:b = true
		}
	}
	big_area {
		type:t = "Sphere"
		tm:m = [[23793.7, 0.0, 0.0] [0.0, 23793.7, 0.0] [0.0, 0.0, 23793.7] [-4101.7, -6.05, -12822.4]]
		props {
			forceReplication:b = true
		}
	}
	target_plane01_starting_position {
		type:t = "Sphere"
		tm:m = [[40.0, 0.0, 0.0] [0.0, 40.0, 0.0] [0.0, 0.0, 40.0] [-4451.9, 700.0, -10324.0]]
		props {
			forceReplication:b = true
		}
	}
	player_spawn04 {
		type:t = "Sphere"
		tm:m = [[40.0, 0.0, 0.0] [0.0, 40.0, 0.0] [0.0, 0.0, 40.0] [-4473.7, 900.0, -11292.4]]
		props {
			forceReplication:b = true
		}
	}
	player_spawn00 {
		type:t = "Sphere"
		tm:m = [[358.9, 0.0, 0.0] [0.0, 358.9, 0.0] [0.0, 0.0, 358.9] [-442.75, 900.0, -4001.15]]
		props {
			forceReplication:b = true
		}
	}
	player_spawn05 {
		type:t = "Sphere"
		tm:m = [[358.9, 0.0, 0.0] [0.0, 358.9, 0.0] [0.0, 0.0, 358.9] [-3183.3, 900.0, -7152.05]]
		props {
			forceReplication:b = true
		}
	}
	waypoint00 {
		type:t = "Sphere"
		tm:m = [[600.0, 0.0, 0.0] [0.0, 600.0, 0.0] [0.0, 0.0, 600.0] [-820.25, 900.0, -4756.7]]
		props {
			forceReplication:b = true
		}
	}
	waypoint01 {
		type:t = "Sphere"
		tm:m = [[600.0, 0.0, 0.0] [0.0, 600.0, 0.0] [0.0, 0.0, 600.0] [-1032.9, 900.0, -5441.55]]
		props {
			forceReplication:b = true
		}
	}
	target_plane02_starting_position {
		type:t = "Sphere"
		tm:m = [[40.0, 0.0, 0.0] [0.0, 40.0, 0.0] [0.0, 0.0, 40.0] [-4672.8, 900.0, -11826.3]]
		props {
			forceReplication:b = true
		}
	}
	target_plane02_final_position {
		type:t = "Sphere"
		tm:m = [[400.0, 0.0, 0.0] [0.0, 400.0, 0.0] [0.0, 0.0, 400.0] [-11744.8, 900.0, -19017.8]]
		props {
			forceReplication:b = true
		}
	}
	waypoint02 {
		type:t = "Sphere"
		tm:m = [[600.0, 0.0, 0.0] [0.0, 600.0, 0.0] [0.0, 0.0, 600.0] [-1245.45, 900.0, -6921.8]]
		props {
			forceReplication:b = true
		}
	}
	vehicle_area {
		type:t = "Sphere"
		tm:m = [[32.4, 0.0, 0.0] [0.0, 32.4, 0.0] [0.0, 0.0, 32.4] [-4416.7, -1.8, -12729.0]]
		props {
			forceReplication:b = true
		}
	}
	target_plane01_starting_positionNotMA {
		type:t = "Sphere"
		tm:m = [[40.0, 0.0, 0.0] [0.0, 40.0, 0.0] [0.0, 0.0, 40.0] [-4479.95, 700.0, -10414.7]]
		props {
			forceReplication:b = true
		}
	}
	target_plane01_lookAtArea {
		type:t = "Sphere"
		tm:m = [[40.0, 0.0, 0.0] [0.0, 40.0, 0.0] [0.0, 0.0, 40.0] [-4463.3, 700.0, -10868.9]]
		props {
			forceReplication:b = true
		}
	}
	player_lookAtArea {
		type:t = "Sphere"
		tm:m = [[40.0, 0.0, 0.0] [0.0, 40.0, 0.0] [0.0, 0.0, 40.0] [-4476.5, 700.0, -10254.9]]
		props {
			forceReplication:b = true
		}
	}
	player_lookAtArea02 {
		type:t = "Sphere"
		tm:m = [[358.9, 0.0, 0.0] [0.0, 358.9, 0.0] [0.0, 0.0, 358.9] [-1116.25, 900.0, -4579.05]]
		props {
			forceReplication:b = true
		}
	}
	player_spawn06 {
		type:t = "Sphere"
		tm:m = [[40.0, 0.0, 0.0] [0.0, 40.0, 0.0] [0.0, 0.0, 40.0] [-4788.65, 152.394, -12544.9]]
		props {
			forceReplication:b = true
		}
	}
}
objLayers {
	layer {
		enabled:b = true
	}
	layer {
		enabled:b = true
	}
	layer {
		enabled:b = true
	}
	layer {
		enabled:b = true
	}
}
wayPoints {

}