selected_tag:t = ""
bin_dump_file:t = ""
mission_settings {
	player {
		army:i = 1
		wing:t = "player"
	}
	player_teamB {
		army:i = 2
	}
	mission {
		level:t = "levels/honolulu.bin"
		type:t = "training"
		gt_training:b = false
		environment:t = "Morning"
		weather:t = "good"
		windDirection:p3 = 1, 0, 0
		isLimitedFuel:b = false
		isLimitedAmmo:b = false
		restoreType:t = "manual"
		optionalTakeOff:b = false
		forceSkiesInitialRandomSeed:b = true
		skiesInitialRandomSeed:i = 1
		customWeather {
			windDir:p2 = 0.6, 0.8
			wind_scale:r = 1
			max_wind_strength:r = 6
			sky {
				mie_height:r = 0.9
			}
			strata_clouds {
				amount:r = 0.5
				altitude:r = 11
			}
		}
	}
	atmosphere {
		pressure:r = 760
		temperature:r = 0
	}
	spectator_points {

	}
	briefing {
		place_loc:t = ""
		date_loc:t = ""
		objective_loc:t = ""
		music:t = "action_01"
		viewAreaScale:r = 2
		part {
			event:t = ""
			minTime:i = 0
			slide {
				map:b = false
				minTime:i = 4
				picture:t = "tutorial/tutorial_01"
				showAirMap:b = false
			}
			slide {
				map:b = false
				minTime:i = 4
				picture:t = "tutorial/tutorial_02"
				showAirMap:b = false
			}
			slide {
				map:b = false
				minTime:i = 4
				picture:t = "tutorial/tutorial_03"
				showAirMap:b = false
			}
			slide {
				map:b = false
				minTime:i = 4
				picture:t = "tutorial/tutorial_04"
				showAirMap:b = false
			}
			slide {
				map:b = false
				minTime:i = 4
				picture:t = "tutorial/tutorial_05"
				showAirMap:b = false
			}
			slide {
				map:b = false
				minTime:i = 4
				picture:t = "tutorial/tutorial_06"
				showAirMap:b = false
			}
			slide {
				map:b = false
				minTime:i = 4
				picture:t = "tutorial/tutorial_07"
				showAirMap:b = false
			}
			slide {
				map:b = true
				minTime:i = 4
				picture:t = ""
				showAirMap:b = false
				icon {
					icontype:t = "airfield"
					side:t = "ally"
					target:t = "airfield00"
				}
				icon {
					icontype:t = "fighter"
					side:t = "player"
					target:t = "player"
					lookAt:t = "airfield01"
				}
				icon {
					icontype:t = "fighter"
					side:t = "ally"
					target:t = "instructor"
					lookAt:t = "airfield01"
				}
				battleArea {
					target:t = "briefing_area"
				}
			}
		}
	}
}
imports {

}
triggers {
	isCategory:b = true
	is_enabled:b = true
	debug_trigger {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {

		}
		actions {
			triggerDisable {
				target:t = "instructor_takes_off"
				target:t = "create_airfield"
			}
			unitMoveTo {
				object_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				target:t = "instructor_way00"
				target_marking:i = 0
				waypointReachedDist:r = 10
				recalculatePathDist:r = -1
				follow_target:b = false
				teleportHeightType:t = "absolute"
				useUnitHeightForTele:b = true
				shouldKeepFormation:b = false
				teleportHeightValue:r = 1000
				horizontalDirectionForTeleport:b = true
				fastClimb:b = false
				destTimeMode:b = false
				target_var_name:t = ""
				target_var_comp_op:t = "equal"
				target_var_value:i = 0
				shouldKeepAirFormation:b = true
				object:t = "player"
				move_type:t = "teleport"
			}
			unitMoveTo {
				object_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				target:t = "instructor_way01"
				target_marking:i = 0
				waypointReachedDist:r = 10
				recalculatePathDist:r = -1
				follow_target:b = false
				teleportHeightType:t = "absolute"
				useUnitHeightForTele:b = true
				shouldKeepFormation:b = false
				teleportHeightValue:r = 1000
				horizontalDirectionForTeleport:b = true
				fastClimb:b = false
				destTimeMode:b = false
				target_var_name:t = ""
				target_var_comp_op:t = "equal"
				target_var_value:i = 0
				shouldKeepAirFormation:b = true
				object:t = "instructor"
				move_type:t = "teleport"
			}
			triggerEnable {
				target:t = "aerialTest_turn01"
			}
		}
		else_actions {

		}
	}
	instructor_respawn {
		is_enabled:b = true
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			unitWhenStatus {
				object_type:t = "isKilled"
				object_marking:i = 0
				check_objects:t = "all"
				target_type:t = "isAlive"
				check_period:r = 1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				object:t = "instructor"
			}
		}
		actions {
			unitRestore {
				ressurectIfDead:b = true
				fullRestore:b = true
				target_marking:i = 0
				target:t = "instructor"
			}
			unitSetProperties {
				object:t = "instructor"
				object_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				isImmortal:b = true
			}
		}
		else_actions {

		}
	}
	start_ifArcreal {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			timeExpires {
				time:r = 0.2
			}
		}
		conditions {
			gameWhenDifficulty {
				difficulty:t = "simulator"
				is:t = "notEqual"
			}
		}
		actions {
			triggerDisable {
				target:t = "start_ifSimulator"
			}
			playerOptions {
				currentView:t = "3rdperson"
			}
		}
		else_actions {

		}
	}
	start_ifSimulator {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0
			}
		}
		conditions {
			gameWhenDifficulty {
				difficulty:t = "simulator"
				is:t = "equal"
			}
		}
		actions {
			triggerDisable {
				target:t = "start_ifArcreal"
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_TOGGLE_VIEW"
			}
			playerOptions {
				currentView:t = "cockpit"
			}
		}
		else_actions {

		}
	}
	create_airfield {
		is_enabled:b = true
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			addAirfield {
				runwayStart:t = "airfield00"
				runwayEnd:t = "airfield01"
				runwayWidth:r = 50
				army:i = 2
				spawnPoint:t = "spawnpoint00"
				spawnPoint:t = "spawnpoint01"
			}
			unitLoadBehTree {
				name:t = "instructorBeh"
				objects:t = "instructor"
				loadType:t = "tree"
			}
			spawnOnAirfield {
				runwayName:t = "airfield00"
				objects:t = "player"
				objects:t = "instructor"
				takeoffInterval:r = 1
			}
			unitLoadBehTree {
				name:t = "wait"
				objects:t = "instructor"
				loadType:t = "node"
			}
			playerControls {
				setStatus:t = "disable"
				control:t = "ALL"
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_CONTINUE"
				control:t = "ID_FLIGHTMENU"
				control:t = "ID_FLIGHTMENU_SETUP"
				control:t = "ID_CONTINUE_SETUP"
				control:t = "ID_TACTICAL_MAP"
				control:t = "ID_LOCK_TARGET"
				control:t = "AXIS_CAMX"
				control:t = "AXIS_CAMY"
				control:t = "ID_AIR_BRAKE"
			}
			bigQueryAddRecord {
				name:t = "tutorial_01"
				params:t = "task 1/5: start mission"
				event:t = ""
			}
			unitSetProperties {
				stabInfluenceEnabled:b = true
				object:t = "player"
				object_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				speed:r = 0
			}
			unitSetProperties {
				object:t = "ground_squad"
				object_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				targetableByAi:b = false
				stealthRadius:r = 0
				attack_type:t = "hold_fire"
				speed:r = 30
				hasExhaust:b = false
			}
			unitSetProperties {
				object:t = "instructor"
				object_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				isImmortal:b = true
			}
		}
		else_actions {

		}
	}
	instructor_takes_off {
		is_enabled:b = true
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			showSmartCutscene {
				sceneType:t = "takeoff"
				duration:r = 80
				delayPlayer:b = false
				startSubTypeOnTheMarch:t = ""
				startSubTypeGroundUnits:t = ""
				startSubTypeArea:t = ""
				startSubTypeUnitAttackUnit:t = ""
				startSubTypeUnitMoveToUnit:t = ""
				changeCameras:b = true
				fadeOut:b = true
				startSubTypeTwoUnits:t = ""
				teleportAllAttackers:b = false
				allowDeadUnits:b = false
				allowTeleportAttackers:b = false
				fadeIn:b = true
				inverseCameraDirection:b = false
				startSubTypeTakeoff:t = ""
				startSubTypeFlyBy:t = ""
				wait:b = false
				object:t = "instructor"
			}
			wait {
				time:r = 2
			}
			triggerEnable {
				target:t = "instructor_takes_off_dialogue"
				target:t = "instructor_takes_off_skip"
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/cutsc_skip"
				action:t = "show"
				time:r = -1
				shouldFadeOut:b = false
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ID_SKIP_CUTSCENE"
				shouldBlink:b = false
			}
			wait {
				time:r = 20
			}
			unitMoveTo {
				target:t = "instructor_way01"
				follow_target:b = false
				teleportHeightType:t = "absolute"
				useUnitHeightForTele:b = true
				shouldKeepFormation:b = false
				teleportHeightValue:r = 1000
				horizontalDirectionForTeleport:b = true
				object_marking:i = 0
				target_marking:i = 0
				waypointReachedDist:r = 10
				recalculatePathDist:r = -1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				fastClimb:b = false
				destTimeMode:b = false
				target_var_name:t = ""
				target_var_comp_op:t = "equal"
				target_var_value:i = 0
				shouldKeepAirFormation:b = true
				object:t = "instructor"
			}
			wait {
				time:r = 48
			}
			triggerDisable {
				target:t = "instructor_takes_off_skip"
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/cutsc_skip"
				action:t = "hide"
				time:r = -1
				shouldFadeOut:b = false
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ID_SKIP_CUTSCENE"
				shouldBlink:b = false
			}
			wait {
				time:r = 2
			}
			triggerEnable {
				target:t = "first_objective"
			}
		}
		else_actions {

		}
	}
	instructor_takes_off_dialogue {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorial_m1_d01"
				showInGame:b = true
			}
			unitLoadBehTree {
				name:t = "taxiOnAirfield"
				objects:t = "instructor"
				loadType:t = "node"
			}
			missionPlayDialogue {
				dialog:t = "tutorial_m1_d02"
				showInGame:b = true
			}
			triggerDisable {
				target:t = "instructor_takes_off_skip"
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/cutsc_skip"
				action:t = "hide"
				time:r = -1
				shouldFadeOut:b = false
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ID_SKIP_CUTSCENE"
				shouldBlink:b = false
			}
			wait {
				time:r = 2
			}
			triggerDisable {
				target:t = "instructor_takes_off"
			}
			missionStopCutscene {

			}
			wait {
				time:r = 2
			}
			triggerEnable {
				target:t = "first_objective"
				target:t = "start_ifArcreal"
				target:t = "start_ifSimulator"
			}
		}
		else_actions {

		}
	}
	instructor_takes_off_skip {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_SKIP_CUTSCENE"
			}
		}
		actions {
			triggerDisable {
				target:t = "instructor_takes_off"
				target:t = "instructor_takes_off_dialogue"
			}
			missionStopCutscene {
				endFade:p2 = 0, 0.6
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/cutsc_skip"
				action:t = "hide"
				time:r = -1
				shouldFadeOut:b = false
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ID_SKIP_CUTSCENE"
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			unitMoveTo {
				target:t = "instructor_way00"
				follow_target:b = false
				teleportHeightType:t = "target"
				useUnitHeightForTele:b = false
				shouldKeepFormation:b = false
				teleportHeightValue:r = 0
				horizontalDirectionForTeleport:b = true
				object_marking:i = 0
				target_marking:i = 0
				waypointReachedDist:r = 10
				recalculatePathDist:r = -1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				fastClimb:b = false
				destTimeMode:b = false
				target_var_name:t = ""
				target_var_comp_op:t = "equal"
				target_var_value:i = 0
				shouldKeepAirFormation:b = true
				object:t = "instructor"
				move_type:t = "teleport"
				speed:r = 300
				velocity:r = 300
			}
			unitMoveTo {
				target:t = "instructor_way01"
				follow_target:b = false
				teleportHeightType:t = "absolute"
				useUnitHeightForTele:b = true
				shouldKeepFormation:b = false
				teleportHeightValue:r = 1000
				horizontalDirectionForTeleport:b = true
				object_marking:i = 0
				target_marking:i = 0
				waypointReachedDist:r = 10
				recalculatePathDist:r = -1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				fastClimb:b = false
				destTimeMode:b = false
				target_var_name:t = ""
				target_var_comp_op:t = "equal"
				target_var_value:i = 0
				shouldKeepAirFormation:b = true
				object:t = "instructor"
			}
			wait {
				time:r = 0.2
			}
			triggerEnable {
				target:t = "first_objective"
				target:t = "start_ifArcreal"
				target:t = "start_ifSimulator"
			}
		}
		else_actions {

		}
	}
	first_objective {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			triggerEnable {
				target:t = "ps4_groundTest_skip"
			}
			wait {
				time:r = 0.1
			}
			moAddMissionObjective {
				target:t = "tutorial_mission1_groundControls"
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
			}
			wait {
				time:r = 2
			}
			missionPlayDialogue {
				dialog:t = "tutorial_m1_d03_1"
				showInGame:b = true
			}
			triggerEnable {
				target:t = "groundTest_elevator01"
				target:t = "ps4_groundTest_skip"
			}
		}
		else_actions {

		}
	}
	ps4_groundTest_skip {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				isGamepadPseudoMouseAim:b = true
			}
		}
		actions {
			triggerDisable {
				target:t = "groundTest_elevator01"
				target:t = "first_objective"
			}
			missionStopSpeech {

			}
			missionPlayDialogue {
				dialog:t = "tutorial_m1_d03_4"
				subtitles:b = false
				showInGame:b = false
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "AXIS_ELEVATOR"
				control:t = "AXIS_MOUSE_AIM_Y"
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "AXIS_AILERONS"
				control:t = "AXIS_MOUSE_AIM_X"
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "AXIS_RUDDER"
				control:t = "AXIS_MOUSE_AIM_X"
			}
			triggerEnable {
				target:t = "groundTest_throttle01"
				target:t = "takeoff_flaps01"
				target:t = "takeoff_engine01_ps4"
			}
		}
		else_actions {

		}
	}
	groundTest_elevator01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			playerWhenOptions {
				isGamepadPseudoMouseAim:b = false
			}
		}
		actions {
			triggerDisable {
				target:t = "ps4_groundTest_skip"
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "AXIS_ELEVATOR"
				control:t = "AXIS_MOUSE_AIM_Y"
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_elevator01"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "elevator"
				shouldBlink:b = false
				showKeyBoardShortcutsForMouseAim:b = true
			}
			triggerEnable {
				target:t = "groundTest_elevator02"
			}
		}
		else_actions {

		}
	}
	groundTest_elevator02 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			unitWhenControls {
				object:t = "player"
				func:t = "less"
				value:r = -0.7
				property:t = "elevator"
			}
			unitWhenControls {
				object:t = "player"
				func:t = "more"
				value:r = 0.7
				property:t = "elevator"
			}
		}
		actions {
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_elevator01"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "elevator"
				shouldBlink:b = false
				showKeyBoardShortcutsForMouseAim:b = true
			}
			wait {
				time:r = 1
			}
			missionPlayDialogue {
				dialog:t = "tutorial_m1_d03_2"
				showInGame:b = true
			}
			triggerEnable {
				target:t = "groundTest_ailerons01"
			}
		}
		else_actions {

		}
	}
	groundTest_ailerons01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {

		}
		actions {
			playerControls {
				setStatus:t = "enable"
				control:t = "AXIS_AILERONS"
				control:t = "AXIS_MOUSE_AIM_X"
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_ailerons01"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ailerons"
				shouldBlink:b = false
				showKeyBoardShortcutsForMouseAim:b = true
			}
			triggerEnable {
				target:t = "groundTest_ailerons02"
			}
		}
		else_actions {

		}
	}
	groundTest_ailerons02 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			unitWhenControls {
				object:t = "player"
				func:t = "more"
				value:r = 0.7
				property:t = "ailerons"
			}
			unitWhenControls {
				object:t = "player"
				func:t = "less"
				value:r = -0.7
				property:t = "ailerons"
			}
		}
		actions {
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_ailerons01"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ailerons"
				shouldBlink:b = false
			}
			wait {
				time:r = 1
			}
			missionPlayDialogue {
				dialog:t = "tutorial_m1_d03_3"
				showInGame:b = true
			}
			triggerEnable {
				target:t = "groundTest_rudder01"
			}
		}
		else_actions {

		}
	}
	groundTest_rudder01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {

		}
		actions {
			playerControls {
				setStatus:t = "enable"
				control:t = "AXIS_RUDDER"
				control:t = "AXIS_MOUSE_AIM_X"
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_rudder01"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "rudder"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "groundTest_rudder02"
			}
		}
		else_actions {

		}
	}
	groundTest_rudder02 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			unitWhenControls {
				object:t = "player"
				func:t = "more"
				value:r = 0.4
				property:t = "rudder"
			}
			unitWhenControls {
				object:t = "player"
				func:t = "less"
				value:r = -0.4
				property:t = "rudder"
			}
		}
		actions {
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_rudder01"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "rudder"
				shouldBlink:b = false
			}
			wait {
				time:r = 2
			}
			missionPlayDialogue {
				dialog:t = "tutorial_m1_d03_4"
				subtitles:b = false
				showInGame:b = false
			}
			triggerEnable {
				target:t = "groundTest_throttle01"
				target:t = "takeoff_flaps01"
				target:t = "takeoff_engine01"
				target:t = "takeoff_engine_pre_ps4"
			}
		}
		else_actions {

		}
	}
	takeoff_flaps01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			gameWhenControlMode {
				controlmode:t = "fullreal"
				is:t = "equal"
			}
		}
		actions {
			triggerDisable {
				target:t = "groundTest_throttle01"
				target:t = "takeoff_engine01"
				target:t = "takeoff_engine_pre_ps4"
				target:t = "takeoff_engine01_ps4"
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_FLAPS"
				control:t = "ID_FLAPS_DOWN"
				control:t = "ID_FLAPS_UP"
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_gears03"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ID_FLAPS"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "takeoff_flaps02"
			}
		}
		else_actions {

		}
	}
	takeoff_flaps02 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_FLAPS"
			}
			playerShortcutPressed {
				control:t = "ID_FLAPS_DOWN"
			}
			unitWhenControls {
				object:t = "player"
				func:t = "equal"
				value:r = 1
				property:t = "flaps"
			}
		}
		actions {
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_gears03"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ID_FLAPS"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "groundTest_throttle01"
				target:t = "takeoff_engine01"
				target:t = "takeoff_engine_pre_ps4"
				target:t = "takeoff_engine01_ps4"
			}
		}
		else_actions {

		}
	}
	takeoff_engine01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.1
			}
		}
		conditions {
			gameWhenDifficulty {
				difficulty:t = "simulator"
				is:t = "equal"
			}
			playerWhenOptions {
				isGamepadPseudoMouseAim:b = false
			}
			playerWhenOptions {
				isGamepadClassicConsole:b = false
			}
		}
		actions {
			triggerDisable {
				target:t = "takeoff_flaps01"
				target:t = "groundTest_throttle01"
				target:t = "takeoff_engine_pre_ps4"
				target:t = "takeoff_engine01_ps4"
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_TOGGLE_ENGINE"
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_toggleEngine"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ID_TOGGLE_ENGINE"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "takeoff_engine02"
			}
		}
		else_actions {

		}
	}
	takeoff_engine02 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_TOGGLE_ENGINE"
			}
		}
		actions {
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_toggleEngine"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ID_TOGGLE_ENGINE"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "groundTest_throttle01"
			}
		}
		else_actions {

		}
	}
	takeoff_engine_pre_ps4 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.1
			}
		}
		conditions {
			playerWhenOptions {
				isGamepadClassicConsole:b = true
			}
			gameWhenDifficulty {
				difficulty:t = "simulator"
				is:t = "equal"
			}
		}
		actions {
			triggerDisable {
				target:t = "takeoff_flaps01"
				target:t = "groundTest_throttle01"
				target:t = "takeoff_engine01"
			}
			triggerEnable {
				target:t = "takeoff_engine01_ps4"
			}
		}
		else_actions {

		}
	}
	takeoff_engine01_ps4 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.1
			}
		}
		conditions {
			gameWhenDifficulty {
				difficulty:t = "simulator"
				is:t = "equal"
			}
		}
		actions {
			triggerDisable {
				target:t = "takeoff_flaps01"
				target:t = "groundTest_throttle01"
				target:t = "takeoff_engine01"
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_TOGGLE_ENGINE"
				control:t = "AXIS_THROTTLE"
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_toggleEngine"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "throttle=max"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "takeoff_engine02_ps4"
			}
		}
		else_actions {

		}
	}
	takeoff_engine02_ps4 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerAxisValueReached {
				value:r = 0.01
				func:t = "more"
				axis:t = "AXIS_THROTTLE"
			}
		}
		actions {
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_toggleEngine"
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ID_TOGGLE_ENGINE"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "groundTest_throttle01"
			}
		}
		else_actions {

		}
	}
	groundTest_throttle01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {

		}
		actions {
			triggerDisable {
				target:t = "takeoff_flaps01"
				target:t = "takeoff_engine01"
			}
			moSetObjectiveStatus {
				target:t = "tutorial_mission1_groundControls"
				status:i = 2
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
				object_marking:i = 0
			}
			moAddMissionObjective {
				target:t = "tutorial_mission1_takeoff"
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
			}
			bigQueryAddRecord {
				name:t = "tutorial_01"
				params:t = "task 2/5: check controls on the ground"
				event:t = ""
			}
			wait {
				time:r = 5
			}
			missionPlayDialogue {
				dialog:t = "tutorial_m1_d04_1"
				showInGame:b = true
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "AXIS_THROTTLE"
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_throttle01"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "throttle=max"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "groundTest_throttle02"
				target:t = "pre_player_restore01"
			}
		}
		else_actions {

		}
	}
	groundTest_throttle02 {
		is_enabled:b = false
		comments:t = "here must be blinking hud element (speed)"
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			unitWhenProperties {
				object:t = "player"
				func:t = "more"
				value:r = 99
				property:t = "throttle"
				check_filter:t = "all"
				object_type:t = "isAlive"
				object_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
			}
		}
		actions {
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_throttle01"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "throttle=max"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "takeoff_levelAircraft"
				target:t = "groundTest_throttle02_dialogue"
			}
		}
		else_actions {

		}
	}
	groundTest_throttle02_dialogue {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorial_m1_d04_2"
				showInGame:b = true
			}
			hudElementBlink {
				element:t = "speed"
				time:r = 2
				blink:b = true
			}
			hudElementBlink {
				element:t = "throttle"
				time:r = 2
				blink:b = true
			}
			missionPlayDialogue {
				dialog:t = "tutorial_m1_d05"
				showInGame:b = true
			}
		}
		else_actions {

		}
	}
	takeoff_levelAircraft {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {

		}
		actions {
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_rudder02"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "rudder"
				item:t = "mouse_aim_x"
				shouldBlink:b = false
			}
			wait {
				time:r = 3
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_rudder02"
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "rudder"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "takeoff_Simulator"
				target:t = "takeoff_Arcreal"
				target:t = "takeoff_instructor"
			}
		}
		else_actions {

		}
	}
	takeoff_instructor {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {

		}
		actions {
			triggerDisable {
				target:t = "takeoff_Arcreal"
				target:t = "takeoff_Simulator"
			}
			triggerEnable {
				target:t = "takeoff_instructor_inAir"
			}
		}
		else_actions {

		}
	}
	takeoff_instructor_inAir {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			unitWhenStatus {
				object_type:t = "isInAir"
				object_marking:i = 0
				check_objects:t = "any"
				target_type:t = "isAlive"
				check_period:r = 1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				object:t = "player"
			}
		}
		actions {
			triggerEnable {
				target:t = "aerialTest_elevator01"
				target:t = "aerialTest_elevator_dialogue"
			}
		}
		else_actions {

		}
	}
	takeoff_Arcreal {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			gameWhenControlMode {
				controlmode:t = "realistic"
				is:t = "equal"
			}
			gameWhenManualGear {

			}
		}
		actions {
			triggerDisable {
				target:t = "takeoff_Simulator"
				target:t = "takeoff_instructor"
			}
			triggerEnable {
				target:t = "takeoff_gears01"
			}
		}
		else_actions {

		}
	}
	takeoff_Simulator {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			gameWhenControlMode {
				controlmode:t = "fullreal"
				is:t = "equal"
			}
		}
		actions {
			triggerDisable {
				target:t = "takeoff_Arcreal"
				target:t = "takeoff_instructor"
			}
			triggerEnable {
				target:t = "takeoff_gears03"
			}
		}
		else_actions {

		}
	}
	takeoff_gears01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			playersWhenStatus {
				players:t = "isInAir"
				check_players:t = "any"
			}
		}
		actions {
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_FLAPS"
				control:t = "ID_FLAPS_DOWN"
				control:t = "ID_FLAPS_UP"
				control:t = "ID_GEAR"
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_gears01"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ID_GEAR"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "takeoff_gears02"
			}
			missionPlayDialogue {
				dialog:t = "tutorial_m1_d06"
				showInGame:b = true
			}
		}
		else_actions {

		}
	}
	takeoff_gears02 {
		is_enabled:b = false
		comments:t = "there are must be two different triggers for arcade and realistic-simulator"
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_FLAPS"
			}
			playerShortcutPressed {
				control:t = "ID_FLAPS_UP"
			}
			playerShortcutPressed {
				control:t = "ID_GEAR"
			}
			unitWhenControls {
				object:t = "player"
				func:t = "less"
				value:r = 1
				property:t = "gears"
			}
		}
		actions {
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_gears01"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ID_GEAR"
				shouldBlink:b = false
			}
			wait {
				time:r = 1
			}
			triggerEnable {
				target:t = "aerialTest_elevator01"
				target:t = "aerialTest_elevator_dialogue"
			}
		}
		else_actions {

		}
	}
	takeoff_gears03 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			playersWhenStatus {
				players:t = "isInAir"
				check_players:t = "any"
			}
		}
		actions {
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_FLAPS"
				control:t = "ID_FLAPS_DOWN"
				control:t = "ID_FLAPS_UP"
				control:t = "ID_GEAR"
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_gears01"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ID_FLAPS"
				item:t = "comma"
				item:t = "ID_GEAR"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "takeoff_gears04"
			}
			missionPlayDialogue {
				dialog:t = "tutorial_m1_d06"
				showInGame:b = true
			}
		}
		else_actions {

		}
	}
	takeoff_gears04 {
		is_enabled:b = false
		comments:t = "there are must be two different triggers for arcade and realistic-simulator"
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			unitWhenControls {
				object:t = "player"
				func:t = "equal"
				value:r = 0
				property:t = "flaps"
			}
			unitWhenControls {
				object:t = "player"
				func:t = "equal"
				value:r = 0
				property:t = "gears"
			}
		}
		actions {
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_gears01"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ID_FLAPS"
				item:t = "comma"
				item:t = "ID_GEAR"
				shouldBlink:b = false
			}
			wait {
				time:r = 1
			}
			triggerEnable {
				target:t = "aerialTest_elevator01"
				target:t = "aerialTest_elevator_dialogue"
			}
		}
		else_actions {

		}
	}
	aerialTest_elevator_dialogue {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorial_m1_d08"
				showInGame:b = true
			}
		}
		else_actions {

		}
	}
	aerialTest_elevator01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {

		}
		actions {
			triggerDisable {
				target:t = "pre_player_restore01"
			}
			moSetObjectiveStatus {
				target:t = "tutorial_mission1_takeoff"
				status:i = 2
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
				object_marking:i = 0
			}
			bigQueryAddRecord {
				name:t = "tutorial_01"
				params:t = "task 3/5: take off"
				event:t = ""
			}
			triggerEnable {
				target:t = "pre_player_restore02"
			}
			moAddMissionObjective {
				target:t = "tutorial_mission1_airControls"
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
			}
			unitMoveTo {
				target:t = "instructor_way01"
				follow_target:b = false
				teleportHeightType:t = "absolute"
				useUnitHeightForTele:b = true
				shouldKeepFormation:b = false
				teleportHeightValue:r = 1000
				horizontalDirectionForTeleport:b = true
				object_marking:i = 0
				target_marking:i = 0
				waypointReachedDist:r = 10
				recalculatePathDist:r = -1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				fastClimb:b = false
				destTimeMode:b = false
				target_var_name:t = ""
				target_var_comp_op:t = "equal"
				target_var_value:i = 0
				shouldKeepAirFormation:b = true
				object:t = "instructor"
			}
			missionMarkAsWaypoint {
				visible:b = true
				primary:b = true
				scale:r = 1
				oriented:b = false
				ignoreDifficulty:b = true
				target:t = "instructor_way00"
			}
			wait {
				time:r = 5
			}
			triggerEnable {
				target:t = "aerialTest_elevator01_invertY"
			}
		}
		else_actions {

		}
	}
	aerialTest_elevator01_invertY {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			playerWhenOptions {
				guiOptionBool:t = "USEROPT_INVERTY"
			}
		}
		actions {
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_elevator02"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "elevator=min"
				shouldBlink:b = false
				showKeyBoardShortcutsForMouseAim:b = true
			}
			triggerEnable {
				target:t = "aerialTest_elevator02"
			}
			wait {
				time:r = 4
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_elevator02"
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "elevator=max"
				shouldBlink:b = false
			}
			missionPlayDialogue {
				dialog:t = "tutorial_m1_d09_1"
				subtitles:b = false
				showInGame:b = false
			}
			hudElementBlink {
				element:t = "alt"
				time:r = 2
				blink:b = true
			}
		}
		else_actions {
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_elevator02"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "elevator=max"
				shouldBlink:b = false
				showKeyBoardShortcutsForMouseAim:b = true
			}
			triggerEnable {
				target:t = "aerialTest_elevator02"
			}
			wait {
				time:r = 4
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_elevator02"
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "elevator=min"
				shouldBlink:b = false
			}
			missionPlayDialogue {
				dialog:t = "tutorial_m1_d09_1"
				subtitles:b = false
				showInGame:b = false
			}
			hudElementBlink {
				element:t = "alt"
				time:r = 2
				blink:b = true
			}
		}
	}
	aerialTest_elevator02 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			playersWhenInArea {
				math:t = "3D"
				players:t = "isAlive"
				check_players:t = "any"
				object_marking:i = 0
				target_type:t = "isAlive"
				check_period:r = 1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				target:t = "instructor_way00"
			}
		}
		actions {
			triggerDisable {
				target:t = "pre_player_restore02"
			}
			missionMarkAsWaypoint {
				visible:b = false
				primary:b = true
				scale:r = 1
				oriented:b = false
				ignoreDifficulty:b = true
				target:t = "instructor_way00"
			}
			triggerEnable {
				target:t = "aerialTest_ailerons01"
				target:t = "pre_player_restore03"
			}
		}
		else_actions {

		}
	}
	aerialTest_ailerons01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorial_m1_d09_2"
				showInGame:b = true
			}
			playHint {
				hintType:t = "standard"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			unitMoveTo {
				target:t = "instructor_way01"
				follow_target:b = false
				teleportHeightType:t = "target"
				useUnitHeightForTele:b = false
				shouldKeepFormation:b = false
				teleportHeightValue:r = 500
				horizontalDirectionForTeleport:b = true
				object_marking:i = 0
				target_marking:i = 0
				waypointReachedDist:r = 10
				recalculatePathDist:r = -1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				fastClimb:b = false
				destTimeMode:b = false
				target_var_name:t = ""
				target_var_comp_op:t = "equal"
				target_var_value:i = 0
				shouldKeepAirFormation:b = true
				object:t = "instructor"
				move_type:t = "teleport"
			}
			missionPlayDialogue {
				dialog:t = "tutorial_m1_d09_3"
				showInGame:b = true
			}
			missionStartCutscene {
				target:t = "instructor"
				second_target:t = "instructor"
				duration:r = 6
				camera_type:t = "flat_linear"
				direction_amp:r = 1
				flat_offs:p3 = 100, 100, 100
				zoom:r = 1
				frequency:r = 1
				linear_at_vel:p3 = 0, 0, 0
				linear_eye_vel:p3 = 0, 0, 0
				linear_at_accel:r = 0
				linear_eye_accel:r = 0
				linear_relative:b = true
				pitch:r = 0.1
				yaw:r = 0
				pitch_amplitude:r = 1
				yaw_amplitude:r = 1
				distance:r = 30
				shake_mult:r = 0
				splineEye:t = ""
				splineAt:t = ""
				splineSpeed:r = 100
				resetCamera:b = true
				shake_accel:r = 0
				fov_accel:r = 0
				mustHaveGui:b = false
				linear_at:p3 = 0, 0, 0
				linear_eye:p3 = -15, 6, 0
				endFade:p2 = 0.5, 0.5
				delayPlayer:b = true
			}
			wait {
				time:r = 1
			}
			unitLoadBehTree {
				name:t = "rollManeuver"
				objects:t = "instructor"
				loadType:t = "node"
			}
			wait {
				time:r = 6
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_ailerons02"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ailerons"
				shouldBlink:b = false
				showKeyBoardShortcutsForMouseAim:b = true
			}
			triggerEnable {
				target:t = "aerialTest_ailerons02_1"
				target:t = "aerialTest_ailerons02_2"
			}
			missionPlayDialogue {
				dialog:t = "tutorial_m1_d09_4"
				showInGame:b = true
			}
		}
		else_actions {

		}
	}
	aerialTest_ailerons01_skip {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_LOCK_TARGET"
			}
		}
		actions {
			triggerDisable {
				target:t = "aerialTest_ailerons01"
			}
			missionStopSpeech {

			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/cutsc_skip"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ID_LOCK_TARGET"
				shouldBlink:b = false
			}
			missionStopCutscene {

			}
			triggerEnable {
				target:t = "aerialTest_ailerons02_1"
				target:t = "aerialTest_ailerons02_2"
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_ailerons02"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "l_stick_to_left_n_right"
				shouldBlink:b = false
			}
			missionPlayDialogue {
				dialog:t = "tutorial_m1_d09_4"
				showInGame:b = true
			}
		}
		else_actions {

		}
	}
	aerialTest_ailerons02_1 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOrientation {
				value:r = -30
				orientation:t = "roll"
				comparasion_func:t = "less"
			}
			playerAxisValueReached {
				value:r = -0.1
				func:t = "less"
				axis:t = "AXIS_AILERONS"
				joyAngle:r = 180
				joyDispersion:r = 40
			}
		}
		actions {
			triggerDisable {
				target:t = "aerialTest_ailerons02_2"
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_ailerons02"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ailerons"
				shouldBlink:b = false
			}
			wait {
				time:r = 2
			}
			triggerEnable {
				target:t = "aerialTest_rudder01"
				target:t = "aerialTest_ps4_rudder_skip"
			}
		}
		else_actions {

		}
	}
	aerialTest_ailerons02_2 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOrientation {
				value:r = 30
				orientation:t = "roll"
				comparasion_func:t = "more"
			}
			playerAxisValueReached {
				value:r = 0.1
				func:t = "more"
				axis:t = "AXIS_AILERONS"
				joyAngle:r = 0
				joyDispersion:r = 40
			}
		}
		actions {
			triggerDisable {
				target:t = "aerialTest_ailerons02_1"
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_ailerons02"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ailerons"
				shouldBlink:b = false
			}
			wait {
				time:r = 2
			}
			triggerEnable {
				target:t = "aerialTest_rudder01"
				target:t = "aerialTest_ps4_rudder_skip"
			}
		}
		else_actions {

		}
	}
	aerialTest_ps4_rudder_skip {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.1
			}
		}
		conditions {
			playerWhenOptions {
				isGamepadPseudoMouseAim:b = true
			}
			gameWhenDifficulty {
				difficulty:t = "simulator"
				is:t = "notEqual"
			}
		}
		actions {
			triggerDisable {
				target:t = "aerialTest_rudder01"
			}
			triggerEnable {
				target:t = "aerialTest_throttle01"
			}
		}
		else_actions {

		}
	}
	aerialTest_rudder01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			playerWhenOptions {
				isGamepadPseudoMouseAim:b = false
			}
			gameWhenDifficulty {
				difficulty:t = "simulator"
				is:t = "equal"
			}
		}
		actions {
			triggerDisable {
				target:t = "aerialTest_ps4_rudder_skip"
			}
			unitLoadBehTree {
				name:t = "rudderCheck"
				objects:t = "instructor"
				loadType:t = "node"
			}
			missionStartCutscene {
				target:t = "instructor"
				second_target:t = "instructor"
				duration:r = 5
				camera_type:t = "flat_linear"
				direction_amp:r = 1
				flat_offs:p3 = 100, 100, 100
				zoom:r = 1
				frequency:r = 1
				linear_at_vel:p3 = 0, 0, 0
				linear_eye_vel:p3 = 0, 0, 0
				linear_at_accel:r = 0
				linear_eye_accel:r = 0
				linear_relative:b = true
				pitch:r = 0.1
				yaw:r = 0
				pitch_amplitude:r = 1
				yaw_amplitude:r = 1
				distance:r = 30
				shake_mult:r = 0
				splineEye:t = ""
				splineAt:t = ""
				splineSpeed:r = 100
				resetCamera:b = true
				shake_accel:r = 0
				fov_accel:r = 0
				mustHaveGui:b = false
				linear_at:p3 = 0, 0, 0
				linear_eye:p3 = -15, 6, 0
				endFade:p2 = 0.5, 0.5
				delayPlayer:b = true
			}
			wait {
				time:r = 5
			}
			missionPlayDialogue {
				dialog:t = "tutorial_m1_d10_1"
				showInGame:b = true
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_rudder02"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "rudder"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "aerialTest_rudder02"
			}
		}
		else_actions {

		}
	}
	aerialTest_rudder02 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerAxisValueReached {
				value:r = 0.3
				func:t = "more"
				axis:t = "AXIS_RUDDER"
			}
			playerAxisValueReached {
				value:r = -0.3
				func:t = "less"
				axis:t = "AXIS_RUDDER"
			}
		}
		actions {
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_rudder02"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "rudder"
				shouldBlink:b = false
			}
			wait {
				time:r = 1
			}
			missionPlayDialogue {
				dialog:t = "tutorial_m1_d10_2"
				showInGame:b = true
			}
			triggerEnable {
				target:t = "aerialTest_throttle01"
			}
		}
		else_actions {

		}
	}
	aerialTest_throttle01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_throttle02"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "throttle=min"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "aerialTest_throttle02"
			}
		}
		else_actions {

		}
	}
	aerialTest_throttle02 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			unitWhenProperties {
				object:t = "player"
				func:t = "less"
				value:r = 31
				property:t = "throttle"
				check_filter:t = "all"
				object_type:t = "isAlive"
				object_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
			}
		}
		actions {
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_throttle02"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "throttle=min"
				shouldBlink:b = false
			}
			missionPlayDialogue {
				dialog:t = "tutorial_m1_d10_3"
				showInGame:b = true
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_throttle03"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "throttle=max"
				shouldBlink:b = false
			}
			wait {
				time:r = 1
			}
			triggerEnable {
				target:t = "aerialTest_throttle03"
			}
		}
		else_actions {

		}
	}
	aerialTest_throttle03 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			unitWhenProperties {
				object:t = "player"
				func:t = "more"
				value:r = 79
				property:t = "throttle"
				check_filter:t = "all"
				object_type:t = "isAlive"
				object_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
			}
		}
		actions {
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_throttle03"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "throttle=max"
				shouldBlink:b = false
			}
			wait {
				time:r = 1
			}
			triggerEnable {
				target:t = "aerialTest_boost01"
			}
		}
		else_actions {

		}
	}
	aerialTest_boost01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorial_m1_d10_4"
				showInGame:b = true
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_boost"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "throttle=max"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "aerialTest_boost02"
			}
		}
		else_actions {

		}
	}
	aerialTest_boost02 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerAxisValueReached {
				value:r = 1
				func:t = "more"
				axis:t = "AXIS_THROTTLE"
			}
		}
		actions {
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_boost"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "throttle=max"
				shouldBlink:b = false
			}
			wait {
				time:r = 1
			}
			missionPlayDialogue {
				dialog:t = "tutorial_m1_d10_5"
				showInGame:b = true
			}
			triggerEnable {
				target:t = "aerialTest_turn01"
				target:t = "aerialTest_ps4_turn"
			}
		}
		else_actions {

		}
	}
	aerialTest_turn01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			playerWhenOptions {
				isGamepadPseudoMouseAim:b = false
			}
			gameWhenDifficulty {
				difficulty:t = "simulator"
				is:t = "equal"
			}
		}
		actions {
			missionStartCutscene {
				target:t = "instructor"
				second_target:t = "instructor"
				duration:r = 6
				camera_type:t = "flat_linear"
				direction_amp:r = 1
				flat_offs:p3 = 100, 100, 100
				zoom:r = 1
				frequency:r = 1
				linear_at_vel:p3 = 0, 0, 0
				linear_eye_vel:p3 = 0, 0, 0
				linear_at_accel:r = 0
				linear_eye_accel:r = 0
				linear_relative:b = true
				pitch:r = 0.1
				yaw:r = 0
				pitch_amplitude:r = 1
				yaw_amplitude:r = 1
				distance:r = 30
				shake_mult:r = 0
				splineEye:t = ""
				splineAt:t = ""
				splineSpeed:r = 100
				resetCamera:b = true
				shake_accel:r = 0
				fov_accel:r = 0
				mustHaveGui:b = false
				linear_at:p3 = 0, 0, 0
				linear_eye:p3 = -15, 6, 0
				endFade:p2 = 0.5, 0.5
				delayPlayer:b = true
			}
			unitLoadBehTree {
				name:t = "combatTurn"
				objects:t = "instructor"
				loadType:t = "node"
			}
			wait {
				time:r = 7
			}
			missionPlayDialogue {
				dialog:t = "tutorial_m1_d13_1"
				showInGame:b = true
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_turn01"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ailerons"
				shouldBlink:b = false
				showKeyBoardShortcutsForMouseAim:b = true
			}
			triggerEnable {
				target:t = "aerialTest_turn02"
			}
		}
		else_actions {

		}
	}
	aerialTest_turn02 {
		is_enabled:b = false
		comments:t = "here must be the condition which detects turn"
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOrientation {
				value:r = -30
				orientation:t = "roll"
				comparasion_func:t = "less"
			}
			playerWhenOrientation {
				value:r = 30
				orientation:t = "roll"
				comparasion_func:t = "more"
			}
		}
		actions {
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_turn01"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ailerons"
				shouldBlink:b = false
			}
			missionPlayDialogue {
				dialog:t = "tutorial_m1_d13_2"
				showInGame:b = true
			}
			triggerEnable {
				target:t = "aerialTest_turn02_invertY"
				target:t = "aerialTest_turn03"
				target:t = "aerialTest_turnFail"
			}
		}
		else_actions {

		}
	}
	aerialTest_turn02_invertY {
		is_enabled:b = false
		comments:t = "here must be the condition which detects turn"
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOptions {
				guiOptionBool:t = "USEROPT_INVERTY"
			}
		}
		actions {
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_turn02"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "elevator=min"
				shouldBlink:b = false
				showKeyBoardShortcutsForMouseAim:b = true
			}
		}
		else_actions {
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_turn02"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "elevator=max"
				shouldBlink:b = false
				showKeyBoardShortcutsForMouseAim:b = true
			}
		}
	}
	aerialTest_turn03 {
		is_enabled:b = false
		comments:t = "here must be the condition which detects turn"
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerAxisValueReached {
				value:r = 0.1
				func:t = "more"
				axis:t = "AXIS_ELEVATOR"
				joyAngle:r = 90
				joyDispersion:r = 30
				joyMinRad:r = 0.8
			}
		}
		actions {
			triggerDisable {
				target:t = "aerialTest_turnFail"
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_turn02"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "elevator=min"
				shouldBlink:b = false
			}
			wait {
				time:r = 1
			}
			triggerEnable {
				target:t = "pre_testFlight_point01"
				target:t = "pre_aerialTest_spin01"
			}
		}
		else_actions {

		}
	}
	aerialTest_turn04 {
		is_enabled:b = false
		comments:t = "here must be the condition which detects turn"
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerAxisValueReached {
				value:r = -0.1
				func:t = "less"
				axis:t = "AXIS_ELEVATOR"
				joyAngle:r = 90
				joyDispersion:r = 30
				joyMinRad:r = 0.8
			}
		}
		actions {
			triggerDisable {
				target:t = "aerialTest_turn03"
				target:t = "aerialTest_turnFail"
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_turn02"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "elevator=min"
				shouldBlink:b = false
			}
			wait {
				time:r = 1
			}
			triggerEnable {
				target:t = "pre_testFlight_point01"
				target:t = "pre_aerialTest_spin01"
			}
		}
		else_actions {

		}
	}
	aerialTest_turnFail {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenOrientation {
				value:r = -30
				orientation:t = "roll"
				comparasion_func:t = "more"
			}
			playerWhenOrientation {
				value:r = 30
				orientation:t = "roll"
				comparasion_func:t = "less"
			}
		}
		actions {
			triggerDisable {
				target:t = "aerialTest_turn03"
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_turn01"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ailerons"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "aerialTest_turn02"
			}
		}
		else_actions {

		}
	}
	aerialTest_ps4_turn {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.1
			}
		}
		conditions {
			playerWhenOptions {
				isGamepadPseudoMouseAim:b = true
			}
			gameWhenDifficulty {
				difficulty:t = "simulator"
				is:t = "notEqual"
			}
		}
		actions {
			triggerDisable {
				target:t = "aerialTest_turn01"
			}
			triggerEnable {
				target:t = "aerialTest_turn01_ps4"
			}
		}
		else_actions {

		}
	}
	aerialTest_turn01_ps4 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {

		}
		actions {
			missionStartCutscene {
				target:t = "instructor"
				second_target:t = "instructor"
				duration:r = 6
				camera_type:t = "flat_linear"
				direction_amp:r = 1
				flat_offs:p3 = 100, 100, 100
				zoom:r = 1
				frequency:r = 1
				linear_at_vel:p3 = 0, 0, 0
				linear_eye_vel:p3 = 0, 0, 0
				linear_at_accel:r = 0
				linear_eye_accel:r = 0
				linear_relative:b = true
				pitch:r = 0.1
				yaw:r = 0
				pitch_amplitude:r = 1
				yaw_amplitude:r = 1
				distance:r = 30
				shake_mult:r = 0
				splineEye:t = ""
				splineAt:t = ""
				splineSpeed:r = 100
				resetCamera:b = true
				shake_accel:r = 0
				fov_accel:r = 0
				mustHaveGui:b = false
				linear_at:p3 = 0, 0, 0
				linear_eye:p3 = -15, 6, 0
				endFade:p2 = 0.5, 0.5
				delayPlayer:b = true
			}
			unitLoadBehTree {
				name:t = "combatTurn"
				objects:t = "instructor"
				loadType:t = "node"
			}
			wait {
				time:r = 7
			}
			missionPlayDialogue {
				dialog:t = "tutorial_m1_d13_ps4"
				showInGame:b = true
			}
			missionMarkAsWaypoint {
				visible:b = true
				primary:b = true
				oriented:b = false
				ignoreDifficulty:b = true
				scale:r = 0.5
				target:t = "way01"
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_turn_ps4_hint"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "mouse_aim_x"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "aerialTest_turn02_ps4"
			}
		}
		else_actions {

		}
	}
	aerialTest_turn02_ps4 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenCursorIn {
				cursor:t = "mouseAim"
				element:t = "waypoint"
			}
		}
		actions {
			wait {
				time:r = 1
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_turn_ps4_hint"
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ailerons"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "pre_testFlight_point01"
			}
		}
		else_actions {

		}
	}
	pre_aerialTest_spin01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0
			}
		}
		conditions {
			gameWhenDifficulty {
				difficulty:t = "arcade"
				is:t = "notEqual"
			}
			gameWhenControlMode {
				controlmode:t = "mouseaim"
				is:t = "notEqual"
			}
			gameWhenControlMode {
				controlmode:t = "instructor"
				is:t = "notEqual"
			}
		}
		actions {
			triggerDisable {
				target:t = "pre_testFlight_point01"
				target:t = "pre_player_restore03"
			}
			triggerEnable {
				target:t = "aerialTest_spin01"
				target:t = "pre_player_restore_spin"
			}
		}
		else_actions {

		}
	}
	pre_testFlight_point01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {

		}
		actions {
			triggerDisable {
				target:t = "pre_aerialTest_spin01"
			}
			triggerEnable {
				target:t = "testFlight_point01"
			}
		}
		else_actions {

		}
	}
	aerialTest_spin01 {
		is_enabled:b = false
		comments:t = "here must be the cutscene where AI-controlled aircraft performs spin"
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {

		}
		actions {
			missionPlayDialogue {
				dialog:t = "tutorial_m1_d11"
				showInGame:b = true
			}
			triggerDisable {
				target:t = "pre_player_restore03"
			}
			unitMoveTo {
				target:t = "instructor_way01"
				follow_target:b = false
				teleportHeightType:t = "relative"
				useUnitHeightForTele:b = false
				shouldKeepFormation:b = false
				teleportHeightValue:r = 2000
				horizontalDirectionForTeleport:b = true
				object_marking:i = 0
				target_marking:i = 0
				waypointReachedDist:r = 10
				recalculatePathDist:r = -1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				fastClimb:b = false
				destTimeMode:b = false
				target_var_name:t = ""
				target_var_comp_op:t = "equal"
				target_var_value:i = 0
				shouldKeepAirFormation:b = true
				object:t = "player"
				move_type:t = "teleport"
				lookat:t = "instructor"
				velocity:r = 200
			}
			unitMoveTo {
				target:t = "way01"
				follow_target:b = false
				teleportHeightType:t = "relative"
				useUnitHeightForTele:b = false
				shouldKeepFormation:b = false
				teleportHeightValue:r = 2000
				horizontalDirectionForTeleport:b = true
				object_marking:i = 0
				target_marking:i = 0
				waypointReachedDist:r = 10
				recalculatePathDist:r = -1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				fastClimb:b = false
				destTimeMode:b = false
				target_var_name:t = ""
				target_var_comp_op:t = "equal"
				target_var_value:i = 0
				shouldKeepAirFormation:b = true
				object:t = "instructor"
				move_type:t = "teleport"
				lookat:t = "instructor"
				velocity:r = 250
			}
			missionStartCutscene {
				target:t = "instructor"
				second_target:t = "instructor"
				duration:r = 15
				camera_type:t = "flat_linear"
				direction_amp:r = 1
				flat_offs:p3 = 100, 100, 100
				zoom:r = 1
				frequency:r = 1
				linear_at_vel:p3 = 0, 0, 0
				linear_eye_vel:p3 = 0, 0, 0
				linear_at_accel:r = 0
				linear_eye_accel:r = 0
				linear_relative:b = true
				pitch:r = 0.1
				yaw:r = 0
				pitch_amplitude:r = 1
				yaw_amplitude:r = 1
				distance:r = 30
				shake_mult:r = 0
				splineEye:t = ""
				splineAt:t = ""
				splineSpeed:r = 100
				resetCamera:b = true
				shake_accel:r = 0
				fov_accel:r = 0
				mustHaveGui:b = false
				linear_at:p3 = 0, 0, 0
				linear_eye:p3 = -15, 6, 0
				endFade:p2 = 0.5, 0.5
				delayPlayer:b = true
			}
			unitLoadBehTree {
				name:t = "stallMan"
				objects:t = "instructor"
				loadType:t = "node"
			}
			wait {
				time:r = 2
			}
			triggerEnable {
				target:t = "aerialTest_spin01_skip"
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/cutsc_skip"
				action:t = "show"
				time:r = -1
				shouldFadeOut:b = false
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ID_SKIP_CUTSCENE"
				shouldBlink:b = false
			}
			wait {
				time:r = 11
			}
			triggerDisable {
				target:t = "aerialTest_spin01_skip"
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/cutsc_skip"
				action:t = "hide"
				time:r = -1
				shouldFadeOut:b = false
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ID_SKIP_CUTSCENE"
				shouldBlink:b = false
			}
			wait {
				time:r = 2
			}
			missionPlayDialogue {
				dialog:t = "tutorial_m1_d12_1"
				showInGame:b = true
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_spin01"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "aerialTest_spin02"
				target:t = "aerialTest_spin03"
			}
			missionPlayDialogue {
				dialog:t = "tutorial_m1_d12_2"
				showInGame:b = true
			}
		}
		else_actions {

		}
	}
	aerialTest_spin01_skip {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_SKIP_CUTSCENE"
			}
		}
		actions {
			triggerDisable {
				target:t = "aerialTest_spin01"
			}
			missionStopCutscene {
				endFade:p2 = 0, 0.6
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/cutsc_skip"
				action:t = "hide"
				time:r = -1
				shouldFadeOut:b = false
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ID_SKIP_CUTSCENE"
				shouldBlink:b = false
			}
			missionStopSpeech {

			}
			missionPlayDialogue {
				dialog:t = "tutorial_m1_d12_1"
				showInGame:b = true
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_spin01"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "aerialTest_spin02"
				target:t = "aerialTest_spin03"
			}
			missionPlayDialogue {
				dialog:t = "tutorial_m1_d12_2"
				showInGame:b = true
			}
		}
		else_actions {

		}
	}
	aerialTest_spin02 {
		is_enabled:b = false
		comments:t = "here must be the condition which indicates spin"
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenManeuver {
				manName:t = "stallLeft"
			}
		}
		actions {
			triggerDisable {
				target:t = "aerialTest_spin03"
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_spin01"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			wait {
				time:r = 1
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_spin02"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ailerons=min"
				item:t = "plus"
				item:t = "rudder=max"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "aerialTest_spin04"
			}
		}
		else_actions {

		}
	}
	aerialTest_spin03 {
		is_enabled:b = false
		comments:t = "here must be the condition which indicates spin"
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerWhenManeuver {
				manName:t = "stallRight"
			}
		}
		actions {
			triggerDisable {
				target:t = "aerialTest_spin02"
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_spin01"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			wait {
				time:r = 1
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_spin02"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ailerons=max"
				item:t = "plus"
				item:t = "rudder=min"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "aerialTest_spin04"
			}
		}
		else_actions {

		}
	}
	aerialTest_spin04 {
		is_enabled:b = false
		comments:t = "here must be the condition which indicates end of spin"
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			playerWhenManeuver {
				manName:t = "noStall"
			}
		}
		actions {
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_spin02"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ailerons=min"
				item:t = "plus"
				item:t = "rudder=max"
				shouldBlink:b = false
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_spin02"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ailerons=max"
				item:t = "plus"
				item:t = "rudder=min"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "testFlight_point01"
			}
		}
		else_actions {

		}
	}
	testFlight_point01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {

		}
		actions {
			triggerDisable {
				target:t = "pre_player_restore03"
				target:t = "pre_player_restore_spin"
			}
			moSetObjectiveStatus {
				target:t = "tutorial_mission1_airControls"
				status:i = 2
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
				object_marking:i = 0
			}
			bigQueryAddRecord {
				name:t = "tutorial_01"
				params:t = "task 4/5: test the main controls in the air"
				event:t = ""
			}
			missionPlayDialogue {
				dialog:t = "tutorial_m1_d14"
				subtitles:b = false
				showInGame:b = false
			}
			missionSetFade {
				mode:t = "fadeOut"
				colour:p3 = 0, 0, 0
				time:r = 1
				color:p3 = 0, 0, 0
			}
			wait {
				time:r = 2
			}
			unitMoveTo {
				target:t = "way06"
				follow_target:b = false
				teleportHeightType:t = "target"
				useUnitHeightForTele:b = false
				shouldKeepFormation:b = false
				teleportHeightValue:r = 0
				horizontalDirectionForTeleport:b = true
				object_marking:i = 0
				target_marking:i = 0
				waypointReachedDist:r = 10
				recalculatePathDist:r = -1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				fastClimb:b = false
				destTimeMode:b = false
				target_var_name:t = ""
				target_var_comp_op:t = "equal"
				target_var_value:i = 0
				shouldKeepAirFormation:b = true
				object:t = "player"
				move_type:t = "teleport"
				lookat:t = "way01"
				velocity:r = 300
			}
			missionSetFade {
				mode:t = "fadeIn"
				colour:p3 = 1, 1, 1
				time:r = 1
				color:p3 = 0, 0, 0
			}
			moAddMissionObjective {
				target:t = "tutorial_mission1_testFlight"
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
			}
			missionMarkAsWaypoint {
				visible:b = true
				primary:b = true
				scale:r = 1
				oriented:b = false
				ignoreDifficulty:b = true
				target:t = "way01"
			}
			triggerEnable {
				target:t = "testFlight_point02"
				target:t = "if_killed_on_point01"
				target:t = "testFlight_trimmer"
			}
			unitMoveTo {
				target:t = "way04"
				follow_target:b = false
				teleportHeightType:t = "absolute"
				useUnitHeightForTele:b = true
				shouldKeepFormation:b = false
				teleportHeightValue:r = 1000
				horizontalDirectionForTeleport:b = true
				object_marking:i = 0
				target_marking:i = 0
				waypointReachedDist:r = 10
				recalculatePathDist:r = -1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				fastClimb:b = false
				destTimeMode:b = false
				target_var_name:t = ""
				target_var_comp_op:t = "equal"
				target_var_value:i = 0
				shouldKeepAirFormation:b = true
				object:t = "instructor"
			}
			unitSetIndication {
				set:b = false
				target:t = "instructor"
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
			}
		}
		else_actions {

		}
	}
	testFlight_trimmer {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			gameWhenDifficulty {
				difficulty:t = "simulator"
				is:t = "equal"
			}
			gameWhenControlMode {
				controlmode:t = "fullreal"
				is:t = "equal"
			}
		}
		actions {
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_TRIM"
				control:t = "ID_TRIM_RESET"
			}
			missionPlayDialogue {
				dialog:t = "tutorial_m1_d15"
				showInGame:b = true
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_trimmer"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ID_TRIM"
				shouldBlink:b = false
			}
			wait {
				time:r = 4
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_trimmer"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ID_TRIM"
				shouldBlink:b = false
			}
			wait {
				time:r = 1
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_resetTrimmer"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ID_TRIM_RESET"
				shouldBlink:b = false
			}
			wait {
				time:r = 4
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_resetTrimmer"
				action:t = "hide"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "ID_TRIM_RESET"
				shouldBlink:b = false
			}
		}
		else_actions {

		}
	}
	if_killed_on_point01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playersWhenStatus {
				players:t = "isKilled"
				check_players:t = "all"
			}
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
				control:t = "ID_CONTINUE_SETUP"
			}
		}
		actions {
			unitRestore {
				ressurectIfDead:b = true
				fullRestore:b = true
				target_marking:i = 0
				target:t = "player"
			}
			wait {
				time:r = 0.02
			}
			unitMoveTo {
				target:t = "instructor_way01"
				follow_target:b = false
				teleportHeightType:t = "target"
				useUnitHeightForTele:b = false
				shouldKeepFormation:b = true
				teleportHeightValue:r = 0
				horizontalDirectionForTeleport:b = true
				object_marking:i = 0
				target_marking:i = 0
				waypointReachedDist:r = 10
				recalculatePathDist:r = -1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				fastClimb:b = false
				destTimeMode:b = false
				target_var_name:t = ""
				target_var_comp_op:t = "equal"
				target_var_value:i = 0
				shouldKeepAirFormation:b = true
				object:t = "player"
				move_type:t = "teleport"
				lookat:t = "way01"
				velocity:r = 300
			}
		}
		else_actions {

		}
	}
	testFlight_point02 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			playersWhenInArea {
				math:t = "3D"
				players:t = "isAlive"
				check_players:t = "any"
				object_marking:i = 0
				target_type:t = "isAlive"
				check_period:r = 1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				target:t = "way01"
			}
		}
		actions {
			triggerDisable {
				target:t = "if_killed_on_point01"
			}
			missionMarkAsWaypoint {
				visible:b = false
				primary:b = true
				scale:r = 1
				oriented:b = false
				ignoreDifficulty:b = true
				target:t = "way01"
			}
			missionMarkAsWaypoint {
				visible:b = true
				primary:b = true
				scale:r = 1
				oriented:b = false
				ignoreDifficulty:b = true
				target:t = "way02"
			}
			triggerEnable {
				target:t = "testFlight_point03"
				target:t = "if_killed_on_point02"
			}
		}
		else_actions {

		}
	}
	if_killed_on_point02 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playersWhenStatus {
				players:t = "isKilled"
				check_players:t = "all"
			}
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
				control:t = "ID_CONTINUE_SETUP"
			}
		}
		actions {
			unitRestore {
				ressurectIfDead:b = true
				fullRestore:b = true
				target_marking:i = 0
				target:t = "player"
			}
			wait {
				time:r = 0.2
			}
			unitMoveTo {
				target:t = "way01"
				follow_target:b = false
				teleportHeightType:t = "target"
				useUnitHeightForTele:b = false
				shouldKeepFormation:b = true
				teleportHeightValue:r = 0
				horizontalDirectionForTeleport:b = true
				object_marking:i = 0
				target_marking:i = 0
				waypointReachedDist:r = 10
				recalculatePathDist:r = -1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				fastClimb:b = false
				destTimeMode:b = false
				target_var_name:t = ""
				target_var_comp_op:t = "equal"
				target_var_value:i = 0
				shouldKeepAirFormation:b = true
				object:t = "player"
				move_type:t = "teleport"
				lookat:t = "way02"
				velocity:r = 300
			}
		}
		else_actions {

		}
	}
	testFlight_point03 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			playersWhenInArea {
				math:t = "3D"
				players:t = "isAlive"
				check_players:t = "any"
				object_marking:i = 0
				target_type:t = "isAlive"
				check_period:r = 1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				target:t = "way02"
			}
		}
		actions {
			triggerDisable {
				target:t = "if_killed_on_point02"
			}
			missionMarkAsWaypoint {
				visible:b = false
				primary:b = true
				scale:r = 1
				oriented:b = false
				ignoreDifficulty:b = true
				target:t = "way02"
			}
			missionMarkAsWaypoint {
				visible:b = true
				primary:b = true
				scale:r = 1
				oriented:b = false
				ignoreDifficulty:b = true
				target:t = "way03"
			}
			triggerEnable {
				target:t = "testFlight_point04"
				target:t = "if_killed_on_point03"
			}
		}
		else_actions {

		}
	}
	if_killed_on_point03 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 0.1
			}
		}
		conditions {
			playersWhenStatus {
				players:t = "isKilled"
				check_players:t = "all"
			}
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
				control:t = "ID_CONTINUE_SETUP"
			}
		}
		actions {
			unitRestore {
				ressurectIfDead:b = true
				fullRestore:b = true
				target_marking:i = 0
				target:t = "player"
			}
			wait {
				time:r = 0.02
			}
			unitMoveTo {
				target:t = "way02"
				follow_target:b = false
				teleportHeightType:t = "target"
				useUnitHeightForTele:b = false
				shouldKeepFormation:b = true
				teleportHeightValue:r = 0
				horizontalDirectionForTeleport:b = true
				object_marking:i = 0
				target_marking:i = 0
				waypointReachedDist:r = 10
				recalculatePathDist:r = -1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				fastClimb:b = false
				destTimeMode:b = false
				target_var_name:t = ""
				target_var_comp_op:t = "equal"
				target_var_value:i = 0
				shouldKeepAirFormation:b = true
				object:t = "player"
				move_type:t = "teleport"
				lookat:t = "way03"
				velocity:r = 300
			}
		}
		else_actions {

		}
	}
	testFlight_point04 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			playersWhenInArea {
				math:t = "3D"
				players:t = "isAlive"
				check_players:t = "any"
				object_marking:i = 0
				target_type:t = "isAlive"
				check_period:r = 1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				target:t = "way03"
			}
		}
		actions {
			triggerDisable {
				target:t = "if_killed_on_point03"
			}
			missionMarkAsWaypoint {
				visible:b = false
				primary:b = true
				scale:r = 1
				oriented:b = false
				ignoreDifficulty:b = true
				target:t = "way03"
			}
			missionMarkAsWaypoint {
				visible:b = true
				primary:b = true
				scale:r = 1
				oriented:b = false
				ignoreDifficulty:b = true
				target:t = "way04"
			}
			triggerEnable {
				target:t = "mission_completed"
				target:t = "if_killed_on_point04"
			}
		}
		else_actions {

		}
	}
	if_killed_on_point04 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 0.1
			}
		}
		conditions {
			playersWhenStatus {
				players:t = "isKilled"
				check_players:t = "all"
			}
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
				control:t = "ID_CONTINUE_SETUP"
			}
		}
		actions {
			unitRestore {
				ressurectIfDead:b = true
				fullRestore:b = true
				target_marking:i = 0
				target:t = "player"
			}
			wait {
				time:r = 0.02
			}
			unitMoveTo {
				target:t = "way03"
				follow_target:b = false
				teleportHeightType:t = "target"
				useUnitHeightForTele:b = false
				shouldKeepFormation:b = true
				teleportHeightValue:r = 0
				horizontalDirectionForTeleport:b = true
				object_marking:i = 0
				target_marking:i = 0
				waypointReachedDist:r = 10
				recalculatePathDist:r = -1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				fastClimb:b = false
				destTimeMode:b = false
				target_var_name:t = ""
				target_var_comp_op:t = "equal"
				target_var_value:i = 0
				shouldKeepAirFormation:b = true
				object:t = "player"
				move_type:t = "teleport"
				lookat:t = "way04"
				velocity:r = 300
			}
		}
		else_actions {

		}
	}
	mission_completed {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			playersWhenInArea {
				math:t = "3D"
				players:t = "isAlive"
				check_players:t = "any"
				object_marking:i = 0
				target_type:t = "isAlive"
				check_period:r = 1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				target:t = "way04"
			}
		}
		actions {
			triggerDisable {
				target:t = "if_killed_on_point04"
			}
			missionMarkAsWaypoint {
				visible:b = false
				primary:b = true
				scale:r = 1
				oriented:b = false
				ignoreDifficulty:b = true
				target:t = "way04"
			}
			moSetObjectiveStatus {
				target:t = "tutorial_mission1_testFlight"
				status:i = 2
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
				object_marking:i = 0
			}
			bigQueryAddRecord {
				name:t = "tutorial_01"
				params:t = "task 5/5: proceed to the designated route"
				event:t = ""
			}
			missionPlayDialogue {
				dialog:t = "tutorial_m1_d16"
				showInGame:b = true
			}
			missionCompleted {
				timer:b = false
				debriefingTimer:i = 5
			}
		}
		else_actions {

		}
	}
	pre_player_restore01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			unitWhenStatus {
				object_type:t = "isUseless"
				object_marking:i = 0
				check_objects:t = "any"
				target_type:t = "isAlive"
				check_period:r = 1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				object:t = "player"
			}
		}
		actions {
			triggerDisable {
				target:t = "groundTest_throttle01"
				target:t = "groundTest_throttle02"
				target:t = "takeoff_levelAircraft"
				target:t = "takeoff_gears01"
				target:t = "takeoff_gears02"
			}
			missionStopSpeech {

			}
			playerControls {
				setStatus:t = "disable"
				control:t = "ID_CONTINUE"
			}
			wait {
				time:r = 1.5
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_CONTINUE"
			}
			triggerEnable {
				target:t = "player_restore01"
			}
		}
		else_actions {

		}
	}
	player_restore01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.03
			}
		}
		conditions {
			playersWhenStatus {
				players:t = "isUseless"
				check_players:t = "any"
			}
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
				control:t = "ID_CONTINUE_SETUP"
			}
		}
		actions {
			missionSetFade {
				mode:t = "fadeOut"
				colour:p3 = 0, 0, 0
				time:r = 0.3
				color:p3 = 0, 0, 0
			}
			wait {
				time:r = 0.5
			}
			unitRestore {
				ressurectIfDead:b = true
				fullRestore:b = true
				target_marking:i = 0
				target:t = "player"
			}
			wait {
				time:r = 0.5
			}
			spawnOnAirfield {
				runwayName:t = "airfield00"
				objects:t = "player"
			}
			wait {
				time:r = 0.5
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_throttle01"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				item:t = "throttle"
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "groundTest_throttle02"
			}
			missionSetFade {
				mode:t = "fadeIn"
				colour:p3 = 0, 0, 0
				time:r = 0.5
				color:p3 = 0, 0, 0
			}
			triggerEnable {
				target:t = "pre_player_restore01"
			}
		}
		else_actions {

		}
	}
	pre_player_restore02 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			unitWhenStatus {
				object_type:t = "isUseless"
				object_marking:i = 0
				check_objects:t = "any"
				target_type:t = "isAlive"
				check_period:r = 1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				object:t = "player"
			}
		}
		actions {
			missionStopSpeech {

			}
			playerControls {
				setStatus:t = "disable"
				control:t = "ID_CONTINUE"
			}
			wait {
				time:r = 1.5
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_CONTINUE"
			}
			triggerEnable {
				target:t = "player_restore02"
			}
		}
		else_actions {

		}
	}
	player_restore02 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.03
			}
		}
		conditions {
			playersWhenStatus {
				players:t = "isUseless"
				check_players:t = "any"
			}
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
				control:t = "ID_CONTINUE_SETUP"
			}
		}
		actions {
			missionSetFade {
				mode:t = "fadeOut"
				colour:p3 = 0, 0, 0
				time:r = 0.3
				color:p3 = 0, 0, 0
			}
			wait {
				time:r = 0.5
			}
			unitRestore {
				ressurectIfDead:b = true
				fullRestore:b = true
				target_marking:i = 0
				target:t = "player"
			}
			wait {
				time:r = 0.5
			}
			unitMoveTo {
				target:t = "instructor_way02"
				follow_target:b = false
				teleportHeightType:t = "target"
				useUnitHeightForTele:b = false
				shouldKeepFormation:b = true
				teleportHeightValue:r = 0
				horizontalDirectionForTeleport:b = true
				object_marking:i = 0
				target_marking:i = 0
				waypointReachedDist:r = 10
				recalculatePathDist:r = -1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				fastClimb:b = false
				destTimeMode:b = false
				target_var_name:t = ""
				target_var_comp_op:t = "equal"
				target_var_value:i = 0
				shouldKeepAirFormation:b = true
				object:t = "player"
				move_type:t = "teleport"
				lookat:t = "instructor_way00"
				velocity:r = 300
			}
			missionSetFade {
				mode:t = "fadeIn"
				colour:p3 = 0, 0, 0
				time:r = 0.5
				color:p3 = 0, 0, 0
			}
			triggerEnable {
				target:t = "pre_player_restore02"
			}
		}
		else_actions {

		}
	}
	pre_player_restore03 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			unitWhenStatus {
				object_type:t = "isUseless"
				object_marking:i = 0
				check_objects:t = "any"
				target_type:t = "isAlive"
				check_period:r = 1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				object:t = "player"
			}
		}
		actions {
			missionStopSpeech {

			}
			playerControls {
				setStatus:t = "disable"
				control:t = "ID_CONTINUE"
			}
			wait {
				time:r = 1.5
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_CONTINUE"
			}
			triggerEnable {
				target:t = "player_restore03"
			}
		}
		else_actions {

		}
	}
	player_restore03 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.03
			}
		}
		conditions {
			playersWhenStatus {
				players:t = "isUseless"
				check_players:t = "any"
			}
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
				control:t = "ID_CONTINUE_SETUP"
			}
		}
		actions {
			missionSetFade {
				mode:t = "fadeOut"
				colour:p3 = 0, 0, 0
				time:r = 0.3
				color:p3 = 0, 0, 0
			}
			wait {
				time:r = 0.5
			}
			unitRestore {
				ressurectIfDead:b = true
				fullRestore:b = true
				target_marking:i = 0
				target:t = "player"
			}
			wait {
				time:r = 0.5
			}
			unitMoveTo {
				target:t = "instructor"
				follow_target:b = true
				teleportHeightType:t = "target"
				useUnitHeightForTele:b = false
				shouldKeepFormation:b = false
				teleportHeightValue:r = 0
				horizontalDirectionForTeleport:b = true
				object_marking:i = 0
				target_marking:i = 0
				waypointReachedDist:r = 10
				recalculatePathDist:r = -1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				fastClimb:b = false
				destTimeMode:b = false
				target_var_name:t = ""
				target_var_comp_op:t = "equal"
				target_var_value:i = 0
				shouldKeepAirFormation:b = true
				object:t = "player"
				move_type:t = "teleport"
				speed:r = 300
				follow_radius:r = 300
				lookat:t = "instructor"
				velocity:r = 300
			}
			missionSetFade {
				mode:t = "fadeIn"
				colour:p3 = 0, 0, 0
				time:r = 0.5
				color:p3 = 0, 0, 0
			}
			triggerEnable {
				target:t = "pre_player_restore03"
			}
		}
		else_actions {

		}
	}
	pre_player_restore_spin {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			unitWhenStatus {
				object_type:t = "isUseless"
				object_marking:i = 0
				check_objects:t = "any"
				target_type:t = "isAlive"
				check_period:r = 1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				object:t = "player"
			}
		}
		actions {
			triggerDisable {
				target:t = "aerialTest_spin01"
				target:t = "aerialTest_spin01_skip"
				target:t = "aerialTest_spin02"
				target:t = "aerialTest_spin03"
				target:t = "aerialTest_spin04"
			}
			missionStopSpeech {

			}
			playerControls {
				setStatus:t = "disable"
				control:t = "ID_CONTINUE"
			}
			wait {
				time:r = 1.5
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_CONTINUE"
			}
			triggerEnable {
				target:t = "player_restore_spin"
			}
		}
		else_actions {

		}
	}
	player_restore_spin {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playersWhenStatus {
				players:t = "isKilled"
				check_players:t = "any"
			}
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
				control:t = "ID_CONTINUE_SETUP"
			}
		}
		actions {
			missionSetFade {
				mode:t = "fadeOut"
				colour:p3 = 0, 0, 0
				time:r = 0.3
				color:p3 = 0, 0, 0
			}
			wait {
				time:r = 0.5
			}
			unitRestore {
				ressurectIfDead:b = true
				fullRestore:b = true
				target_marking:i = 0
				target:t = "player"
			}
			wait {
				time:r = 0.5
			}
			unitMoveTo {
				target:t = "instructor_way01"
				follow_target:b = false
				teleportHeightType:t = "target"
				useUnitHeightForTele:b = false
				shouldKeepFormation:b = false
				teleportHeightValue:r = 2000
				horizontalDirectionForTeleport:b = true
				object_marking:i = 0
				target_marking:i = 0
				waypointReachedDist:r = 10
				recalculatePathDist:r = -1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				fastClimb:b = false
				destTimeMode:b = false
				target_var_name:t = ""
				target_var_comp_op:t = "equal"
				target_var_value:i = 0
				shouldKeepAirFormation:b = true
				object:t = "player"
				move_type:t = "teleport"
				lookat:t = "instructor"
				velocity:r = 250
			}
			missionSetFade {
				mode:t = "fadeIn"
				colour:p3 = 0, 0, 0
				time:r = 0.5
				color:p3 = 0, 0, 0
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/tutorial_spin01"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "aerialTest_spin02"
				target:t = "aerialTest_spin03"
				target:t = "pre_player_restore_spin"
			}
		}
		else_actions {

		}
	}
	stopSpeech {
		is_enabled:b = true
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			unitWhenStatus {
				object_type:t = "isUseless"
				object_marking:i = 0
				check_objects:t = "any"
				target_type:t = "isAlive"
				check_period:r = 1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				object:t = "player"
			}
		}
		actions {
			missionStopSpeech {

			}
		}
		else_actions {

		}
	}
}
mission_objectives {
	isCategory:b = true
	is_enabled:b = true
	tutorial_mission1_groundControls {
		is_enabled:b = false
		comments:t = ""
		type:t = "abstractMissionObjective"
		props {
			isPrimary:b = true
			timeLimit:i = 3600
			scoreConst:i = 100
			scoreTime:i = 400
		}
		onSuccess {

		}
		onFailed {

		}
	}
	tutorial_mission1_takeoff {
		is_enabled:b = false
		comments:t = ""
		type:t = "abstractMissionObjective"
		props {
			isPrimary:b = true
			timeLimit:i = 3600
			scoreConst:i = 100
			scoreTime:i = 400
		}
		onSuccess {

		}
		onFailed {

		}
	}
	tutorial_mission1_airControls {
		is_enabled:b = false
		comments:t = ""
		type:t = "abstractMissionObjective"
		props {
			isPrimary:b = true
			timeLimit:i = 3600
			scoreConst:i = 100
			scoreTime:i = 400
		}
		onSuccess {

		}
		onFailed {

		}
	}
	tutorial_mission1_testFlight {
		is_enabled:b = false
		comments:t = ""
		type:t = "abstractMissionObjective"
		props {
			isPrimary:b = true
			timeLimit:i = 3600
			scoreConst:i = 100
			scoreTime:i = 400
		}
		onSuccess {

		}
		onFailed {

		}
	}
}
variables {

}
dialogs {
	tutorial_m1_d01 {
		speech {
			id:t = "tutorial01_dialogue01_p01"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
		speech {
			id:t = "tutorial01_dialogue01_p02"
			speakerId:t = ""
			props {
				time:r = 2
			}
		}
		speech {
			id:t = "tutorial01_dialogue01_p03"
			speakerId:t = ""
			props {
				time:r = 2
			}
		}
		speech {
			id:t = "tutorial01_dialogue01_p04"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorial_m1_d02 {
		speech {
			id:t = "tutorial01_dialogue02_p01"
			speakerId:t = ""
			props {
				time:r = 2
			}
		}
		speech {
			id:t = "tutorial01_dialogue02_p02"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
		speech {
			id:t = "tutorial01_dialogue02_p03"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
		speech {
			id:t = "tutorial01_dialogue02_p04"
			speakerId:t = ""
			props {
				time:r = 2
			}
		}
		speech {
			id:t = "tutorial01_dialogue02_p05"
			speakerId:t = ""
			props {
				time:r = 2
			}
		}
		speech {
			id:t = "tutorial01_dialogue02_p06"
			speakerId:t = ""
			props {
				time:r = 2
			}
		}
		speech {
			id:t = "tutorial01_dialogue02_p07"
			speakerId:t = ""
			props {
				time:r = 2
			}
		}
		speech {
			id:t = "tutorial01_dialogue02_p08"
			speakerId:t = ""
			props {
				time:r = 2
			}
		}
		speech {
			id:t = "tutorial01_dialogue02_p09"
			speakerId:t = ""
			props {
				time:r = 2
			}
		}
		speech {
			id:t = "tutorial01_dialogue02_p10"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorial_m1_d03_1 {
		speech {
			id:t = "tutorial01_dialogue03_p01"
			speakerId:t = ""
			props {
				time:r = 3
			}
		}
		speech {
			id:t = "tutorial01_dialogue03_p02"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
		speech {
			id:t = "tutorial01_dialogue03_p03"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
		speech {
			id:t = "tutorial01_dialogue03_p04"
			speakerId:t = ""
			props {
				time:r = 3
			}
		}
		speech {
			id:t = "tutorial01_dialogue03_p05"
			speakerId:t = ""
			props {
				time:r = 2
			}
		}
	}
	tutorial_m1_d03_2 {
		speech {
			id:t = "tutorial01_dialogue03_p06"
			speakerId:t = ""
			props {
				time:r = 2
			}
		}
		speech {
			id:t = "tutorial01_dialogue03_p07"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
		speech {
			id:t = "tutorial01_dialogue03_p08"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
		speech {
			id:t = "tutorial01_dialogue03_p09"
			speakerId:t = ""
			props {
				time:r = 2
			}
		}
		speech {
			id:t = "tutorial01_dialogue03_p10"
			speakerId:t = ""
			props {
				time:r = 2
			}
		}
		speech {
			id:t = "tutorial01_dialogue03_p11"
			speakerId:t = ""
			props {
				time:r = 3
			}
		}
		speech {
			id:t = "tutorial01_dialogue03_p12"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorial_m1_d03_3 {
		speech {
			id:t = "tutorial01_dialogue03_p13"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
		speech {
			id:t = "tutorial01_dialogue03_p14"
			speakerId:t = ""
			props {
				time:r = 3
			}
		}
		speech {
			id:t = "tutorial01_dialogue03_p15"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
		speech {
			id:t = "tutorial01_dialogue03_p16"
			speakerId:t = ""
			props {
				time:r = 2
			}
		}
	}
	tutorial_m1_d03_4 {
		speech {
			id:t = "tutorial01_dialogue03_p17"
			speakerId:t = ""
			props {
				time:r = 2
			}
		}
		speech {
			id:t = "tutorial01_dialogue03_p18"
			speakerId:t = ""
			props {
				time:r = 2
			}
		}
	}
	tutorial_m1_d04_1 {
		speech {
			id:t = "tutorial01_dialogue04_p01"
			speakerId:t = ""
			props {
				time:r = 2
			}
		}
		speech {
			id:t = "tutorial01_dialogue04_p02"
			speakerId:t = ""
			props {
				time:r = 2
			}
		}
	}
	tutorial_m1_d05 {
		speech {
			id:t = "tutorial01_dialogue05_p01"
			speakerId:t = ""
			props {
				time:r = 3
			}
		}
	}
	tutorial_m1_d06 {
		speech {
			id:t = "tutorial01_dialogue06_p01"
			speakerId:t = ""
			props {
				time:r = 3
			}
		}
		speech {
			id:t = "tutorial01_dialogue06_p02"
			speakerId:t = ""
			props {
				time:r = 3
			}
		}
	}
	tutorial_m1_d07 {
		speech {
			id:t = "tutorial01_dialogue07_p01"
			speakerId:t = ""
			props {
				time:r = 2
			}
		}
		speech {
			id:t = "tutorial01_dialogue07_p02"
			speakerId:t = ""
			props {
				time:r = 3
			}
		}
		speech {
			id:t = "tutorial01_dialogue07_p03"
			speakerId:t = ""
			props {
				time:r = 3
			}
		}
	}
	tutorial_m1_d08 {
		speech {
			id:t = "tutorial01_dialogue08_p01"
			speakerId:t = ""
			props {
				time:r = 2
			}
		}
		speech {
			id:t = "tutorial01_dialogue08_p02"
			speakerId:t = ""
			props {
				time:r = 2
			}
		}
	}
	tutorial_m1_d09_1 {
		speech {
			id:t = "tutorial01_dialogue09_p01"
			speakerId:t = ""
			props {
				time:r = 3
			}
		}
		speech {
			id:t = "tutorial01_dialogue09_p02"
			speakerId:t = ""
			props {
				time:r = 3
			}
		}
	}
	tutorial_m1_d09_3 {
		speech {
			id:t = "tutorial01_dialogue09_p05"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorial_m1_d09_4 {
		speech {
			id:t = "tutorial01_dialogue09_p06"
			speakerId:t = ""
			props {
				time:r = 2
			}
		}
	}
	tutorial_m1_d10_1 {
		speech {
			id:t = "tutorial01_dialogue10_p01"
			speakerId:t = ""
			props {
				time:r = 2
			}
		}
		speech {
			id:t = "tutorial01_dialogue10_p02"
			speakerId:t = ""
			props {
				time:r = 3
			}
		}
	}
	tutorial_m1_d10_2 {
		speech {
			id:t = "tutorial01_dialogue10_p03"
			speakerId:t = ""
			props {
				time:r = 3
			}
		}
		speech {
			id:t = "tutorial01_dialogue10_p04"
			speakerId:t = ""
			props {
				time:r = 3
			}
		}
		speech {
			id:t = "tutorial01_dialogue10_p05"
			speakerId:t = ""
			props {
				time:r = 3
			}
		}
		speech {
			id:t = "tutorial01_dialogue10_p06"
			speakerId:t = ""
			props {
				time:r = 3
			}
		}
		speech {
			id:t = "tutorial01_dialogue10_p07"
			speakerId:t = ""
			props {
				time:r = 3
			}
		}
		speech {
			id:t = "tutorial01_dialogue10_p08"
			speakerId:t = ""
			props {
				time:r = 3
			}
		}
		speech {
			id:t = "tutorial01_dialogue10_p09"
			speakerId:t = ""
			props {
				time:r = 3
			}
		}
		speech {
			id:t = "tutorial01_dialogue10_p10"
			speakerId:t = ""
			props {
				time:r = 2
			}
		}
	}
	tutorial_m1_d10_3 {
		speech {
			id:t = "tutorial01_dialogue10_p11"
			speakerId:t = ""
			props {
				time:r = 2
			}
		}
	}
	tutorial_m1_d10_4 {
		speech {
			id:t = "tutorial01_dialogue10_p12"
			speakerId:t = ""
			props {
				time:r = 3
			}
		}
		speech {
			id:t = "tutorial01_dialogue10_p13"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
		speech {
			id:t = "tutorial01_dialogue10_p14"
			speakerId:t = ""
			props {
				time:r = 2
			}
		}
	}
	tutorial_m1_d10_5 {
		speech {
			id:t = "tutorial01_dialogue10_p15"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
		speech {
			id:t = "tutorial01_dialogue10_p16"
			speakerId:t = ""
			props {
				time:r = 3
			}
		}
	}
	tutorial_m1_d11 {
		speech {
			id:t = "tutorial01_dialogue11_p01"
			speakerId:t = ""
			props {
				time:r = 3
			}
		}
		speech {
			id:t = "tutorial01_dialogue11_p02"
			speakerId:t = ""
			props {
				time:r = 3
			}
		}
	}
	tutorial_m1_d12_1 {
		speech {
			id:t = "tutorial01_dialogue12_p01"
			speakerId:t = ""
			props {
				time:r = 3
			}
		}
		speech {
			id:t = "tutorial01_dialogue12_p02"
			speakerId:t = ""
			props {
				time:r = 2
			}
		}
	}
	tutorial_m1_d13_1 {
		speech {
			id:t = "tutorial01_dialogue13_p01"
			speakerId:t = ""
			props {
				time:r = 2
			}
		}
		speech {
			id:t = "tutorial01_dialogue13_p02"
			speakerId:t = ""
			props {
				time:r = 3
			}
		}
		speech {
			id:t = "tutorial01_dialogue13_p03"
			speakerId:t = ""
			props {
				time:r = 3
			}
		}
	}
	tutorial_m1_d13_2 {
		speech {
			id:t = "tutorial01_dialogue13_p04"
			speakerId:t = ""
			props {
				time:r = 3
			}
		}
	}
	tutorial_m1_d14 {
		speech {
			id:t = "tutorial01_dialogue14_p01"
			speakerId:t = ""
			props {
				time:r = 3
			}
		}
		speech {
			id:t = "tutorial01_dialogue14_p02"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
	}
	tutorial_m1_d15 {
		speech {
			id:t = "tutorial01_dialogue15_p01"
			speakerId:t = ""
			props {
				time:r = 3
			}
		}
		speech {
			id:t = "tutorial01_dialogue15_p02"
			speakerId:t = ""
			props {
				time:r = 3
			}
		}
		speech {
			id:t = "tutorial01_dialogue15_p03"
			speakerId:t = ""
			props {
				time:r = 3
			}
		}
	}
	tutorial_m1_d16 {
		speech {
			id:t = "tutorial01_dialogue16_p01"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
		speech {
			id:t = "tutorial01_dialogue16_p02"
			speakerId:t = ""
			props {
				time:r = 3
			}
		}
		speech {
			id:t = "tutorial01_dialogue16_p03"
			speakerId:t = ""
			props {
				time:r = 3
			}
		}
		speech {
			id:t = "tutorial01_dialogue16_p04"
			speakerId:t = ""
			props {
				time:r = 2
			}
		}
	}
	tutorial_m1_d04_2 {
		speech {
			id:t = "tutorial01_dialogue04_p03"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
		speech {
			id:t = "tutorial01_dialogue04_p04"
			speakerId:t = ""
			props {
				time:r = 2
			}
		}
	}
	tutorial_m1_d09_2 {
		speech {
			id:t = "tutorial01_dialogue09_p03"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
		speech {
			id:t = "tutorial01_dialogue09_p04"
			speakerId:t = ""
			props {
				time:r = 2
			}
		}
	}
	tutorial_m1_d12_2 {
		speech {
			id:t = "tutorial01_dialogue12_p03"
			speakerId:t = ""
			props {
				time:r = 1
			}
		}
		speech {
			id:t = "tutorial01_dialogue12_p04"
			speakerId:t = ""
			props {
				time:r = 2
			}
		}
		speech {
			id:t = "tutorial01_dialogue12_p05"
			speakerId:t = ""
			props {
				time:r = 2
			}
		}
	}
	tutorial_m1_d13_ps4 {
		speech {
			id:t = "tutorial01_dialogue13_p01"
			speakerId:t = ""
			props {
				time:r = 2
			}
		}
	}
}
airfields {

}
effects {

}
units {
	armada {
		name:t = "player"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [560.15, 7.1, -11588.5]]
		unit_class:t = "f2a-1"
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = "f2a-1_default"
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			free_distance:r = 70
			floating_distance:r = 50
			minimum_distance_to_earth:r = 20
			altLimit:r = 6000
			attack_type:t = "fire_at_will"
			skill:i = 4
			count:i = 1
			uniqueName:t = ""
			plane {
				wing_formation:t = "Diamond"
				row_distances:r = 1.5
				col_distances:r = 1.5
				super_formation:t = "Diamond"
				super_row_distances:r = 1.5
				super_col_distances:r = 1.5
				ai_skill:t = "NORMAL"
				task:t = "FLY_WAYPOINT"
			}
		}
		way {

		}
	}
	armada {
		name:t = "instructor"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [528.0, 11.0, -11619.7]]
		unit_class:t = "f2a-1"
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = "f2a-1_default"
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			free_distance:r = 70
			floating_distance:r = 50
			minimum_distance_to_earth:r = 20
			altLimit:r = 6000
			attack_type:t = "fire_at_will"
			skill:i = 4
			count:i = 1
			uniqueName:t = ""
			plane {
				wing_formation:t = "Diamond"
				row_distances:r = 1.5
				col_distances:r = 1.5
				super_formation:t = "Diamond"
				super_row_distances:r = 1.5
				super_col_distances:r = 1.5
				ai_skill:t = "NORMAL"
				task:t = "FLY_WAYPOINT"
			}
		}
		way {

		}
	}
	ships {
		name:t = "ships_01"
		tm:m = [[0.5, 0.0, 0.866025] [0.0, 1.0, 0.0] [-0.866025, 0.0, 0.5] [60.55, 2.0, -10494.6]]
		unit_class:t = "uss_lst"
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 2
			formation_type:t = "rows"
			formation_div:i = 1
			formation_step:p2 = 6, 2
			formation_noise:p2 = 0.1, 0.1
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
		}
		way {

		}
	}
	ships {
		name:t = "ships_02"
		tm:m = [[0.422618, 0.0, -0.906308] [0.0, 1.0, 0.0] [0.906308, 0.0, 0.422618] [-1922.4, 2.0, -8733.1]]
		unit_class:t = "uss_lst"
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 3
			formation_type:t = "cols"
			formation_div:i = 1
			formation_step:p2 = 6, 3
			formation_noise:p2 = 0.2, -0.2
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
		}
		way {
			ships_02_wp_02 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-1319.45, 2.0, -9735.15]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			ships_02_wp_06 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-1030.7, 2.0, -10648.5]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			ships_02_wp_09 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-1078.2, 2.0, -11605.9]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			ships_02_wp_12 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-1278.5, 2.0, -12570.9]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			ships_02_wp_13 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-442.85, 2.0, -15366.8]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			ships_02_wp_14 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [249.75, 2.0, -16953.0]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			ships_02_wp_15 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [1270.3, 2.0, -18386.1]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			ships_02_wp_16 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [8118.05, 2.0, -32462.0]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
		}
	}
	ships {
		name:t = "ships_03"
		tm:m = [[0.0436195, 0.0, -0.999048] [0.0, 1.0, 0.0] [0.999048, 0.0, 0.0436195] [-2424.1, 2.0, -8476.75]]
		unit_class:t = "uss_cargo_ship"
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 6
			formation_type:t = "cols"
			formation_div:i = 2
			formation_step:p2 = 13, 6
			formation_noise:p2 = 0.4, 0.3
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
		}
		way {

		}
	}
	ships {
		name:t = "ships_04"
		tm:m = [[-0.939693, 0.0, -0.34202] [0.0, 1.0, 0.0] [0.34202, 0.0, -0.939693] [820.3, 2.0, -10710.8]]
		unit_class:t = "uss_pt_109"
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 4
			formation_type:t = "rows"
			formation_div:i = 1
			formation_step:p2 = 6, 6
			formation_noise:p2 = 0.1, 0.2
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
		}
		way {

		}
	}
	ships {
		name:t = "ships_05"
		tm:m = [[-0.819152, 0.0, 0.573577] [0.0, 1.0, 0.0] [-0.573577, 0.0, -0.819152] [-985.65, 2.0, -9977.0]]
		unit_class:t = "uss_pt_109"
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 4
			formation_type:t = "rows"
			formation_div:i = 1
			formation_step:p2 = 6, 6
			formation_noise:p2 = 0.1, 0.2
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
		}
		way {

		}
	}
	ships {
		name:t = "ships_06"
		tm:m = [[0.5, 0.0, 0.866025] [0.0, 1.0, 0.0] [-0.866025, 0.0, 0.5] [-262.7, 2.0, -10876.0]]
		unit_class:t = "uss_dd_sims"
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 1
			formation_type:t = "rows"
			formation_div:i = 1
			formation_step:p2 = 6, 2
			formation_noise:p2 = 0.1, 0.1
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
		}
		way {

		}
	}
	squad {
		name:t = "ground_squad"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-1488.05, 2.0, -11547.8]]
		props {
			squad_members:t = "ships_01"
			squad_members:t = "ships_02"
			squad_members:t = "ships_03"
			squad_members:t = "ships_04"
			squad_members:t = "ships_05"
			squad_members:t = "ships_06"
			squad_members:t = "wheeled_vehicles_01"
			squad_members:t = "wheeled_vehicles_02"
			squad_members:t = "wheeled_vehicles_03"
			squad_members:t = "wheeled_vehicles_04"
			squad_members:t = "wheeled_vehicles_05"
			squad_members:t = "wheeled_vehicles_06"
			squad_members:t = "wheeled_vehicles_07"
			squad_members:t = "wheeled_vehicles_08"
			squad_members:t = "wheeled_vehicles_09"
			object_marking:i = 0
		}
	}
	wheeled_vehicles {
		name:t = "wheeled_vehicles_01"
		tm:m = [[0.707107, 0.0, -0.707107] [0.0, 1.0, 0.0] [0.707107, 0.0, 0.707107] [-73.55, 26.65, -12052.8]]
		unit_class:t = "us_dodge_wc51"
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 3
			formation_type:t = "cols"
			formation_div:i = 3
			formation_step:p2 = 5, 4
			formation_noise:p2 = 0.3, 0.4
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
		}
		way {

		}
	}
	wheeled_vehicles {
		name:t = "wheeled_vehicles_02"
		tm:m = [[0.707107, 0.0, -0.707107] [0.0, 1.0, 0.0] [0.707107, 0.0, 0.707107] [-257.6, 26.65, -12251.0]]
		unit_class:t = "us_dodge_wc51"
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 2
			formation_type:t = "cols"
			formation_div:i = 3
			formation_step:p2 = 4, 5
			formation_noise:p2 = 0.1, 0.1
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
		}
		way {

		}
	}
	wheeled_vehicles {
		name:t = "wheeled_vehicles_03"
		tm:m = [[0.843391, 0.0, -0.5373] [0.0, 1.0, 0.0] [0.5373, 0.0, 0.843391] [79.5, 26.65, -10829.6]]
		unit_class:t = "us_m3_halftrack"
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 6
			formation_type:t = "cols"
			formation_div:i = 2
			formation_step:p2 = 5, 3
			formation_noise:p2 = 0.2, -0.2
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
		}
		way {

		}
	}
	wheeled_vehicles {
		name:t = "wheeled_vehicles_04"
		tm:m = [[0.843391, 0.0, -0.5373] [0.0, 1.0, 0.0] [0.5373, 0.0, 0.843391] [601.6, 26.65, -10936.6]]
		unit_class:t = "us_m3_halftrack"
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 7
			formation_type:t = "cols"
			formation_div:i = 2
			formation_step:p2 = 5, 3
			formation_noise:p2 = 0.2, -0.2
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
		}
		way {

		}
	}
	wheeled_vehicles {
		name:t = "wheeled_vehicles_05"
		tm:m = [[0.707107, 0.0, -0.707107] [0.0, 1.0, 0.0] [0.707107, 0.0, 0.707107] [-433.4, 26.65, -11080.5]]
		unit_class:t = "us_ambulance"
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 3
			formation_type:t = "cols"
			formation_div:i = 3
			formation_step:p2 = 5, 4
			formation_noise:p2 = 0.3, 0.4
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
		}
		way {

		}
	}
	wheeled_vehicles {
		name:t = "wheeled_vehicles_06"
		tm:m = [[-0.642788, 0.0, -0.766044] [0.0, 1.0, 0.0] [0.766044, 0.0, -0.642788] [482.3, 26.65, -11948.3]]
		unit_class:t = "us_dodge_wc51"
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 2
			formation_type:t = "cols"
			formation_div:i = 1
			formation_step:p2 = 6, 6
			formation_noise:p2 = 0.3, 0.4
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
		}
		way {
			wheeled_vehicles_06_wp_01 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [235.65, 26.65, -12192.7]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_06_wp_02 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [233.15, 26.65, -12210.8]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_06_wp_03 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [332.15, 26.65, -12302.9]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_06_wp_04 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [524.0, 26.65, -12481.1]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_06_wp_05 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [534.7, 26.65, -12512.8]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_06_wp_06 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [522.55, 26.65, -12656.7]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
		}
	}
	wheeled_vehicles {
		name:t = "wheeled_vehicles_07"
		tm:m = [[0.707107, 0.0, -0.707107] [0.0, 1.0, 0.0] [0.707107, 0.0, 0.707107] [376.5, 26.65, -11633.6]]
		unit_class:t = "us_ambulance"
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 6
			formation_type:t = "cols"
			formation_div:i = 6
			formation_step:p2 = 5, 4
			formation_noise:p2 = 0.2, 0.4
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
		}
		way {

		}
	}
	wheeled_vehicles {
		name:t = "wheeled_vehicles_08"
		tm:m = [[-0.737277, 0.0, 0.67559] [0.0, 1.0, 0.0] [-0.67559, 0.0, -0.737277] [481.7, 26.65, -11591.8]]
		unit_class:t = "us_m8_greyhound"
		closed_waypoints:b = true
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 3
			formation_type:t = "cols"
			formation_div:i = 1
			formation_step:p2 = 3, 5
			formation_noise:p2 = 0.1, 0.1
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
		}
		way {
			wheeled_vehicles_08_wp_01 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [373.35, 25.3, -11489.4]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_08_wp_02 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [341.6, 17.35, -11459.5]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_08_wp_03 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [232.75, 15.4, -11474.4]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_08_wp_04 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [127.3, 14.1, -11493.9]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_08_wp_05 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [97.25, 13.85, -11506.9]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_08_wp_06 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-126.85, 14.65, -11730.3]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_08_wp_07 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-189.5, 13.8, -11719.5]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_08_wp_08 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-238.7, 13.15, -11729.9]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_08_wp_09 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-283.85, 12.9, -11758.8]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_08_wp_10 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-311.55, 15.35, -11796.8]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_08_wp_11 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-330.9, 15.75, -11861.2]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_08_wp_12 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-512.05, 14.15, -11863.3]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_08_wp_13 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-762.55, 9.3, -12107.9]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_08_wp_14 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-845.7, 9.3, -12026.0]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_08_wp_15 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-801.35, 9.3, -11947.1]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_08_wp_16 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-733.8, 9.3, -11856.7]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_08_wp_17 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-627.2, 12.15, -11748.8]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_08_wp_18 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-321.3, 9.3, -11436.5]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_08_wp_19 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-198.65, 10.75, -11550.6]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_08_wp_20 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-187.0, 10.85, -11550.5]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_08_wp_21 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-178.6, 10.7, -11536.3]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_08_wp_22 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-176.9, 9.3, -11443.2]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_08_wp_23 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-161.75, 9.3, -11399.0]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_08_wp_24 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-123.55, 9.3, -11364.7]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_08_wp_25 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [291.95, 14.75, -11291.8]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_08_wp_26 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [427.1, 19.35, -11430.0]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_08_wp_27 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [456.7, 18.85, -11407.5]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_08_wp_28 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [564.1, 15.05, -11361.5]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_08_wp_29 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [671.75, 12.7, -11321.4]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_08_wp_30 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [754.55, 11.25, -11309.5]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_08_wp_31 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [817.75, 12.6, -11322.4]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_08_wp_32 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [865.75, 15.3, -11345.8]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_08_wp_33 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [926.65, 18.3, -11383.6]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_08_wp_34 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [1100.25, 30.0, -11392.2]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_08_wp_35 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [1115.05, 30.5, -11399.5]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_08_wp_36 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [786.85, 25.25, -11679.7]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_08_wp_37 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [709.35, 26.65, -11746.1]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_08_wp_38 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [673.3, 26.65, -11725.3]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_08_wp_39 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [612.65, 26.65, -11699.3]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_08_wp_40 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [575.4, 26.65, -11674.7]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
		}
	}
	infantry {
		name:t = "infantry_01"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [514.95, 26.65, -11946.3]]
		unit_class:t = "rifle_infantry"
		closed_waypoints:b = true
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			attack_type:t = "hold_fire"
			count:i = 10
			formation_type:t = "rows"
			formation_div:i = 3
			formation_step:p2 = 2.5, 2
			formation_noise:p2 = 0.1, 0.1
		}
		way {
			infantry_01_wp_01 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [501.7, 26.65, -11964.6]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			infantry_01_wp_02 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [395.35, 26.65, -12071.6]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			infantry_01_wp_03 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [343.1, 26.65, -12124.0]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			infantry_01_wp_04 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [266.7, 26.65, -12198.2]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			infantry_01_wp_05 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [271.1, 26.65, -12208.1]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
		}
	}
	infantry {
		name:t = "infantry_02"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [471.25, 26.6737, -11640.3]]
		unit_class:t = "rifle_infantry"
		closed_waypoints:b = true
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			attack_type:t = "hold_fire"
			count:i = 7
			formation_type:t = "rows"
			formation_div:i = 3
			formation_step:p2 = 2.5, 2
			formation_noise:p2 = 0.1, 0.1
		}
		way {
			infantry_02_wp_01 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [219.6, 26.65, -11806.8]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			infantry_02_wp_02 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [163.15, 26.65, -11827.8]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			infantry_02_wp_03 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [121.5, 26.65, -11818.2]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			infantry_02_wp_04 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [87.25, 26.65, -11812.7]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			infantry_02_wp_05 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [37.5, 26.65, -11833.4]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			infantry_02_wp_06 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-29.85, 26.65, -11899.3]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			infantry_02_wp_07 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-100.55, 26.65, -11977.4]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			infantry_02_wp_08 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-187.6, 26.65, -12065.9]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			infantry_02_wp_09 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-232.3, 26.65, -12063.4]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
		}
	}
	infantry {
		name:t = "infantry_03"
		tm:m = [[-0.67559, 0.0, 0.737277] [0.0, 1.0, 0.0] [-0.737277, 0.0, -0.67559] [388.1, 26.65, -11633.9]]
		unit_class:t = "rifle_infantry"
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			attack_type:t = "hold_fire"
			count:i = 5
			formation_type:t = "rows"
			formation_div:i = 3
			formation_step:p2 = 2.5, 2
			formation_noise:p2 = 0.1, 0.1
		}
		way {

		}
	}
	infantry {
		name:t = "infantry_04"
		tm:m = [[0.5, 0.0, -0.866025] [0.0, 1.0, 0.0] [0.866025, 0.0, 0.5] [-275.7, 28.0, -12223.0]]
		unit_class:t = "rifle_infantry"
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			attack_type:t = "hold_fire"
			count:i = 3
			formation_type:t = "rows"
			formation_div:i = 3
			formation_step:p2 = 2.5, 2
			formation_noise:p2 = 0.1, 0.1
		}
		way {

		}
	}
	wheeled_vehicles {
		name:t = "wheeled_vehicles_09"
		tm:m = [[0.737277, 0.0, -0.67559] [0.0, 1.0, 0.0] [0.67559, 0.0, 0.737277] [-234.55, 26.65, -12578.0]]
		unit_class:t = "us_cargo_truck"
		closed_waypoints:b = true
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 3
			formation_type:t = "cols"
			formation_div:i = 1
			formation_step:p2 = 5, 4
			formation_noise:p2 = 0.3, 0.4
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
		}
		way {
			wheeled_vehicles_09_wp_01 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-223.3, 26.65, -12589.7]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_09_wp_02 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-109.55, 26.65, -12581.5]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_09_wp_03 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [67.4, 26.65, -12564.9]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_09_wp_04 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [572.95, 26.65, -12504.5]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_09_wp_05 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [638.9, 26.65, -11832.1]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_09_wp_06 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [651.7, 26.65, -11732.5]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_09_wp_07 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [625.3, 26.65, -11704.8]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_09_wp_08 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [565.35, 26.65, -11667.3]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_09_wp_09 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [522.95, 26.65, -11628.7]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_09_wp_10 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [482.1, 26.65, -11592.1]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_09_wp_11 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [463.75, 26.65, -11575.0]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_09_wp_12 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [404.4, 26.65, -11580.4]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_09_wp_13 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [369.1, 26.65, -11592.0]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_09_wp_14 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [340.65, 26.65, -11627.9]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_09_wp_15 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [312.2, 26.65, -11659.9]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_09_wp_16 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [284.8, 26.65, -11710.1]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_09_wp_17 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [248.5, 26.65, -11755.0]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_09_wp_18 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [172.8, 26.65, -11784.7]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_09_wp_19 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [86.15, 26.65, -11796.9]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_09_wp_20 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [56.55, 26.65, -11815.0]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_09_wp_21 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-92.8, 26.65, -11966.1]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_09_wp_22 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-252.0, 26.65, -12125.8]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_09_wp_23 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-170.0, 26.65, -12200.9]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_09_wp_24 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-377.9, 26.65, -12420.5]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			wheeled_vehicles_09_wp_25 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-234.65, 26.65, -12579.0]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
		}
	}
	infantry {
		name:t = "infantry_05"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [98.8, 26.65, -11923.9]]
		unit_class:t = "rifle_infantry"
		closed_waypoints:b = true
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			attack_type:t = "hold_fire"
			count:i = 7
			formation_type:t = "rows"
			formation_div:i = 3
			formation_step:p2 = 2.5, 2
			formation_noise:p2 = 0.1, 0.1
		}
		way {
			infantry_05_wp_01 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [26.65, 26.65, -12016.1]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			infantry_05_wp_02 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-14.6, 26.65, -12059.7]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			infantry_05_wp_03 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-68.8501, 26.65, -12115.8]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			infantry_05_wp_04 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-115.1, 26.65, -12159.4]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			infantry_05_wp_06 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-219.65, 26.65, -12268.1]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			infantry_05_wp_05 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-261.75, 26.65, -12222.5]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			infantry_05_wp_07 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-224.75, 26.65, -12173.6]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			infantry_05_wp_08 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-174.8, 26.65, -12188.9]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			infantry_05_wp_09 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-138.45, 26.65, -12171.8]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			infantry_05_wp_10 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-110.4, 26.65, -12140.3]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			infantry_05_wp_11 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-132.15, 26.65, -12108.8]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			infantry_05_wp_12 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-135.6, 26.65, -12074.8]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			infantry_05_wp_13 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-112.95, 26.65, -12056.5]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			infantry_05_wp_14 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-90.3, 26.65, -12039.2]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			infantry_05_wp_15 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-64.5, 26.65, -12054.8]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			infantry_05_wp_16 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-38.25, 26.65, -12067.4]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			infantry_05_wp_17 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [-12.2, 26.65, -12049.0]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			infantry_05_wp_18 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [8.25, 26.65, -12033.9]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			infantry_05_wp_19 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [16.4, 26.65, -11995.1]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			infantry_05_wp_20 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [12.8, 26.65, -11978.2]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			infantry_05_wp_21 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [32.4, 26.65, -11985.3]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			infantry_05_wp_22 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [48.9, 26.65, -11977.0]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			infantry_05_wp_23 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [88.3, 26.65, -11937.7]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
		}
	}
	infantry {
		name:t = "infantry_06"
		tm:m = [[-0.608762, 0.0, -0.793353] [0.0, 1.0, 0.0] [0.793353, 0.0, -0.608762] [627.55, 26.65, -11767.7]]
		unit_class:t = "rifle_infantry"
		closed_waypoints:b = true
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			attack_type:t = "hold_fire"
			count:i = 4
			formation_type:t = "rows"
			formation_div:i = 3
			formation_step:p2 = 2.5, 2
			formation_noise:p2 = 0.1, 0.1
		}
		way {
			infantry_06_wp_01 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [598.35, 26.65, -11723.8]]
				props {
					speed:r = 300
					moveType:t = "HALT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
			infantry_06_wp_02 {
				type:t = "normal"
				tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [654.85, 26.65, -11691.4]]
				props {
					speed:r = 300
					moveType:t = "MOVETO_STRAIGHT"
					tas:b = false
					shouldKeepFormation:b = false
					canUsePathFinder:b = false
				}
			}
		}
	}
}
areas {
	airfield00 {
		type:t = "Sphere"
		tm:m = [[137.2, 0.0, 0.0] [0.0, 137.2, 0.0] [0.0, 0.0, 137.2] [480.05, 23.95, -11745.3]]
		props {
			forceReplication:b = true
		}
	}
	airfield01 {
		type:t = "Sphere"
		tm:m = [[137.2, 0.0, 0.0] [0.0, 137.2, 0.0] [0.0, 0.0, 137.2] [-267.75, 23.95, -12493.5]]
		props {
			forceReplication:b = true
		}
	}
	spawnpoint00 {
		type:t = "Sphere"
		tm:m = [[41.5, 0.0, 0.0] [0.0, 41.5, 0.0] [0.0, 0.0, 41.5] [517.55, 23.95, -11705.7]]
		props {
			forceReplication:b = true
		}
	}
	spawnpoint01 {
		type:t = "Sphere"
		tm:m = [[41.5, 0.0, 0.0] [0.0, 41.5, 0.0] [0.0, 0.0, 41.5] [449.25, 23.95, -11775.5]]
		props {
			forceReplication:b = true
		}
	}
	instructor_way00 {
		type:t = "Sphere"
		tm:m = [[600.0, 0.0, 0.0] [0.0, 600.0, 0.0] [0.0, 0.0, 600.0] [-1554.8, 422.7, -13786.1]]
		props {
			forceReplication:b = true
		}
	}
	airfield_area {
		type:t = "Box"
		tm:m = [[1050.85, 1.71301e-12, 1050.85] [7.72101e-14, 34.05, -1.32716e-13] [-206.294, 5.49317e-6, 206.294] [92.3, 6.1, -12135.7]]
		props {
			forceReplication:b = true
		}
	}
	levelAircraft_hint {
		type:t = "Box"
		tm:m = [[656.435, 0.0, -601.512] [0.0, 34.255, 0.0] [139.2, 0.0, 151.91] [344.55, 12.05, -11820.4]]
		props {
			forceReplication:b = true
		}
	}
	instructor_way01 {
		type:t = "Sphere"
		tm:m = [[600.0, 0.0, 0.0] [0.0, 600.0, 0.0] [0.0, 0.0, 600.0] [-2071.75, 839.05, -14258.7]]
		props {
			forceReplication:b = true
		}
	}
	way01 {
		type:t = "Sphere"
		tm:m = [[600.0, 0.0, 0.0] [0.0, 600.0, 0.0] [0.0, 0.0, 600.0] [385.1, 1302.6, -14336.7]]
		props {
			forceReplication:b = true
		}
	}
	way02 {
		type:t = "Sphere"
		tm:m = [[600.0, 0.0, 0.0] [0.0, 600.0, 0.0] [0.0, 0.0, 600.0] [2177.5, 806.8, -14887.9]]
		props {
			forceReplication:b = true
		}
	}
	way03 {
		type:t = "Sphere"
		tm:m = [[600.0, 0.0, 0.0] [0.0, 600.0, 0.0] [0.0, 0.0, 600.0] [3529.8, 206.75, -12933.2]]
		props {
			forceReplication:b = true
		}
	}
	way04 {
		type:t = "Sphere"
		tm:m = [[600.0, 0.0, 0.0] [0.0, 600.0, 0.0] [0.0, 0.0, 600.0] [1246.2, 777.7, -11506.6]]
		props {
			forceReplication:b = true
		}
	}
	way05 {
		type:t = "Sphere"
		tm:m = [[600.0, 0.0, 0.0] [0.0, 600.0, 0.0] [0.0, 0.0, 600.0] [-2556.45, 100.0, -14782.1]]
		props {
			forceReplication:b = true
		}
	}
	instructor_way02 {
		type:t = "Sphere"
		tm:m = [[600.0, 0.0, 0.0] [0.0, 600.0, 0.0] [0.0, 0.0, 600.0] [-567.25, 203.8, -12750.8]]
		props {
			forceReplication:b = true
		}
	}
	way06 {
		type:t = "Sphere"
		tm:m = [[600.0, 0.0, 0.0] [0.0, 600.0, 0.0] [0.0, 0.0, 600.0] [-1029.71, 1302.6, -14130.8]]
		props {
			forceReplication:b = true
		}
	}
	briefing_area {
		type:t = "Box"
		tm:m = [[7500.0, 0.0, 0.0] [0.0, 1500.0, 0.0] [0.0, 0.0, 7500.0] [111.438, 20.001, -12108.7]]
		objLayer:i = 3
		props {

		}
	}
}
objLayers {
	layer {
		enabled:b = true
	}
	layer {
		enabled:b = true
	}
	layer {
		enabled:b = true
	}
	layer {
		enabled:b = true
	}
	layer {
		enabled:b = false
	}
}
wayPoints {

}