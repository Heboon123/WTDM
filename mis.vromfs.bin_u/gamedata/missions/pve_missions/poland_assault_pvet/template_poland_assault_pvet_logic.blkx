selected_tag:t = ""
bin_dump_file:t = ""
mission_settings {
	player {
		army:i = 1
	}
	player_teamB {
		army:i = 2
	}
	mission {
		type:t = "singleMission"
		level:t = "levels/water.bin"
		environment:t = "Day"
		weather:t = "hazy"
	}
}
imports {
	import_record {
		file:t = "gameData/missions/pve_missions/poland_assault_pvet/template_poland_assault_pvet_areas.blk"
		importAreas:b = true
		importUnits:b = true
		importTriggers:b = true
		importMissionObjectives:b = true
		importWayPoints:b = true
		showAreas:b = true
		showUnits:b = true
		showTriggers:b = true
		showMissionObjectives:b = true
		showWayPoints:b = true
		excludes {

		}
	}
	import_record {
		file:t = "gameData/missions/pve_missions/poland_assault_pvet/template_poland_assault_pvet_units.blk"
		importAreas:b = true
		importUnits:b = true
		importTriggers:b = true
		importMissionObjectives:b = true
		importWayPoints:b = true
		showAreas:b = true
		showUnits:b = true
		showTriggers:b = true
		showMissionObjectives:b = true
		showWayPoints:b = true
		excludes {

		}
	}
}
triggers {
	isCategory:b = true
	is_enabled:b = true
	mission_init {
		is_enabled:b = true
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {

		}
		actions {
			missionMarkAsRespawnPoint {
				loc_name:t = ""
				spawnEffect:b = false
				isStrictSpawn:b = false
				resetStrictSpawnIndex:b = false
				isAirfield:b = false
				isUnit:b = false
				forceCreate:b = false
				useExisting:b = false
				isIndividual:b = true
				onlyOnePlayerPerSpawnPoint:b = false
				removeAreas:b = false
				replaceAreas:b = false
				canSpawnOnNeutral:b = false
				showOnMap:b = false
				radius:r = -1
				target:t = "respawn_pl_stage1"
				team:t = "A"
				tags {
					tank:b = true
				}
			}
			missionMarkAsCaptureZone {
				army:i = 2
				timeMultiplier:r = 1
				disableZone:b = false
				name_for_respawn_base:t = ""
				showBorderOnMap:b = false
				borderWidthCoef:r = 1
				borderTransparencyCoef:r = 1
				target:t = "stage1_capzone"
				playAirfieldSound:b = false
				canCaptureByGM:b = true
				captureNoPenalty:b = true
				markUnitPreset:t = "tank_decal"
				zoneDefenders {

				}
			}
			missionBattleArea {
				air:b = false
				ground:b = true
				mapArea:b = true
				airMapArea:b = false
				killArea:b = false
				detectionArea:b = false
				killOutOfBattleArea:b = true
				area:t = "battlearea_stage1"
				newGridHorizontalCellCount:i = 0
			}
			varSetInt {
				value:i = 12
				var:t = "stage1_n_atguns"
				fromDescriptor:t = "stage1_n_atguns"
			}
			varSetInt {
				value:i = 4
				var:t = "stage1_n_tanks"
				fromDescriptor:t = "stage1_n_tanks"
			}
			varSetInt {
				value:i = 12
				var:t = "stage2_n_tanks"
				fromDescriptor:t = "stage2_n_tanks"
			}
			varSetInt {
				value:i = 12
				var:t = "stage3_n_waves"
				fromDescriptor:t = "stage3_n_waves"
			}
			varSetInt {
				value:i = 7
				var:t = "stage3_wave_interval"
				fromDescriptor:t = "stage3_wave_interval"
			}
			triggerEnable {
				target:t = "init__player_spawned"
				target:t = "init__disable_controls"
			}
		}
		else_actions {

		}
	}
	init__disable_controls {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {

		}
		actions {
			unitSetProperties {
				object_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				object:t = "player_sq"
				cannotShoot:b = true
				cannotMove:b = true
			}
		}
		else_actions {

		}
	}
	init__player_spawned {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			unitWhenStatus {
				object_type:t = "isActive"
				check_objects:t = "any"
				object_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				target_type:t = "isAlive"
				check_period:r = 1
				object:t = "player_01"
				force_check_delayed:b = true
			}
		}
		actions {
			triggerEnable {
				target:t = "init__waiting_players"
			}
		}
		else_actions {

		}
	}
	init__waiting_players {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			unitWhenStatus {
				object_type:t = "isActive"
				check_objects:t = "any"
				object_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				target_type:t = "isAlive"
				check_period:r = 1
				object:t = "player_04"
				force_check_delayed:b = true
			}
			varCompareInt {
				var_value:t = "mis_init_spwn_timer_1"
				value:i = 0
				comparasion_func:t = "notMore"
			}
		}
		actions {
			triggerEnable {
				target:t = "init__ready_timer"
			}
			triggerDisable {
				target:t = "init__waiting_players"
			}
		}
		else_actions {
			playHint {
				hintType:t = "standard"
				name:t = "hints/duel_waiting_for_players"
				action:t = "show"
				shouldFadeOut:b = false
				isOverFade:b = false
				time:r = -1
				priority:i = 0
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				var_name:t = "mis_init_spwn_timer_1"
			}
			varModify {
				operator:t = "add"
				value:r = -1
				var:t = "mis_init_spwn_timer_1"
			}
		}
	}
	init__ready_timer {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "mis_init_spwn_timer_2"
				value:i = 0
				comparasion_func:t = "notMore"
			}
		}
		actions {
			playHint {
				hintType:t = "standard"
				name:t = ""
				action:t = "show"
				shouldFadeOut:b = false
				isOverFade:b = false
				time:r = 1
				priority:i = 0
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
			}
			triggerEnable {
				target:t = "stage1__init"
			}
			triggerDisable {
				target:t = "init__ready_timer"
				target:t = "init__disable_controls"
			}
		}
		else_actions {
			playHint {
				hintType:t = "standard"
				name:t = "hints/mission_starts_in"
				action:t = "show"
				shouldFadeOut:b = false
				isOverFade:b = false
				time:r = -1
				priority:i = 0
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				var_name:t = "mis_init_spwn_timer_2"
			}
			varModify {
				operator:t = "add"
				value:r = -1
				var:t = "mis_init_spwn_timer_2"
			}
		}
	}
	stage1__init {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0
			}
		}
		conditions {

		}
		actions {
			unitSetProperties {
				object_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				object:t = "player_sq"
				cannotShoot:b = false
				cannotMove:b = false
			}
			unitSetProperties {
				object_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				object:t = "at_gun_stage1_sq"
				object:t = "ai_tank_stage1_sq"
				object:t = "ai_tank_stage2_sq"
				object:t = "ai_atgun_stage2_sq"
				object:t = "ai_tank_mov_stage2_sq"
				object:t = "ai_tank_stage3_sq"
				detectableFromCameraPos:b = true
				accuracy:r = 0.66
				maxDeviationAngle:r = 5
				adaptiveAccuracyTime:r = 0.01
				moveSpeedKAtShooting:r = 0
			}
			unitSetProperties {
				object_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				object:t = "at_gun_stage1_sq"
				object:t = "ai_tank_stage1_sq"
				attack_type:t = "fire_at_will"
				accuracy:r = 0.7
				maxDeviationAngle:r = 5
				checkVisibilityTarget:b = true
				visibilityTreeTransparencyThreshold:r = 0.033
			}
			unitWakeUp {
				target:t = "at_gun_stage1_sq"
				varNameNumToWakeUp:t = "stage1_n_atguns"
				order:t = "random"
			}
			unitWakeUp {
				target:t = "ai_tank_stage1_sq"
				varNameNumToWakeUp:t = "stage1_n_tanks"
				order:t = "random"
			}
			triggerEnable {
				target:t = "stage1__update_indicator"
				target:t = "stage1__add_objective"
				target:t = "stage1__check_cap_zone"
			}
		}
		else_actions {

		}
	}
	stage1__add_objective {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			timeExpires {
				time:r = 1
			}
		}
		conditions {

		}
		actions {
			moAddMissionObjective {
				target:t = "assault_pvet_stage1_capture"
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
			}
			missionSetTargetsIndicator {
				target_type:t = "isActive"
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				delta:i = 0
				icon:t = "tank"
				"icon army":i = 2
				set:b = true
				target:t = "at_gun_stage1_sq"
				target:t = "ai_tank_stage1_sq"
			}
		}
		else_actions {

		}
	}
	stage1__update_indicator {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			unitWhenAnyLess {
				object_type:t = "isAlive"
				object:t = "at_gun_stage1_sq"
				object:t = "ai_tank_stage1_sq"
			}
		}
		actions {
			missionSetTargetsIndicator {
				target_type:t = "isActive"
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				delta:i = 0
				icon:t = "tank"
				"icon army":i = 2
				set:b = true
				target:t = "at_gun_stage1_sq"
				target:t = "ai_tank_stage1_sq"
			}
		}
		else_actions {

		}
	}
	stage1__check_cap_zone {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			missionIsZoneCaptured {
				target:t = "stage1_capzone"
				army:i = 1
			}
		}
		actions {
			triggerEnable {
				target:t = "stage1__complete"
			}
		}
		else_actions {

		}
	}
	stage1__complete {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {

		}
		actions {
			missionMarkAsCaptureZone {
				army:i = 1
				timeMultiplier:r = 1
				disableZone:b = true
				name_for_respawn_base:t = ""
				showBorderOnMap:b = false
				borderWidthCoef:r = 1
				borderTransparencyCoef:r = 1
				target:t = "stage1_capzone"
				playAirfieldSound:b = false
				canCaptureByGM:b = true
				captureNoPenalty:b = true
				zoneDefenders {

				}
			}
			moSetObjectiveStatus {
				target:t = "assault_pvet_stage1_capture"
				status:i = 2
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
			}
			missionMarkAsRearmZone {
				army:i = 1
				area_name:t = "stage1_capzone"
				enabled:b = true
				restoreWhenNoAmmoLeft:b = false
				hideMarkers:b = true
				repair_tags {
					none_can_spawn:b = true
				}
			}
			triggerDisable {
				target:t = "stage1__update_indicator"
			}
			wait {
				time:r = 4
			}
			triggerEnable {
				target:t = "stage2__init"
			}
		}
		else_actions {

		}
	}
	stage2__init {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {

		}
		actions {
			moAddMissionObjective {
				target:t = "assault_pvet_stage2_eliminate"
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
			}
			missionMarkAsRespawnPoint {
				loc_name:t = ""
				spawnEffect:b = false
				isStrictSpawn:b = false
				resetStrictSpawnIndex:b = false
				isAirfield:b = false
				isUnit:b = false
				forceCreate:b = false
				useExisting:b = false
				isIndividual:b = true
				onlyOnePlayerPerSpawnPoint:b = false
				removeAreas:b = false
				replaceAreas:b = false
				canSpawnOnNeutral:b = false
				showOnMap:b = false
				radius:r = -1
				target:t = "respawn_pl_stage1"
				team:t = "A"
				disableAfter:i = 0
				tags {
					tank:b = true
				}
			}
			missionMarkAsRespawnPoint {
				loc_name:t = ""
				spawnEffect:b = false
				isStrictSpawn:b = false
				resetStrictSpawnIndex:b = false
				isAirfield:b = false
				isUnit:b = false
				forceCreate:b = false
				useExisting:b = false
				isIndividual:b = true
				onlyOnePlayerPerSpawnPoint:b = false
				removeAreas:b = false
				replaceAreas:b = false
				canSpawnOnNeutral:b = false
				showOnMap:b = false
				radius:r = -1
				target:t = "respawn_pl_stage2"
				team:t = "A"
				tags {
					tank:b = true
				}
			}
			missionBattleArea {
				air:b = false
				ground:b = true
				mapArea:b = true
				airMapArea:b = false
				killArea:b = false
				detectionArea:b = false
				killOutOfBattleArea:b = true
				area:t = "battlearea_stage2"
			}
			unitSetProperties {
				object_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				object:t = "ai_tank_stage2_sq"
				object:t = "ai_tank_mov_stage2_sq"
				object:t = "ai_atgun_stage2_sq"
				checkVisibilityTarget:b = true
				visibilityTreeTransparencyThreshold:r = 1
			}
			unitSetProperties {
				object_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				object:t = "ai_tank_stage2_sq"
				object:t = "ai_atgun_stage2_sq"
				accuracy:r = 0.8
			}
			unitWakeUp {
				target:t = "ai_tank_stage2_sq"
				varNameNumToWakeUp:t = "stage2_n_tanks"
				order:t = "random"
			}
			unitWakeUp {
				target:t = "ai_tank_mov_stage2_sq"
				target:t = "ai_atgun_stage2_sq"
			}
			missionSetTargetsIndicator {
				target_type:t = "isActive"
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				delta:i = 0
				icon:t = "tank"
				"icon army":i = 2
				set:b = true
				target:t = "ai_tank_stage2_sq"
				target:t = "ai_tank_mov_stage2_sq"
				target:t = "ai_atgun_stage2_sq"
			}
			triggerEnable {
				target:t = "stage2__check_tanks"
				target:t = "stage2__update_indicator"
				target:t = "stage2__waypoint_reached"
				target:t = "stage2__bttl_01_disable"
			}
			missionMarkAsWaypoint {
				visible:b = true
				primary:b = true
				oriented:b = false
				ignoreDifficulty:b = false
				scale:r = 0.1
				target:t = "stage2_eliminate"
			}
		}
		else_actions {

		}
	}
	stage2__bttl_01_disable {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {

		}
		actions {
			wait {
				time:r = 15
			}
			missionBattleArea {
				air:b = false
				ground:b = false
				mapArea:b = false
				airMapArea:b = false
				killArea:b = false
				detectionArea:b = false
				killOutOfBattleArea:b = false
				area:t = "battlearea_stage1"
			}
		}
		else_actions {

		}
	}
	stage2__waypoint_reached {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			unitWhenInArea {
				math:t = "3D"
				object_type:t = "isAlive"
				object_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				check_objects:t = "any"
				object:t = "player_sq"
				target:t = "stage2_eliminate"
			}
		}
		actions {
			missionMarkAsWaypoint {
				visible:b = false
				primary:b = true
				oriented:b = false
				ignoreDifficulty:b = false
				scale:r = 1
				target:t = "stage2_eliminate"
			}
			unitPutToSleep {
				target:t = "at_gun_stage1_sq"
				target:t = "ai_tank_stage1_sq"
			}
		}
		else_actions {

		}
	}
	stage2__check_tanks {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			unitWhenCountMatches {
				object_type:t = "isActive"
				object_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				func:t = "equal"
				value:i = 0
				object:t = "ai_tank_stage2_sq"
				object:t = "ai_tank_mov_stage2_sq"
				object:t = "ai_atgun_stage2_sq"
			}
		}
		actions {
			triggerEnable {
				target:t = "stage2__complete"
			}
		}
		else_actions {

		}
	}
	stage2__update_indicator {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			unitWhenAnyLess {
				object_type:t = "isAlive"
				object:t = "ai_tank_stage2_sq"
				object:t = "ai_tank_mov_stage2_sq"
				object:t = "ai_atgun_stage2_sq"
			}
		}
		actions {
			missionSetTargetsIndicator {
				target_type:t = "isActive"
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				delta:i = 0
				icon:t = "tank"
				"icon army":i = 2
				set:b = true
				target:t = "ai_tank_stage2_sq"
				target:t = "ai_tank_mov_stage2_sq"
				target:t = "ai_atgun_stage2_sq"
			}
			missionMarkAsWaypoint {
				visible:b = false
				primary:b = true
				oriented:b = false
				ignoreDifficulty:b = false
				scale:r = 1
				target:t = "stage2_eliminate"
			}
		}
		else_actions {

		}
	}
	stage2__complete {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {

		}
		actions {
			missionSetTargetsIndicator {
				target_type:t = "isAlive"
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				delta:i = 0
				icon:t = "tank"
				"icon army":i = 2
				set:b = false
				target:t = "ai_tank_stage2_sq"
				target:t = "ai_tank_mov_stage2_sq"
			}
			triggerDisable {
				target:t = "stage2__update_indicator"
			}
			missionMarkAsRearmZone {
				army:i = 1
				area_name:t = "stage3_defend"
				enabled:b = true
				restoreWhenNoAmmoLeft:b = false
				hideMarkers:b = true
				repair_tags {
					none_can_spawn:b = true
				}
			}
			moSetObjectiveStatus {
				target:t = "assault_pvet_stage2_eliminate"
				status:i = 2
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
			}
			wait {
				time:r = 4
			}
			triggerEnable {
				target:t = "stage3__init"
			}
		}
		else_actions {

		}
	}
	stage3__init {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {

		}
		actions {
			moAddMissionObjective {
				target:t = "assault_pvet_stage3_defend"
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
			}
			missionMarkAsRespawnPoint {
				loc_name:t = ""
				spawnEffect:b = false
				isStrictSpawn:b = false
				resetStrictSpawnIndex:b = false
				isAirfield:b = false
				isUnit:b = false
				forceCreate:b = false
				useExisting:b = false
				isIndividual:b = true
				onlyOnePlayerPerSpawnPoint:b = false
				removeAreas:b = false
				replaceAreas:b = false
				canSpawnOnNeutral:b = false
				showOnMap:b = false
				radius:r = -1
				target:t = "respawn_pl_stage2"
				team:t = "A"
				disableAfter:i = 0
				tags {
					tank:b = true
				}
			}
			missionMarkAsRespawnPoint {
				loc_name:t = ""
				spawnEffect:b = false
				isStrictSpawn:b = false
				resetStrictSpawnIndex:b = false
				isAirfield:b = false
				isUnit:b = false
				forceCreate:b = false
				useExisting:b = false
				isIndividual:b = true
				onlyOnePlayerPerSpawnPoint:b = false
				removeAreas:b = false
				replaceAreas:b = false
				canSpawnOnNeutral:b = false
				showOnMap:b = false
				radius:r = -1
				target:t = "respawn_pl_stage3"
				team:t = "A"
				tags {
					tank:b = true
				}
			}
			missionBattleArea {
				air:b = false
				ground:b = true
				mapArea:b = true
				airMapArea:b = false
				killArea:b = false
				detectionArea:b = false
				killOutOfBattleArea:b = true
				area:t = "battlearea_stage3"
			}
			missionMarkAsCaptureZone {
				army:i = 1
				timeMultiplier:r = 1
				disableZone:b = false
				name_for_respawn_base:t = ""
				showBorderOnMap:b = false
				borderWidthCoef:r = 1
				borderTransparencyCoef:r = 1
				target:t = "stage3_defend"
				playAirfieldSound:b = false
				canCaptureByGM:b = true
				captureNoPenalty:b = true
				zoneDefenders {

				}
				capture_tags {
					country_ussr:b = true
				}
			}
			unitSetProperties {
				object_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				object:t = "ai_tank_stage3_sq"
				accuracy:r = 0.75
			}
			triggerEnable {
				target:t = "stage3__start_defence"
				target:t = "stage3__last_wave_indicator"
				target:t = "stage3__check_fail"
				target:t = "stage3__map_lines"
				target:t = "stage3__bttl_02_disable"
			}
		}
		else_actions {

		}
	}
	stage3__bttl_02_disable {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {

		}
		actions {
			wait {
				time:r = 15
			}
			missionBattleArea {
				air:b = false
				ground:b = false
				mapArea:b = false
				airMapArea:b = false
				killArea:b = false
				detectionArea:b = false
				killOutOfBattleArea:b = false
				area:t = "battlearea_stage2"
			}
		}
		else_actions {

		}
	}
	stage3__map_lines {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "stage3_take_pos_timer"
				value:i = 0
				comparasion_func:t = "more"
			}
		}
		actions {
			missionShowMapLine {
				areaNameFrom:t = "advance_icon_1 "
				areaNameTo:t = "advance_icon_1_end"
				colorCode:t = "Enemy"
				scale:r = 0.2
				arrow:b = true
			}
			missionShowMapLine {
				areaNameFrom:t = "advance_icon_2"
				areaNameTo:t = "advance_icon_2_end"
				colorCode:t = "Enemy"
				scale:r = 0.2
				arrow:b = true
			}
			missionShowMapLine {
				areaNameFrom:t = "advance_icon_3"
				areaNameTo:t = "advance_icon_3_end"
				colorCode:t = "Enemy"
				scale:r = 0.2
				arrow:b = true
			}
		}
		else_actions {
			missionShowMapLine {
				areaNameFrom:t = "advance_icon_1 "
				areaNameTo:t = "advance_icon_1_end"
				scale:r = 0.2
				arrow:b = true
				clear:b = true
			}
			missionShowMapLine {
				areaNameFrom:t = "advance_icon_2"
				areaNameTo:t = "advance_icon_2_end"
				scale:r = 0.2
				arrow:b = true
				clear:b = true
			}
			missionShowMapLine {
				areaNameFrom:t = "advance_icon_3"
				areaNameTo:t = "advance_icon_3_end"
				scale:r = 0.2
				arrow:b = true
				clear:b = true
			}
		}
	}
	stage3__start_defence {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "stage3_take_pos_timer"
				value:i = 0
				comparasion_func:t = "notMore"
			}
		}
		actions {
			triggerEnable {
				target:t = "stage3__waves_spawn"
				target:t = "stage3__map_lines"
			}
			unitPutToSleep {
				target:t = "ai_tank_mov_stage2_sq"
				target:t = "ai_tank_stage2_sq"
				target:t = "ai_atgun_stage2_sq"
			}
			missionSetTimeIndicator {
				var:t = "stage3_take_pos_timer"
			}
			triggerDisable {
				target:t = "stage3__start_defence"
			}
		}
		else_actions {
			missionSetTimeIndicator {
				var:t = "stage3_take_pos_timer"
			}
			varModify {
				operator:t = "add"
				value:r = -1
				var:t = "stage3_take_pos_timer"
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/take_defensive_positions"
				action:t = "show"
				shouldFadeOut:b = false
				isOverFade:b = false
				time:r = 1
				priority:i = 0
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				var_name:t = "stage3_take_pos_timer"
			}
		}
	}
	stage3__waves_spawn {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			unitWhenStatus {
				object_type:t = "isInactive"
				check_objects:t = "any"
				object_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				target_type:t = "isAlive"
				check_period:r = 1
				object:t = "ai_tank_stage3_sq"
				force_check_delayed:b = true
			}
			varCompareInt {
				var_value:t = "stage3_wv_intrvl"
				value:i = 0
				comparasion_func:t = "notMore"
			}
		}
		actions {
			varSetInt {
				value:i = 0
				var:t = "stage3_wv_intrvl"
				input_var:t = "stage3_wave_interval"
			}
			varSetRandomInt {
				var:t = "stage3_rnd_dir"
				from:i = 1
				to_not_including:i = 4
			}
			varSetString {
				value:t = "stage3_direction_"
				var:t = "stage3_direction"
			}
			varAddString {
				value:t = ""
				digits:i = 2
				var:t = "stage3_direction"
				input_var:t = "stage3_rnd_dir"
			}
			unitMoveTo {
				object_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				target:t = "@stage3_direction"
				target_marking:i = 0
				waypointReachedDist:r = 10
				recalculatePathDist:r = -1
				follow_target:b = false
				fastClimb:b = false
				destTimeMode:b = false
				teleportHeightType:t = "absolute"
				useUnitHeightForTele:b = true
				shouldKeepFormation:b = false
				teleportHeightValue:r = 1000
				horizontalDirectionForTeleport:b = true
				object:t = "ai_tank_stage3_sq"
				move_type:t = "teleport"
				useForTriggerFiltered:b = true
			}
			varSetString {
				value:t = "way_points_"
				var:t = "stage3_direction"
			}
			varAddString {
				value:t = ""
				digits:i = 2
				var:t = "stage3_direction"
				input_var:t = "stage3_rnd_dir"
			}
			unitSetRoute {
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				route:t = "@stage3_direction"
				teleportToStart:b = true
				object:t = "ai_tank_stage3_sq"
				useForTriggerFiltered:b = true
			}
			varModify {
				operator:t = "add"
				value:r = 1
				var:t = "stage3_wakedup"
			}
			unitWakeUp {
				target:t = "ai_tank_stage3_sq"
				varNameNumToWakeUp:t = "stage3_wakedup"
			}
			unitSetIndication {
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				set:b = true
				target:t = "ai_tank_stage3_sq"
			}
		}
		else_actions {
			varModify {
				operator:t = "add"
				value:r = -1
				var:t = "stage3_wv_intrvl"
			}
		}
	}
	stage3__last_wave_indicator {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "stage3_wakedup"
				value:i = 0
				comparasion_func:t = "equal"
				var_value_other:t = "stage3_n_waves"
			}
		}
		actions {
			missionSetTargetsIndicator {
				target_type:t = "isActive"
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				delta:i = 0
				icon:t = "tank"
				"icon army":i = 2
				set:b = true
				target:t = "ai_tank_stage3_sq"
			}
			triggerDisable {
				target:t = "stage3__waves_spawn"
			}
			triggerEnable {
				target:t = "stage3__objective_check"
				target:t = "stage3__update_indicator"
			}
		}
		else_actions {

		}
	}
	stage3__update_indicator {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			unitWhenAnyLess {
				object_type:t = "isActive"
				object:t = "ai_tank_stage3_sq"
			}
		}
		actions {
			missionSetTargetsIndicator {
				target_type:t = "isActive"
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				delta:i = 0
				icon:t = "tank"
				"icon army":i = 2
				set:b = true
				target:t = "ai_tank_stage3_sq"
			}
		}
		else_actions {

		}
	}
	stage3__check_fail {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			missionIsZoneCaptured {
				target:t = "stage3_defend"
				army:i = 2
			}
		}
		actions {
			gameMPChangeScore {
				value:i = -200
				valueSystem:t = "percentage"
				team:t = "A"
			}
			triggerDisable {
				target:t = "stage3__objective_check"
			}
		}
		else_actions {

		}
	}
	stage3__objective_check {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			unitWhenCountMatches {
				object_type:t = "isActive"
				object_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				func:t = "equal"
				value:i = 0
				object:t = "ai_tank_stage3_sq"
			}
		}
		actions {
			triggerEnable {
				target:t = "stage3__complete"
			}
		}
		else_actions {

		}
	}
	stage3__complete {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {

		}
		actions {
			wait {
				time:r = 4
			}
			gameMPChangeScore {
				value:i = -200
				valueSystem:t = "percentage"
				team:t = "B"
			}
		}
		else_actions {

		}
	}
	Random_spawn {
		isCategory:b = true
		is_enabled:b = true
		Iterator {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = true
			}
			events {
				periodicEvent {
					time:r = 0
				}
			}
			conditions {
				varCompareBool {
					var_value:t = "iterator_go"
					value:b = true
					comparasion_func:t = "equal"
				}
			}
			actions {
				playHint {
					hintType:t = "standard"
					name:t = "RANDOM_SPAWN_STARTED"
					action:t = "show"
					shouldFadeOut:b = false
					isOverFade:b = false
					time:r = -1
					priority:i = 0
					target_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object_var_value:i = 0
				}
				varSetBool {
					value:b = false
					var:t = "iterator_go"
				}
				varModify {
					operator:t = "add"
					value:r = 1
					var:t = "iterator"
				}
				varSetString {
					value:t = ""
					var:t = "string_container"
					input_var:t = "rnd_spwn_name"
				}
				varAddString {
					value:t = ""
					digits:i = 0
					var:t = "string_container"
					input_var:t = "iterator"
				}
				varSetRandomInt {
					var:t = "random_positioning"
					from:i = 0
					to_not_including:i = 0
					var_to_not_including:t = "p_total"
				}
				varModify {
					operator:t = "add"
					value:r = 1
					var:t = "random_positioning"
				}
				varSetString {
					value:t = "p"
					var:t = "var_p_i1"
				}
				varAddString {
					value:t = ""
					digits:i = 0
					var:t = "var_p_i1"
					input_var:t = "random_positioning"
				}
				varSetString {
					value:t = "pos_s2_"
					var:t = "string_position"
				}
				varAddString {
					value:t = ""
					digits:i = 0
					var:t = "string_position"
					input_var:t = "@var_p_i1"
				}
				unitMoveTo {
					object_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object_var_value:i = 0
					target:t = "@string_position"
					target_marking:i = 0
					waypointReachedDist:r = 10
					recalculatePathDist:r = -1
					follow_target:b = false
					fastClimb:b = false
					destTimeMode:b = false
					teleportHeightType:t = "absolute"
					useUnitHeightForTele:b = true
					shouldKeepFormation:b = false
					teleportHeightValue:r = 1000
					horizontalDirectionForTeleport:b = true
					object:t = "@string_container"
					move_type:t = "teleport"
				}
				varSetInt {
					value:i = 0
					var:t = "i1"
					input_var:t = "random_positioning"
				}
				playHint {
					hintType:t = "standard"
					name:t = "@string_container"
					action:t = "show"
					shouldFadeOut:b = false
					isOverFade:b = false
					time:r = -1
					priority:i = 0
					target_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object_var_value:i = 0
				}
				wait {
					time:r = 0.25
				}
				playHint {
					hintType:t = "standard"
					name:t = "@string_position"
					action:t = "show"
					shouldFadeOut:b = false
					isOverFade:b = false
					time:r = -1
					priority:i = 0
					target_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object_var_value:i = 0
				}
				wait {
					time:r = 0.25
				}
				triggerEnable {
					target:t = "ExcludeP"
				}
			}
			else_actions {

			}
		}
		ExcludeP {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = true
			}
			events {
				periodicEvent {
					time:r = 0
				}
			}
			conditions {
				varCompareInt {
					var_value:t = "i1"
					value:i = 0
					comparasion_func:t = "less"
					var_value_other:t = "p_total"
				}
			}
			actions {
				varModify {
					operator:t = "divAB"
					value:r = 0
					var:t = "i1n"
					use_variable:b = true
					var_value:t = "i1n"
				}
				varModify {
					operator:t = "add"
					value:r = 0
					var:t = "i1n"
					use_variable:b = true
					var_value:t = "i1"
				}
				varSetString {
					value:t = "p"
					var:t = "var_p_i1"
					var:t = "var_p_i1n"
				}
				varAddString {
					value:t = ""
					digits:i = 0
					var:t = "var_p_i1"
					input_var:t = "i1"
				}
				varAddString {
					value:t = ""
					digits:i = 0
					var:t = "var_p_i1n"
					input_var:t = "i1n"
				}
				varSetInt {
					value:i = 0
					var:t = "@var_p_i1"
					input_var:t = "@var_p_i1n"
				}
				varModify {
					operator:t = "add"
					value:r = 1
					var:t = "i1"
				}
			}
			else_actions {
				triggerEnable {
					target:t = "ExcludeP_disable"
				}
			}
		}
		ExcludeP_disable {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 0
				}
			}
			conditions {

			}
			actions {
				varModify {
					operator:t = "add"
					value:r = -1
					var:t = "p_total"
				}
				triggerDisable {
					target:t = "ExcludeP"
				}
				triggerEnable {
					target:t = "Iterator_iterate_or_disable"
				}
			}
			else_actions {

			}
		}
		Iterator_iterate_or_disable {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 0
				}
			}
			conditions {
				varCompareInt {
					var_value:t = "iterator"
					value:i = 0
					comparasion_func:t = "less"
					var_value_other:t = "tanks_stage2_total"
				}
			}
			actions {
				varSetBool {
					value:b = true
					var:t = "iterator_go"
				}
			}
			else_actions {
				triggerDisable {
					target:t = "Iterator"
				}
				playHint {
					hintType:t = "standard"
					name:t = "RANDOM_SPAWN_FINISHED"
					action:t = "show"
					shouldFadeOut:b = false
					isOverFade:b = false
					time:r = 3
					priority:i = 0
					target_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object_var_value:i = 0
				}
				unitWakeUp {
					target:t = "ai_tank_stage2_sq"
					numToWakeUp:i = 2
					order:t = "random"
				}
			}
		}
	}
}
mission_objectives {
	isCategory:b = true
	is_enabled:b = true
	assault_pvet_stage1_capture {
		is_enabled:b = false
		comments:t = ""
		type:t = "abstractMissionObjective"
		props {
			isPrimary:b = true
			timeLimit:i = 1800
		}
		onSuccess {

		}
		onFailed {

		}
	}
	assault_pvet_stage2_eliminate {
		is_enabled:b = false
		comments:t = ""
		type:t = "abstractMissionObjective"
		props {
			isPrimary:b = true
			timeLimit:i = 1800
		}
		onSuccess {

		}
		onFailed {

		}
	}
	assault_pvet_stage3_defend {
		is_enabled:b = false
		comments:t = ""
		type:t = "abstractMissionObjective"
		props {
			isPrimary:b = true
			timeLimit:i = 1800
		}
		onSuccess {

		}
		onFailed {

		}
	}
}
variables {
	random_positioning:i = 0
	iterator:i = 0
	iterator_go:b = true
	string_container:t = ""
	string_position:t = ""
	i1:i = 0
	i1n:i = 1
	var_p_i1:t = ""
	var_p_i1n:t = ""
	rnd_spwn_name:t = "ai_tank_stage2_"
	tanks_stage2_total:i = 8
	p_total:i = 16
	p1:i = 1
	p2:i = 2
	p3:i = 3
	p4:i = 4
	p5:i = 5
	p6:i = 6
	p7:i = 7
	p8:i = 8
	p9:i = 9
	p10:i = 10
	p11:i = 11
	p12:i = 12
	p13:i = 13
	p14:i = 14
	p15:i = 15
	p16:i = 16
	stage2_n_destroyed:i = 0
	stage2_n_tanks:i = 1
	stage1_n_tanks:i = 1
	stage1_n_atguns:i = 1
	stage3_time:i = 60
	stage3_direction:t = ""
	stage3_rnd_dir:i = 0
	stage3_wakedup:i = 0
	stage3_n_waves:i = 12
	stage3_take_pos_timer:i = 30
	stage3_wave_interval:i = 7
	stage3_wv_intrvl:i = 0
	mis_init_spwn_timer_1:i = 5
	mis_init_spwn_timer_2:i = 10
}
dialogs {

}
airfields {

}
effects {

}
units {

}
areas {

}
objLayers {
	layer {
		enabled:b = true
	}
	layer {
		enabled:b = true
	}
}
wayPoints {

}