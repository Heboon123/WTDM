selected_tag:t = ""
bin_dump_file:t = ""
mission_settings {
	player {
		army:i = 1
		wing:t = "player_tank01"
		wing:t = "player_tank02"
		wing:t = "player_tank03"
		wing:t = "player_tank04"
		wing:t = "player_tank05"
		wing:t = "player_tank06"
		wing:t = "player_tank07"
		wing:t = "player_tank08"
		wing:t = "player_tank09"
	}
	player_teamB {
		army:i = 2
	}
	mission {
		level:t = "levels/avg_mozdok.bin"
		type:t = "domination"
		environment:t = "Day"
		weather:t = "hazy"
		nameKillStreaks:t = "killStreaks_survival_event_aircraftOrHelicopter"
		gt_mp_tickets:b = true
		gt_mp_capture:b = true
		gt_reload_explosives:b = false
		timeLimit:i = 60
		deathPenaltyMul:r = 0
		ctaCaptureZoneEqualPenaltyMul:r = 0
		useAlternativeMapCoord:b = false
		remapAiTankModels:b = false
		allowEmptyTeams:b = true
		country_axis:t = "germany"
		country_allies:t = "ussr"
		restoreType:t = "attempts"
		optionalTakeOff:b = false
	}
	spectator_points {

	}
}
imports {
	import_record {
		file:t = "gameData/missions/templates/tank_arcade_streaks_template.blk"
		importAreas:b = true
		importUnits:b = true
		importTriggers:b = true
		importMissionObjectives:b = true
		importWayPoints:b = true
		importDialogs:b = true
		showAreas:b = true
		showUnits:b = true
		showTriggers:b = true
		showMissionObjectives:b = true
		showWayPoints:b = true
		showDialogs:b = true
		excludes {

		}
	}
}
triggers {
	isCategory:b = true
	is_enabled:b = true
	initial {
		is_enabled:b = true
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ALL"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {

		}
		actions {
			missionMarkAsRespawnPoint {
				loc_name:t = ""
				spawnEffect:b = false
				radius:r = -1
				target:t = "spawnpoint01"
				target:t = "spawnpoint02"
				target:t = "spawnpoint03"
				target:t = "spawnpoint04"
				target:t = "spawnpoint05"
				target:t = "spawnpoint06"
				target:t = "spawnpoint07"
				target:t = "spawnpoint08"
				team:t = "A"
				isStrictSpawn:b = false
				resetStrictSpawnIndex:b = false
				isAirfield:b = false
				isUnit:b = false
				forceCreate:b = false
				useExisting:b = false
				isIndividual:b = true
				onlyOnePlayerPerSpawnPoint:b = false
				removeAreas:b = false
				replaceAreas:b = false
				canSpawnOnNeutral:b = false
				showOnMap:b = false
				tags {
					tank:b = true
					type_heavy_tank:b = true
					type_medium_tank:b = true
					type_light_tank:b = true
					type_tank_destroyer:b = true
					type_spaa:b = true
				}
			}
			unitMark {
				target_marking:i = 20
				target:t = "enemy_air_assaults"
			}
			__unitSetIndication {
				set:b = true
				target:t = "all_enemy_units"
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
			}
			unitPutToSleep {
				target:t = "all_enemy_units"
				target:t = "enemy_air_assaults"
				target:t = "enemy_spaa"
			}
			varSetBool {
				value:b = false
				var:t = "enableHelicopters"
				fromDescriptor:t = "enableHelicopters"
			}
			triggerEnable {
				target:t = "check_helipad"
			}
			comment {
				value:t = "zabiraet unit number percent iz deskriptora, esli takogo parametra v konfigah net, znachenie budet ravno nulyu, srabotaet sleduyushchij trigger"
			}
			wait {
				time:r = 1
			}
			missionMarkAsCaptureZone {
				army:i = 1
				timeMultiplier:r = 1
				disableZone:b = false
				name_for_respawn_base:t = ""
				target:t = "restoration_zone"
				canCaptureByGM:b = true
				onlyPlayersCanCapture:b = true
				captureNoPenalty:b = true
				zoneDefenders {

				}
			}
			varSetInt {
				value:i = 100
				var:t = "wave01_tanks_count"
				fromDescriptor:t = "wave01_tanks_count"
			}
			varSetInt {
				value:i = 100
				var:t = "wave02_tanks_count"
				fromDescriptor:t = "wave02_tanks_count"
			}
			varSetInt {
				value:i = 100
				var:t = "wave03_tanks_count"
				fromDescriptor:t = "wave03_tanks_count"
			}
			varSetInt {
				value:i = 100
				var:t = "wave04_tanks_count"
				fromDescriptor:t = "wave04_tanks_count"
			}
			varSetInt {
				value:i = 100
				var:t = "wave05_tanks_count"
				fromDescriptor:t = "wave05_tanks_count"
			}
			varSetInt {
				value:i = 100
				var:t = "wave06_tanks_count"
				fromDescriptor:t = "wave06_tanks_count"
			}
			varSetInt {
				value:i = 100
				var:t = "wave07_tanks_count"
				fromDescriptor:t = "wave07_tanks_count"
			}
			varSetInt {
				value:i = 100
				var:t = "wave08_tanks_count"
				fromDescriptor:t = "wave08_tanks_count"
			}
			varSetInt {
				value:i = 100
				var:t = "wave09_tanks_count"
				fromDescriptor:t = "wave09_tanks_count"
			}
			varSetInt {
				value:i = 100
				var:t = "wave10_tanks_count"
				fromDescriptor:t = "wave10_tanks_count"
			}
			varSetInt {
				value:i = 100
				var:t = "wave11_tanks_count"
				fromDescriptor:t = "wave11_tanks_count"
			}
			varSetInt {
				value:i = 100
				var:t = "wave12_tanks_count"
				fromDescriptor:t = "wave12_tanks_count"
			}
			varSetInt {
				value:i = 0
				var:t = "wave_number_overall_counter"
				input_var:t = "wave_number_overall_var"
			}
			varSetInt {
				value:i = 1
				var:t = "pickups_max_per_wave_int"
				fromDescriptor:t = "maxPickupsPerWave"
			}
			varSetInt {
				value:i = 14
				var:t = "tickets_changing_initial"
				fromDescriptor:t = "ticketsDecreasing"
			}
			varModify {
				operator:t = "mul"
				value:r = -1
				var:t = "tickets_changing_initial"
			}
			varSetInt {
				value:i = 0
				var:t = "tickets_changing_limit"
				input_var:t = "tickets_changing_initial"
				fromDescriptor:t = ""
			}
			varModify {
				operator:t = "mul"
				value:r = 1
				var:t = "tickets_changing_limit"
				use_variable:b = true
				var_value:t = "tickets_changing_iter_num"
			}
			varSetInt {
				value:i = 0
				var:t = "tickets_bonus_after_wave_default"
				input_var:t = "tickets_changing_initial"
				fromDescriptor:t = ""
			}
			varModify {
				operator:t = "add"
				value:r = 0
				var:t = "tickets_bonus_after_wave_default"
				use_variable:b = true
				var_value:t = "tickets_changing_limit"
			}
			varModify {
				operator:t = "mul"
				value:r = 1
				var:t = "tickets_bonus_after_wave_default"
				use_variable:b = true
				var_value:t = "tickets_changing_iter_num"
			}
			varModify {
				operator:t = "divAB"
				value:r = -2
				var:t = "tickets_bonus_after_wave_default"
			}
			varSetInt {
				value:i = 1000
				var:t = "tickets_bonus_after_wave_max"
				fromDescriptor:t = "ticketsBonusMax"
			}
			varSetInt {
				value:i = 0
				var:t = "tickets_bonus_after_wave_min"
				input_var:t = "tickets_bonus_after_wave_max"
			}
			varModify {
				operator:t = "divAB"
				value:r = 5
				var:t = "tickets_bonus_after_wave_min"
			}
		}
		else_actions {

		}
	}
	apply_noobject_areas {
		is_enabled:b = true
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {
			objectExists {
				target:t = "@noobject_box_squad_name"
				type:t = "squad"
			}
		}
		actions {
			missionDestroyArea {
				target_type:t = "permanent_rendinst"
				area:t = "@noobject_box_squad_name"
			}
		}
		else_actions {

		}
	}
	init_battlearea {
		is_enabled:b = true
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {
			objectExists {
				target:t = "battlearea"
				type:t = "area"
			}
		}
		actions {
			missionBattleArea {
				air:b = false
				ground:b = true
				mapArea:b = true
				killOutOfBattleArea:b = true
				killArea:b = false
				detectionArea:b = false
				airMapArea:b = false
				area:t = "battlearea"
				newGridHorizontalCellCount:i = 0
			}
		}
		else_actions {

		}
	}
	check_helipad {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {
			objectExists {
				target:t = "helipad"
				type:t = "objectGroup"
			}
		}
		actions {
			triggerEnable {
				target:t = "init_helipad"
			}
		}
		else_actions {

		}
	}
	init_helipad {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {
			varCompareBool {
				var_value:t = "enableHelicopters"
				value:b = true
				comparasion_func:t = "equal"
			}
		}
		actions {
			triggerEnable {
				target:t = "players_in_air_counter_less"
				target:t = "players_in_air_counter_more"
			}
			missionMarkAsRespawnPoint {
				loc_name:t = "missions/helipad_spawn"
				spawnEffect:b = false
				radius:r = -1
				target:t = "helipad"
				team:t = "A"
				isStrictSpawn:b = false
				resetStrictSpawnIndex:b = false
				isAirfield:b = true
				isUnit:b = false
				forceCreate:b = false
				useExisting:b = false
				isIndividual:b = false
				onlyOnePlayerPerSpawnPoint:b = false
				removeAreas:b = false
				replaceAreas:b = false
				canSpawnOnNeutral:b = false
				showOnMap:b = true
				tags {
					helicopter:b = true
					type_attack_helicopter:b = true
					type_utility_helicopter:b = true
					tank:b = false
				}
			}
		}
		else_actions {
			unitPutToSleep {
				target:t = "helipad"
			}
		}
	}
	check_for_zero_descriptor {
		is_enabled:b = true
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "units_number_percent"
				value:i = 0
				comparasion_func:t = "equal"
			}
		}
		actions {
			comment {
				value:t = "esli v deskriptore ne ukazana units_number_percent - stavitsya 100% "
			}
			varSetInt {
				value:i = 100
				var:t = "units_number_percent"
			}
		}
		else_actions {

		}
	}
	player_online {
		is_enabled:b = true
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			unitWhenStatus {
				object_type:t = "isOnline"
				check_objects:t = "any"
				object_marking:i = 0
				target_type:t = "isAlive"
				check_period:r = 1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				object:t = "players_squad"
			}
		}
		actions {
			triggerEnable {
				target:t = "1st_wave_start_timer"
			}
			moAddMissionObjective {
				target:t = "battle_for_survival_safe_zone_obj"
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
			}
		}
		else_actions {

		}
	}
	1st_wave_start_timer {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "start_timer_int"
				value:i = 0
				comparasion_func:t = "notLess"
			}
		}
		actions {
			varSetString {
				value:t = "hints/survival_starts_in_"
				var:t = "start_hint_id_str"
			}
			varAddString {
				value:t = "@start_timer_int"
				digits:i = 2
				var:t = "start_hint_id_str"
			}
			playHint {
				hintType:t = "custom"
				name:t = "@start_hint_id_str"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			varModify {
				operator:t = "subAB"
				value:r = 1
				var:t = "start_timer_int"
			}
		}
		else_actions {
			triggerEnable {
				target:t = "waves_start"
			}
			varSetString {
				value:t = "hints/survival_wave_appears_"
				var:t = "start_hint_id_str"
			}
			varAddString {
				value:t = "@wave_tier_number_int"
				digits:i = 2
				var:t = "start_hint_id_str"
			}
			wait {
				time:r = 2
			}
			playHint {
				hintType:t = "standard"
				name:t = "@start_hint_id_str"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = 3
				priority:i = 1000
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			wait {
				time:r = 3
			}
			triggerDisable {
				target:t = "1st_wave_start_timer"
			}
		}
	}
	special_waves_time_delay {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "wave_number_var"
				value:i = 4
				comparasion_func:t = "equal"
			}
			varCompareInt {
				var_value:t = "wave_number_var"
				value:i = 8
				comparasion_func:t = "equal"
			}
			varCompareInt {
				var_value:t = "wave_number_var"
				value:i = 12
				comparasion_func:t = "equal"
			}
		}
		actions {
			triggerDisable {
				target:t = "waves_start"
			}
			wait {
				time:r = 5
			}
			triggerEnable {
				target:t = "previous_wave_type_is_dead"
			}
			wait {
				time:r = 60
			}
		}
		else_actions {

		}
	}
	previous_wave_type_is_dead {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			unitWhenCountMatches {
				object_type:t = "isActive"
				object_marking:i = 0
				func:t = "less"
				value:i = 1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object:t = "@wave_name_var"
				object_var_value:i = 0
			}
		}
		actions {
			varModify {
				operator:t = "add"
				value:r = 1
				var:t = "wave_tier_number_int"
			}
			__playHint {
				hintType:t = "custom"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			varModify {
				operator:t = "add"
				value:r = -1
				var:t = "wave_number_overall_counter"
			}
			gameMPChangeScore {
				value:i = -910
				valueSystem:t = "amount"
				team:t = "B"
			}
			comment {
				value:t = "910 tickets = 1/11 part of MPScore (num of waves)"
			}
			varModify {
				operator:t = "mul"
				value:r = -1
				var:t = "tickets_changing_per_wave"
			}
			varModify {
				operator:t = "add"
				value:r = 1
				var:t = "pickups_count"
			}
			triggerEnable {
				target:t = "clamp_pickups_count"
			}
			triggerEnable {
				target:t = "mission_completed"
			}
			triggerEnable {
				target:t = "tickets_after_wave_tune"
			}
		}
		else_actions {

		}
	}
	mission_completed {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "wave_number_overall_counter"
				value:i = 0
				comparasion_func:t = "notMore"
			}
		}
		actions {
			playHint {
				hintType:t = "custom"
				name:t = "hints/survival_victory_message"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 1000
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
		}
		else_actions {
			triggerEnable {
				target:t = "waves_counter"
			}
		}
	}
	waves_counter {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "new_wave_counter_int"
				value:i = 1
				comparasion_func:t = "notLess"
			}
		}
		actions {
			varSetString {
				value:t = "hints/survival_new_group_arrives_in_"
				var:t = "start_hint_id_str"
			}
			varAddString {
				value:t = "@new_wave_counter_int"
				digits:i = 2
				var:t = "start_hint_id_str"
			}
			playHint {
				hintType:t = "custom"
				name:t = "@start_hint_id_str"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			varModify {
				operator:t = "subAB"
				value:r = 1
				var:t = "new_wave_counter_int"
			}
		}
		else_actions {
			varSetString {
				value:t = "hints/survival_wave_appears_"
				var:t = "start_hint_id_str"
			}
			varAddString {
				value:t = "@wave_tier_number_int"
				digits:i = 2
				var:t = "start_hint_id_str"
			}
			playHint {
				hintType:t = "custom"
				name:t = "@start_hint_id_str"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			triggerEnable {
				target:t = "waves_start"
			}
			wait {
				time:r = 3
			}
			playHint {
				hintType:t = "custom"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 0
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			varSetInt {
				value:i = 5
				var:t = "new_wave_counter_int"
			}
			triggerDisable {
				target:t = "waves_counter"
			}
		}
	}
	repair_enemy_tanks {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 15
			}
		}
		conditions {

		}
		actions {
			unitRestore {
				ressurectIfDead:b = false
				fullRestore:b = false
				target_marking:i = 0
				target:t = "all_enemy_units"
				partRestore:b = true
				tankPart:t = "track_l_dm"
				tankPart:t = "track_l_01_dm"
				tankPart:t = "track_r_dm"
				tankPart:t = "track_r_01_dm"
				tankPart:t = "engine_dm"
				tankPart:t = "transmission_dm"
				power:r = 0.3
			}
		}
		else_actions {

		}
	}
	complete_mission_by_timer {
		is_enabled:b = true
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "overall_timer"
				value:i = 2500
				comparasion_func:t = "more"
			}
		}
		actions {
			playHint {
				hintType:t = "custom"
				name:t = "hints/survival_victory_message"
				action:t = "show"
				shouldFadeOut:b = false
				time:r = -1
				priority:i = 1000
				isOverFade:b = false
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				shouldBlink:b = false
			}
			gameMPChangeScore {
				value:i = -20
				valueSystem:t = "percentage"
				team:t = "B"
			}
			wait {
				time:r = 1
			}
			gameMPChangeScore {
				value:i = -20
				valueSystem:t = "percentage"
				team:t = "B"
			}
			wait {
				time:r = 1
			}
			gameMPChangeScore {
				value:i = -20
				valueSystem:t = "percentage"
				team:t = "B"
			}
			wait {
				time:r = 1
			}
			gameMPChangeScore {
				value:i = -20
				valueSystem:t = "percentage"
				team:t = "B"
			}
			wait {
				time:r = 1
			}
			gameMPChangeScore {
				value:i = -20
				valueSystem:t = "percentage"
				team:t = "B"
			}
			wait {
				time:r = 2
			}
			missionCompleted {
				team:t = "A"
				timer:b = false
				debriefingTimer:i = 3
			}
		}
		else_actions {
			varModify {
				operator:t = "mul"
				value:r = 1
				var:t = "overall_timer"
			}
			missionSetTargetsIndicator {
				target_type:t = "isAlive"
				target_marking:i = 0
				delta:i = 0
				icon:t = "score"
				"icon army":i = 2
				set:b = true
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				target:t = "dummy_wave_indicator"
				var:t = "wave_number_overall_counter"
			}
		}
	}
	enemy_units_restore {
		is_enabled:b = true
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 7
			}
		}
		conditions {
			unitWhenStatus {
				object_type:t = "isKilled"
				check_objects:t = "any"
				object_marking:i = 1
				target_type:t = "isAlive"
				check_period:r = 1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				object:t = "all_enemy_units"
				object:t = "enemy_spaa"
			}
		}
		actions {
			unitSetIndication {
				set:b = false
				target:t = "all_enemy_units"
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				useForTriggerFiltered:b = true
			}
			unitSetProperties {
				object:t = "all_enemy_units"
				object_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				useForTriggerFiltered:b = true
				accuracy:r = 1
				airAccuracy:r = 0.6
				effShootingRate:r = 1
				airEffShootingRate:r = 1
				moveSpeedKAtShooting:r = 25
			}
			unitRestore {
				ressurectIfDead:b = true
				fullRestore:b = true
				target_marking:i = 0
				target:t = "all_enemy_units"
				target:t = "enemy_spaa"
				useForTriggerFiltered:b = true
			}
			unitPutToSleep {
				target:t = "all_enemy_units"
				target:t = "enemy_spaa"
				useForTriggerFiltered:b = true
			}
		}
		else_actions {

		}
	}
	tickets_after_wave {
		isCategory:b = true
		is_enabled:b = true
		tickets_after_wave_reset {
			is_enabled:b = true
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {

			}
			actions {
				varSetInt {
					value:i = 0
					var:t = "tickets_bonus_after_wave"
					input_var:t = "tickets_bonus_after_wave_default"
					fromDescriptor:t = ""
				}
			}
			else_actions {

			}
		}
		tickets_after_wave_tune {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {
				varCompareInt {
					var_value:t = "tickets_bonus_after_wave"
					value:i = 0
					comparasion_func:t = "less"
					var_value_other:t = "tickets_bonus_after_wave_min"
				}
			}
			actions {
				varSetInt {
					value:i = 0
					var:t = "tickets_bonus_after_wave"
					input_var:t = "tickets_bonus_after_wave_min"
				}
				triggerEnable {
					target:t = "tickets_after_wave_check_max"
				}
			}
			else_actions {
				triggerEnable {
					target:t = "tickets_after_wave_check_max"
				}
			}
		}
		tickets_after_wave_check_max {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {
				varCompareInt {
					var_value:t = "tickets_bonus_after_wave"
					value:i = 0
					comparasion_func:t = "more"
					var_value_other:t = "tickets_bonus_after_wave_max"
				}
			}
			actions {
				varSetInt {
					value:i = 0
					var:t = "tickets_bonus_after_wave"
					input_var:t = "tickets_bonus_after_wave_max"
				}
				triggerEnable {
					target:t = "tickets_after_wave_sum"
				}
			}
			else_actions {
				triggerEnable {
					target:t = "tickets_after_wave_sum"
				}
			}
		}
		tickets_after_wave_sum {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {

			}
			actions {
				varSetInt {
					value:i = 0
					var:t = "tickets_current_int"
					source_var:t = "mpTi1"
				}
				varSetInt {
					value:i = 0
					var:t = "tickets_next_int"
					source_var:t = "mpTi1"
				}
				varModify {
					operator:t = "add"
					value:r = 0
					var:t = "tickets_next_int"
					use_variable:b = true
					var_value:t = "tickets_bonus_after_wave"
				}
				varSetInt {
					value:i = 0
					var:t = "tickets_changing_per_wave"
				}
				triggerEnable {
					target:t = "tickets_after_wave_apply"
				}
			}
			else_actions {

			}
		}
		tickets_after_wave_apply {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {
				varCompareInt {
					var_value:t = "tickets_next_int"
					value:i = 10000
					comparasion_func:t = "notMore"
				}
			}
			actions {
				varSetInt {
					value:i = 0
					var:t = "tickets_diff_for_summing_int"
					input_var:t = "tickets_next_int"
				}
				varModify {
					operator:t = "subAB"
					value:r = 0
					var:t = "tickets_diff_for_summing_int"
					use_variable:b = true
					var_value:t = "tickets_current_int"
				}
				gameMPChangeScore {
					value:i = 0
					valueSystem:t = "amount"
					var:t = "tickets_diff_for_summing_int"
					team:t = "A"
				}
				triggerEnable {
					target:t = "tickets_after_wave_reset"
				}
			}
			else_actions {
				varSetInt {
					value:i = 10000
					var:t = "tickets_diff_for_summing_int"
				}
				varModify {
					operator:t = "subAB"
					value:r = 0
					var:t = "tickets_diff_for_summing_int"
					use_variable:b = true
					var_value:t = "tickets_current_int"
				}
				gameMPChangeScore {
					value:i = 0
					valueSystem:t = "amount"
					var:t = "tickets_diff_for_summing_int"
					team:t = "A"
				}
				triggerEnable {
					target:t = "tickets_after_wave_reset"
				}
			}
		}
	}
	pickups {
		isCategory:b = true
		is_enabled:b = true
		clamp_pickups_count {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {
				varCompareInt {
					var_value:t = "pickups_count"
					value:i = 0
					comparasion_func:t = "more"
					var_value_other:t = "pickups_max_per_wave_int"
				}
			}
			actions {
				varSetInt {
					value:i = 0
					var:t = "pickups_count"
					input_var:t = "pickups_max_per_wave_int"
				}
				triggerActivate {
					target:t = "create_pickups"
					activate_type:t = "checkConidtions"
					check_trigger_status:b = false
					after_activation:t = "disable"
				}
			}
			else_actions {
				triggerActivate {
					target:t = "create_pickups"
					activate_type:t = "checkConidtions"
					check_trigger_status:b = false
					after_activation:t = "disable"
				}
			}
		}
		create_pickups {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {
				objectExists {
					target:t = "pickups_area_squad"
					type:t = "squad"
				}
				varCompareInt {
					var_value:t = "wave_number_overall_counter"
					value:i = 0
					comparasion_func:t = "more"
				}
			}
			actions {
				missionCreatePickUps {
					preset:t = "tankPvE"
					count:i = 0
					minDistanceFromBattleAreaEdge:r = 1
					target:t = "pickups_area_squad"
					count_var:t = "pickups_count"
				}
			}
			else_actions {

			}
		}
	}
	safe_zone_logic {
		isCategory:b = true
		is_enabled:b = true
		all_enemy_not_in_safe_zone {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {
				unitWhenInArea {
					math:t = "notNear2D"
					object_type:t = "isActive"
					object_marking:i = 0
					check_objects:t = "all"
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object:t = "all_enemy_units"
					target:t = "safe_zone"
					object_var_value:i = 0
				}
			}
			actions {
				playHint {
					hintType:t = "custom"
					name:t = "hints/survival_enemy_in_safe_zone"
					action:t = "hide"
					shouldFadeOut:b = false
					isOverFade:b = false
					time:r = -1
					priority:i = 0
					target_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object_var_value:i = 0
				}
				triggerDisable {
					target:t = "tickets_changing"
				}
			}
			else_actions {

			}
		}
		enemy_in_safe_area {
			is_enabled:b = true
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = true
			}
			events {
				periodicEvent {
					time:r = 3
				}
			}
			conditions {
				unitWhenInArea {
					math:t = "2D"
					object_type:t = "isActive"
					object_marking:i = 1
					check_objects:t = "any"
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object:t = "all_enemy_units"
					target:t = "safe_zone"
					object_var_value:i = 0
				}
			}
			actions {
				playHint {
					hintType:t = "custom"
					name:t = "hints/survival_enemy_in_safe_zone"
					action:t = "show"
					shouldFadeOut:b = false
					time:r = -1
					priority:i = 1000
					isOverFade:b = false
					target_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object_var_value:i = 0
					shouldBlink:b = false
				}
				unitSetIndication {
					set:b = true
					target:t = "all_enemy_units"
					target_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object_var_value:i = 0
					useForTriggerFiltered:b = true
				}
				unitSetProperties {
					object:t = "all_enemy_units"
					object_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object_var_value:i = 0
					useForTriggerFiltered:b = true
					attack_type:t = "fire_at_will"
					accuracy:r = 0.5
					airAccuracy:r = 0.6
					checkVisibilityTarget:b = false
					effShootingRate:r = 1
					airEffShootingRate:r = 1
					speed:r = 10
					lockSpeed:b = true
				}
				__unitAttackTarget {
					playerAttracted:b = false
					object:t = "all_enemy_units"
					target:t = "players_squad"
					filterWhom:t = "object"
					trackingTime:r = 10
					fireRandom:b = true
				}
				triggerEnable {
					target:t = "all_enemy_not_in_safe_zone"
					target:t = "tickets_changing"
				}
			}
			else_actions {

			}
		}
		exist_drawpoints {
			is_enabled:b = true
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {
				objectExists {
					target:t = "draw_safezone_01"
					type:t = "area"
				}
				objectExists {
					target:t = "draw_safezone_02"
					type:t = "area"
				}
				objectExists {
					target:t = "draw_safezone_03"
					type:t = "area"
				}
				objectExists {
					target:t = "draw_safezone_04"
					type:t = "area"
				}
			}
			actions {
				triggerEnable {
					target:t = "draw_safearea"
				}
			}
			else_actions {

			}
		}
		draw_safearea {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = true
			}
			events {
				periodicEvent {
					time:r = 0.5
				}
			}
			conditions {
				unitWhenInArea {
					math:t = "2D"
					object_type:t = "isActive"
					object_marking:i = 1
					check_objects:t = "any"
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object:t = "all_enemy_units"
					target:t = "safe_zone"
					object_var_value:i = 0
				}
			}
			actions {
				missionShowMapLine {
					areaNameFrom:t = "draw_safezone_01"
					areaNameTo:t = "draw_safezone_02"
					colorCode:t = "Ally"
					scale:r = 0.5
					clear:b = true
				}
				missionShowMapLine {
					areaNameFrom:t = "draw_safezone_02"
					areaNameTo:t = "draw_safezone_03"
					colorCode:t = "Ally"
					scale:r = 0.5
					clear:b = true
				}
				missionShowMapLine {
					areaNameFrom:t = "draw_safezone_03"
					areaNameTo:t = "draw_safezone_04"
					colorCode:t = "Ally"
					scale:r = 0.5
					clear:b = true
				}
				missionShowMapLine {
					areaNameFrom:t = "draw_safezone_04"
					areaNameTo:t = "draw_safezone_01"
					colorCode:t = "Ally"
					scale:r = 0.5
					clear:b = true
				}
				missionShowMapLine {
					areaNameFrom:t = "draw_safezone_01"
					areaNameTo:t = "draw_safezone_02"
					show:b = true
					colorCode:t = "Enemy"
					scale:r = 0.5
				}
				missionShowMapLine {
					areaNameFrom:t = "draw_safezone_02"
					areaNameTo:t = "draw_safezone_03"
					show:b = true
					colorCode:t = "Enemy"
					scale:r = 0.5
				}
				missionShowMapLine {
					areaNameFrom:t = "draw_safezone_03"
					areaNameTo:t = "draw_safezone_04"
					show:b = true
					colorCode:t = "Enemy"
					scale:r = 0.5
				}
				missionShowMapLine {
					areaNameFrom:t = "draw_safezone_04"
					areaNameTo:t = "draw_safezone_01"
					show:b = true
					colorCode:t = "Enemy"
					scale:r = 0.5
				}
				wait {
					time:r = 0.5
				}
				missionShowMapLine {
					areaNameFrom:t = "draw_safezone_01"
					areaNameTo:t = "draw_safezone_02"
					show:b = true
					colorCode:t = "Ally"
					scale:r = 0.5
				}
				missionShowMapLine {
					areaNameFrom:t = "draw_safezone_02"
					areaNameTo:t = "draw_safezone_03"
					show:b = true
					colorCode:t = "Ally"
					scale:r = 0.5
				}
				missionShowMapLine {
					areaNameFrom:t = "draw_safezone_03"
					areaNameTo:t = "draw_safezone_04"
					show:b = true
					colorCode:t = "Ally"
					scale:r = 0.5
				}
				missionShowMapLine {
					areaNameFrom:t = "draw_safezone_04"
					areaNameTo:t = "draw_safezone_01"
					show:b = true
					colorCode:t = "Ally"
					scale:r = 0.5
				}
			}
			else_actions {
				missionShowMapLine {
					areaNameFrom:t = "draw_safezone_01"
					areaNameTo:t = "draw_safezone_02"
					colorCode:t = "Ally"
					scale:r = 0.5
					clear:b = true
				}
				missionShowMapLine {
					areaNameFrom:t = "draw_safezone_02"
					areaNameTo:t = "draw_safezone_03"
					colorCode:t = "Ally"
					scale:r = 0.5
					clear:b = true
				}
				missionShowMapLine {
					areaNameFrom:t = "draw_safezone_03"
					areaNameTo:t = "draw_safezone_04"
					colorCode:t = "Ally"
					scale:r = 0.5
					clear:b = true
				}
				missionShowMapLine {
					areaNameFrom:t = "draw_safezone_04"
					areaNameTo:t = "draw_safezone_01"
					colorCode:t = "Ally"
					scale:r = 0.5
					clear:b = true
				}
				missionShowMapLine {
					areaNameFrom:t = "draw_safezone_01"
					areaNameTo:t = "draw_safezone_02"
					show:b = true
					colorCode:t = "Ally"
					scale:r = 0.5
				}
				missionShowMapLine {
					areaNameFrom:t = "draw_safezone_02"
					areaNameTo:t = "draw_safezone_03"
					show:b = true
					colorCode:t = "Ally"
					scale:r = 0.5
				}
				missionShowMapLine {
					areaNameFrom:t = "draw_safezone_03"
					areaNameTo:t = "draw_safezone_04"
					show:b = true
					colorCode:t = "Ally"
					scale:r = 0.5
				}
				missionShowMapLine {
					areaNameFrom:t = "draw_safezone_04"
					areaNameTo:t = "draw_safezone_01"
					show:b = true
					colorCode:t = "Ally"
					scale:r = 0.5
				}
			}
		}
		tickets_changing {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = true
			}
			events {
				periodicEvent {
					time:r = 3
				}
			}
			conditions {
				varCompareInt {
					var_value:t = "tickets_changing"
					value:i = 0
					comparasion_func:t = "more"
					var_value_other:t = "tickets_changing_limit"
				}
			}
			actions {
				varModify {
					operator:t = "add"
					value:r = 0
					var:t = "tickets_changing"
					use_variable:b = true
					var_value:t = "tickets_changing_initial"
				}
				varModify {
					operator:t = "add"
					value:r = 0
					var:t = "tickets_changing_per_wave"
					use_variable:b = true
					var_value:t = "tickets_changing"
				}
				varModify {
					operator:t = "add"
					value:r = 0
					var:t = "tickets_bonus_after_wave"
					use_variable:b = true
					var_value:t = "tickets_changing"
				}
				gameMPChangeScore {
					value:i = 0
					valueSystem:t = "amount"
					var:t = "tickets_changing"
					team:t = "A"
				}
			}
			else_actions {
				varModify {
					operator:t = "add"
					value:r = 0
					var:t = "tickets_changing_per_wave"
					use_variable:b = true
					var_value:t = "tickets_changing"
				}
				gameMPChangeScore {
					value:i = 0
					valueSystem:t = "amount"
					var:t = "tickets_changing"
					team:t = "A"
				}
			}
		}
	}
	route_counter {
		isCategory:b = true
		is_enabled:b = true
		route_counter {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 0.1
				}
			}
			conditions {

			}
			actions {
				varModify {
					operator:t = "add"
					value:r = 1
					var:t = "route_counter_int"
				}
				varSetString {
					value:t = "direction_respawn"
					var:t = "direction_respawn"
				}
				varAddString {
					value:t = ""
					digits:i = 2
					var:t = "direction_respawn"
					input_var:t = "route_counter_int"
				}
				triggerEnable {
					target:t = "route_chacker"
				}
			}
			else_actions {

			}
		}
		route_chacker {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 0.1
				}
			}
			conditions {
				objectExists {
					target:t = "@direction_respawn"
					type:t = "area"
				}
			}
			actions {
				triggerEnable {
					target:t = "route_counter"
				}
			}
			else_actions {
				__varModify {
					operator:t = "add"
					value:r = -1
					var:t = "route_counter_int"
				}
				triggerEnable {
					target:t = "wave_init"
				}
			}
		}
	}
	enemy_respawn {
		isCategory:b = true
		is_enabled:b = true
		waves_start {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {

			}
			actions {
				varSetString {
					value:t = "wave"
					var:t = "wave_name_var"
				}
				varSetString {
					value:t = "wave_tier_"
					var:t = "wave_tier_name_str"
				}
				varModify {
					operator:t = "add"
					value:r = 1
					var:t = "wave_number_var"
				}
				varAddString {
					value:t = "@wave_number_var"
					digits:i = 2
					var:t = "wave_name_var"
				}
				varAddString {
					value:t = "@wave_tier_number_int"
					digits:i = 2
					var:t = "wave_tier_name_str"
				}
				triggerEnable {
					target:t = "how_many_units_in_waves"
					target:t = "special_waves_time_delay"
				}
				varModify {
					operator:t = "add"
					value:r = -1
					var:t = "wave_number_overall_var"
				}
			}
			else_actions {

			}
		}
		how_many_units_in_waves {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 0.01
				}
			}
			conditions {

			}
			actions {
				varSetString {
					value:t = ""
					var:t = "tank_count_name_var"
					input_var:t = "wave_name_var"
				}
				varAddString {
					value:t = "_tanks_count"
					digits:i = 0
					var:t = "tank_count_name_var"
				}
				varSetInt {
					value:i = 100
					var:t = "wave_units_number_var"
					input_var:t = "@tank_count_name_var"
				}
				varSetInt {
					value:i = 1
					var:t = "unitCountDiv"
					fromDescriptor:t = "unitCountDiv"
				}
				varModify {
					operator:t = "divAB"
					value:r = 1
					var:t = "wave_units_number_var"
					use_variable:b = true
					var_value:t = "unitCountDiv"
				}
				missionGetMaxPlayers {
					input_var:t = "players_max_count_int"
				}
				getUnitsCount {
					target:t = "players_squad"
					target_type:t = "isOnGround"
					var:t = "players_on_ground_current"
				}
				varSetInt {
					value:i = 10
					var:t = "players_effective_count"
					input_var:t = "players_online_count_int"
				}
				varModify {
					operator:t = "subAB"
					value:r = 0
					var:t = "players_effective_count"
					use_variable:b = true
					var_value:t = "players_on_ground_current"
				}
				varModify {
					operator:t = "divAB"
					value:r = 2
					var:t = "players_effective_count"
				}
				varModify {
					operator:t = "add"
					value:r = 0
					var:t = "players_effective_count"
					use_variable:b = true
					var_value:t = "players_on_ground_current"
				}
				varModify {
					operator:t = "mul"
					value:r = 10
					var:t = "wave_units_number_var"
					use_variable:b = true
					var_value:t = "players_effective_count"
				}
				varModify {
					operator:t = "divAB"
					value:r = 10
					var:t = "wave_units_number_var"
					use_variable:b = true
					var_value:t = "players_max_count_int"
				}
				triggerEnable {
					target:t = "check_if_num_in_wave_less_then_routes"
				}
			}
			else_actions {

			}
		}
		check_if_num_in_wave_less_then_routes {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 0.1
				}
			}
			conditions {
				varCompareInt {
					var_value:t = "wave_units_number_var"
					value:i = 0
					comparasion_func:t = "less"
					var_value_other:t = "num_of_direction_int"
				}
			}
			actions {
				varSetInt {
					value:i = 0
					var:t = "wave_units_number_var"
					input_var:t = "num_of_direction_int"
				}
				triggerEnable {
					target:t = "check_inactive"
				}
			}
			else_actions {
				triggerEnable {
					target:t = "check_inactive"
				}
			}
		}
		check_inactive {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 0.1
				}
			}
			conditions {
				unitWhenCountMatches {
					object_type:t = "isInactive"
					object_marking:i = 0
					func:t = "notLess"
					value:i = 1
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object:t = "all_enemy_units"
					object_var_value:i = 0
					var:t = "wave_units_number_var"
				}
			}
			actions {
				varSetInt {
					value:i = 0
					var:t = "route_counter_int"
				}
				triggerEnable {
					target:t = "route_counter"
				}
			}
			else_actions {

			}
		}
		wave_init {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 0.1
				}
			}
			conditions {
				varCompareInt {
					var_value:t = "wave_units_number_var"
					value:i = 1
					comparasion_func:t = "more"
					var_value_other:t = "num_of_direction_int"
				}
			}
			actions {
				varSetInt {
					value:i = 0
					var:t = "a"
					var:t = "c"
					input_var:t = "wave_units_number_var"
				}
				varSetInt {
					value:i = 0
					var:t = "b"
					input_var:t = "num_of_direction_int"
				}
				triggerEnable {
					target:t = "enemy_tank_spawn_counter"
				}
			}
			else_actions {
				varSetInt {
					value:i = 0
					var:t = "wave_units_number_var"
					input_var:t = "num_of_direction_int"
				}
				varSetInt {
					value:i = 0
					var:t = "a"
					var:t = "c"
					input_var:t = "wave_units_number_var"
				}
				varSetInt {
					value:i = 0
					var:t = "b"
					input_var:t = "num_of_direction_int"
				}
				triggerEnable {
					target:t = "enemy_tank_spawn_counter"
				}
			}
		}
		enemy_tank_spawn_counter {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 0.1
				}
			}
			conditions {

			}
			actions {
				varModify {
					operator:t = "divAB"
					value:r = 1
					var:t = "c"
					use_variable:b = true
					var_value:t = "b"
				}
				varSetInt {
					value:i = 0
					var:t = "d"
					input_var:t = "c"
				}
				varModify {
					operator:t = "mul"
					value:r = 1
					var:t = "c"
					use_variable:b = true
					var_value:t = "b"
				}
				varModify {
					operator:t = "mul"
					value:r = -1
					var:t = "c"
				}
				varModify {
					operator:t = "add"
					value:r = 1
					var:t = "c"
					use_variable:b = true
					var_value:t = "a"
				}
				varModify {
					operator:t = "add"
					value:r = 1
					var:t = "c"
					use_variable:b = true
					var_value:t = "d"
				}
				varSetInt {
					value:i = 0
					var:t = "timer_to_reset_speed_counter"
				}
				varSetRandomInt {
					var:t = "random_int"
					from:i = 1
					to_not_including:i = 10
					var_to_not_including:t = "route_counter_int"
				}
				getUnitsCount {
					target:t = "enemy_spaa"
					target_type:t = "isActive"
					var:t = "spaa_count"
				}
				triggerEnable {
					target:t = "random_spawns_counter"
					target:t = "timer_to_reset_speed"
					target:t = "enemy_air_num_for_spawn"
					target:t = "enemy_spaa_check_necessity"
				}
				comment {
					value:t = "A= kol-vo yunitov v volne B= kolichestvo storon, s kotoryh startuet volna C= kol-vo yunitov  startuyushchih v pervom napravlenii D= kolichestvo yunitov v ostal'nyh napravleniyah."
				}
			}
			else_actions {

			}
		}
	}
	random_spawn_logic {
		isCategory:b = true
		is_enabled:b = true
		random_spawns_counter {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 2
				}
			}
			conditions {
				varCompareInt {
					var_value:t = "num_of_direction_counter_int"
					value:i = 0
					comparasion_func:t = "less"
					var_value_other:t = "num_of_direction_int"
				}
			}
			actions {
				varModify {
					operator:t = "add"
					value:r = 1
					var:t = "num_of_direction_counter_int"
				}
				varSetString {
					value:t = "direction"
					var:t = "direction"
				}
				varSetString {
					value:t = "direction_respawn"
					var:t = "direction_respawn"
				}
				varAddString {
					value:t = ""
					digits:i = 2
					var:t = "direction"
					var:t = "direction_respawn"
					input_var:t = "random_int"
				}
				comment {
					value:t = "kolichestvo yunitov, kotoroe budet ostanavlivat'sya , kogda strelyayut"
				}
				varSetInt {
					value:i = 0
					var:t = "a"
					input_var:t = "c"
				}
				varSetInt {
					value:i = 1
					var:t = "enemy_will_stop_div"
					fromDescriptor:t = "enemy_will_stop_div"
				}
				varModify {
					operator:t = "divAB"
					value:r = 1
					var:t = "c"
					use_variable:b = true
					var_value:t = "enemy_will_stop_div"
				}
				varSetInt {
					value:i = 0
					var:t = "b"
					input_var:t = "c"
				}
				varModify {
					operator:t = "mul"
					value:r = -1
					var:t = "b"
				}
				varModify {
					operator:t = "add"
					value:r = 1
					var:t = "b"
					use_variable:b = true
					var_value:t = "a"
				}
				triggerEnable {
					target:t = "random_spawns_counter_continuation"
				}
			}
			else_actions {
				varSetInt {
					value:i = 0
					var:t = "num_of_direction_counter_int"
				}
				triggerEnable {
					target:t = "previous_wave_type_is_dead"
				}
			}
		}
		random_spawns_counter_continuation {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ANY"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 2
				}
			}
			conditions {
				varCompareInt {
					var_value:t = "c"
					value:i = 1
					comparasion_func:t = "less"
				}
				varCompareInt {
					var_value:t = "b"
					value:i = 1
					comparasion_func:t = "less"
				}
			}
			actions {
				varSetInt {
					value:i = 1
					var:t = "enemy_will_stop_div"
					fromDescriptor:t = "enemy_will_stop_div"
				}
				varSetInt {
					value:i = 0
					var:t = "c"
					input_var:t = "enemy_will_stop_div"
				}
				comment {
					value:t = "kolichestvo yunitov, kotoroe budet ostanavlivat'sya , kogda strelyayut"
				}
				varSetInt {
					value:i = 0
					var:t = "a"
					input_var:t = "c"
				}
				varModify {
					operator:t = "divAB"
					value:r = 1
					var:t = "c"
					use_variable:b = true
					var_value:t = "enemy_will_stop_div"
				}
				varSetInt {
					value:i = 0
					var:t = "b"
					input_var:t = "c"
				}
				varModify {
					operator:t = "mul"
					value:r = -1
					var:t = "b"
				}
				varModify {
					operator:t = "add"
					value:r = 1
					var:t = "b"
					use_variable:b = true
					var_value:t = "a"
				}
				unitRespawn {
					delay:r = 0.01
					offset:p3 = 10, 0, 10
					object:t = "@wave_name_var"
					object_type:t = "isInactive"
					target:t = "@direction_respawn"
					randomObjectsCountVar:t = "c"
					setObjectMarking:i = 0
					setObjectMarkingVar:t = "random_int"
					resetFormation:b = true
				}
				comment {
					value:t = "spavnim ostavshihsya"
				}
				wait {
					time:r = 1
				}
				unitSetProperties {
					target_marking:i = 0
					target_marking_var:t = "random_int"
					object:t = "@wave_name_var"
					object_type:t = "isMarked"
					unit_type_ex:t = "isActive"
					object_marking:i = 0
					object_marking_var:t = "random_int"
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object_var_value:i = 0
					forceVisibleOnMap:b = true
					airAccuracy:r = 0.6
					effShootingRate:r = 1
					airEffShootingRate:r = 1
					speed:r = 10
					lockSpeed:b = true
					advancedCollisionAvoidance:b = true
				}
				unitSetIndication {
					set:b = true
					object_marking:i = 0
					target:t = "@wave_name_var"
					target_type:t = "isMarked"
					unit_type_ex:t = "isActive"
					target_marking:i = 0
					target_marking_var:t = "random_int"
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object_var_value:i = 0
				}
				unitRespawn {
					delay:r = 0.01
					offset:p3 = -10, 0, -10
					object:t = "@wave_name_var"
					object_type:t = "isInactive"
					target:t = "@direction_respawn"
					randomObjectsCountVar:t = "b"
					setObjectMarking:i = 0
					setObjectMarkingVar:t = "random_int"
					resetFormation:b = true
				}
				varSetInt {
					value:i = 0
					var:t = "c"
					input_var:t = "d"
				}
				triggerEnable {
					target:t = "generate_new_direction"
				}
			}
			else_actions {
				unitRespawn {
					delay:r = 0.01
					offset:p3 = 10, 0, 10
					object:t = "@wave_name_var"
					object_type:t = "isInactive"
					target:t = "@direction_respawn"
					randomObjectsCountVar:t = "c"
					setObjectMarking:i = 0
					setObjectMarkingVar:t = "random_int"
					resetFormation:b = true
				}
				comment {
					value:t = "spavnim ostavshihsya"
				}
				wait {
					time:r = 1
				}
				unitSetProperties {
					target_marking:i = 0
					target_marking_var:t = "random_int"
					object:t = "@wave_name_var"
					object_type:t = "isMarked"
					unit_type_ex:t = "isActive"
					object_marking:i = 0
					object_marking_var:t = "random_int"
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object_var_value:i = 0
					forceVisibleOnMap:b = true
					airAccuracy:r = 0.6
					effShootingRate:r = 1
					airEffShootingRate:r = 1
					speed:r = 10
					lockSpeed:b = true
					advancedCollisionAvoidance:b = true
				}
				unitSetIndication {
					set:b = true
					object_marking:i = 0
					target:t = "@wave_name_var"
					target_type:t = "isMarked"
					unit_type_ex:t = "isActive"
					target_marking:i = 0
					target_marking_var:t = "random_int"
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object_var_value:i = 0
				}
				unitRespawn {
					delay:r = 0.01
					offset:p3 = -10, 0, -10
					object:t = "@wave_name_var"
					object_type:t = "isInactive"
					target:t = "@direction_respawn"
					randomObjectsCountVar:t = "b"
					setObjectMarking:i = 0
					setObjectMarkingVar:t = "random_int"
					resetFormation:b = true
				}
				varSetInt {
					value:i = 0
					var:t = "c"
					input_var:t = "d"
				}
				triggerEnable {
					target:t = "generate_new_direction"
				}
			}
		}
		generate_new_direction {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 0.01
				}
			}
			conditions {

			}
			actions {
				varSetRandomInt {
					var:t = "random_int_add"
					from:i = 1
					to_not_including:i = 4
				}
				varModify {
					operator:t = "add"
					value:r = 0
					var:t = "random_int"
					use_variable:b = true
					var_value:t = "random_int_add"
				}
				triggerEnable {
					target:t = "generate_new_direction_check"
				}
			}
			else_actions {

			}
		}
		generate_new_direction_check {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = true
			}
			events {
				periodicEvent {
					time:r = 0.01
				}
			}
			conditions {
				varCompareInt {
					var_value:t = "random_int"
					value:i = 0
					comparasion_func:t = "notLess"
					var_value_other:t = "route_counter_int"
				}
			}
			actions {
				varModify {
					operator:t = "subAB"
					value:r = 0
					var:t = "random_int"
					use_variable:b = true
					var_value:t = "route_counter_int"
				}
				varModify {
					operator:t = "add"
					value:r = 1
					var:t = "random_int"
				}
			}
			else_actions {
				triggerEnable {
					target:t = "random_spawns_counter"
				}
				triggerDisable {
					target:t = "generate_new_direction_check"
				}
			}
		}
		route_giver_trigger {
			is_enabled:b = true
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = true
			}
			events {
				periodicEvent {
					time:r = 0.1
				}
			}
			conditions {
				varCompareInt {
					var_value:t = "route_giver_int"
					value:i = 0
					comparasion_func:t = "notLess"
					var_value_other:t = "route_counter_int"
				}
			}
			actions {
				varSetInt {
					value:i = 1
					var:t = "route_giver_int"
				}
			}
			else_actions {
				triggerEnable {
					target:t = "route_giver"
				}
			}
		}
		route_giver {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = true
			}
			events {
				periodicEvent {
					time:r = 0.5
				}
			}
			conditions {
				unitWhenCountMatches {
					object_type:t = "isMarked"
					object_marking:i = 0
					func:t = "more"
					value:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object:t = "all_enemy_units"
					object_marking_var:t = "route_giver_int"
					object_var_value:i = 0
				}
			}
			actions {
				triggerDisable {
					target:t = "route_giver_trigger"
				}
				varSetString {
					value:t = "direction"
					var:t = "route_giver_str"
				}
				varAddString {
					value:t = ""
					digits:i = 2
					var:t = "route_giver_str"
					input_var:t = "route_giver_int"
				}
				unitSetFormation {
					formation_type:t = "rows"
					formation_div:i = 3
					formation_step:p2 = 2.5, 3
					formation_noise:p2 = 0.2, 0.4
					object:t = "all_enemy_units"
					useForTriggerFiltered:b = true
				}
				unitSetRoute {
					route:t = "@route_giver_str"
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					teleportToStart:b = true
					object:t = "all_enemy_units"
					useForTriggerFiltered:b = true
				}
				unitSetProperties {
					object:t = "all_enemy_units"
					object_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object_var_value:i = 0
					calmDetection:b = true
					forceVisibleOnMap:b = true
					attack_type:t = "fire_at_will"
					accuracy:r = 1
					airAccuracy:r = 0.6
					effShootingRate:r = 1
					airEffShootingRate:r = 1
				}
				unitAttackTarget {
					playerAttracted:b = false
					object:t = "all_enemy_units"
					target:t = "players_squad"
					useForTriggerFiltered:b = true
					filterWhom:t = "object"
					trackingTime:r = 10
					fireRandom:b = true
				}
				unitMark {
					target_marking:i = 0
					target:t = "all_enemy_units"
					useForTriggerFiltered:b = true
				}
				triggerEnable {
					target:t = "route_giver_trigger"
				}
			}
			else_actions {
				varModify {
					operator:t = "add"
					value:r = 1
					var:t = "route_giver_int"
				}
				triggerEnable {
					target:t = "route_giver_trigger"
				}
				triggerDisable {
					target:t = "route_giver"
				}
			}
		}
	}
	reset_speed_after_timer {
		isCategory:b = true
		is_enabled:b = true
		timer_to_reset_speed {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = true
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {
				varCompareInt {
					var_value:t = "timer_to_reset_speed"
					value:i = 0
					comparasion_func:t = "more"
					var_value_other:t = "timer_to_reset_speed_counter"
				}
			}
			actions {
				varModify {
					operator:t = "add"
					value:r = 1
					var:t = "timer_to_reset_speed_counter"
				}
			}
			else_actions {
				triggerEnable {
					target:t = "reset_speed_trigger"
				}
				varSetInt {
					value:i = 0
					var:t = "timer_to_reset_speed_counter"
				}
				triggerDisable {
					target:t = "timer_to_reset_speed"
				}
			}
		}
		reset_speed_trigger {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {
				unitWhenProperties {
					object:t = "all_enemy_units"
					func:t = "less"
					value:r = 27
					property:t = "speed"
					check_filter:t = "any"
					object_type:t = "any"
					object_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object_var_value:i = 0
				}
				unitWhenInArea {
					math:t = "notNear2D"
					object_type:t = "isAlive"
					object_marking:i = 0
					check_objects:t = "any"
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object:t = "all_enemy_units"
					target:t = "safe_zone"
					object_var_value:i = 0
				}
			}
			actions {
				unitSetIndication {
					set:b = false
					target:t = "all_enemy_units"
					target_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object_var_value:i = 0
					useForTriggerFiltered:b = true
				}
				unitSetProperties {
					object:t = "all_enemy_units"
					object_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object_var_value:i = 0
					useForTriggerFiltered:b = true
					airAccuracy:r = 0.6
					effShootingRate:r = 1
					airEffShootingRate:r = 1
					speed:r = 27
					lockSpeed:b = true
				}
			}
			else_actions {

			}
		}
	}
	air_attack {
		isCategory:b = true
		is_enabled:b = true
		enemy_air_num_for_spawn {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {

			}
			actions {
				varSetInt {
					value:i = 0
					var:t = "airunits_in_wave_int"
					input_var:t = "@tank_count_name_var"
				}
				varSetInt {
					value:i = 1
					var:t = "airUnitCountDiv"
					fromDescriptor:t = "airUnitCountDiv"
				}
				varSetInt {
					value:i = 1
					var:t = "airUnitAdd"
					fromDescriptor:t = "airUnitAdd"
				}
				varModify {
					operator:t = "divAB"
					value:r = 10
					var:t = "airunits_in_wave_int"
					use_variable:b = true
					var_value:t = "airUnitCountDiv"
				}
				varModify {
					operator:t = "add"
					value:r = 1
					var:t = "airunits_in_wave_int"
					use_variable:b = true
					var_value:t = "airUnitAdd"
				}
				triggerEnable {
					target:t = "enemy_air_spawn"
				}
			}
			else_actions {

			}
		}
		enemy_air_spawn {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {
				unitWhenCountMatches {
					object_type:t = "isMarked"
					object_marking:i = 20
					func:t = "notLess"
					value:i = 1
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object:t = "enemy_air_assaults"
					var:t = "airunits_in_wave_int"
				}
				varCompareInt {
					var_value:t = "airunits_in_wave_int"
					value:i = 0
					comparasion_func:t = "more"
				}
			}
			actions {
				unitRespawn {
					delay:r = 0.01
					offset:p3 = 0, 0, 0
					object:t = "enemy_air_assaults"
					object_type:t = "isInactive"
					target:t = "enemy_airspawn"
					useForTriggerFiltered:b = true
					randomObjectsCountVar:t = "airunits_in_wave_int"
					setObjectMarking:i = 21
					resetFormation:b = true
				}
				unitSetProperties {
					object:t = "enemy_air_assaults"
					object_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object_var_value:i = 0
					calmDetection:b = true
					forceVisibleOnMap:b = true
					attack_type:t = "fire_at_will"
					targetAir:b = true
					targetGnd:b = true
					effShootingRate:r = 1
					airEffShootingRate:r = 1
				}
				unitSetIndication {
					set:b = true
					target:t = "enemy_air_assaults"
					target_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object_var_value:i = 0
				}
				triggerEnable {
					target:t = "planes_attack"
				}
				wait {
					time:r = 5
				}
				playHint {
					hintType:t = "standard"
					name:t = "hints/enemy_air_atack"
					action:t = "show"
					shouldFadeOut:b = true
					isOverFade:b = false
					time:r = 3
					priority:i = 0
					target_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object_var_value:i = 0
				}
			}
			else_actions {
				varSetInt {
					value:i = 1
					var:t = "airunits_in_wave_int"
				}
				triggerEnable {
					target:t = "enemy_air_spawn"
				}
			}
		}
		planes_attack {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {

			}
			actions {
				unitRestore {
					ressurectIfDead:b = false
					fullRestore:b = false
					target_marking:i = 0
					target:t = "enemy_air_assaults"
					target_type:t = "isActive"
					ammoRestore:b = true
				}
				unitAttackTarget {
					playerAttracted:b = true
					object:t = "enemy_air_assaults"
					target:t = "players_squad"
					fireRandom:b = true
					fireMode:t = "salvo"
					keepDeadUnitsInTargetList:b = true
				}
			}
			else_actions {

			}
		}
	}
	players_online_counter {
		isCategory:b = true
		is_enabled:b = true
		players_online_counter_less {
			is_enabled:b = true
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = true
			}
			events {
				periodicEvent {
					time:r = 60
				}
			}
			conditions {
				unitWhenCountMatches {
					object_type:t = "isOnline"
					object_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					func:t = "less"
					value:i = 0
					object:t = "players_squad"
					var:t = "players_online_count_int"
				}
			}
			actions {
				varModify {
					operator:t = "add"
					value:r = -1
					var:t = "players_online_count_int"
				}
			}
			else_actions {

			}
		}
		players_online_counter_more {
			is_enabled:b = true
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = true
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {
				unitWhenCountMatches {
					object_type:t = "isOnline"
					object_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					func:t = "more"
					value:i = 0
					object:t = "players_squad"
					var:t = "players_online_count_int"
				}
			}
			actions {
				varModify {
					operator:t = "add"
					value:r = 1
					var:t = "players_online_count_int"
				}
			}
			else_actions {

			}
		}
	}
	players_in_air_counter {
		isCategory:b = true
		is_enabled:b = true
		players_in_air_counter_less {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = true
			}
			events {
				periodicEvent {
					time:r = 60
				}
			}
			conditions {
				unitWhenCountMatches {
					object_type:t = "isInAir"
					object_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					func:t = "less"
					value:i = 0
					object:t = "players_squad"
					unit_type_ex:t = "isPlayer"
					var:t = "players_in_air"
				}
			}
			actions {
				varModify {
					operator:t = "add"
					value:r = -1
					var:t = "players_in_air"
				}
			}
			else_actions {

			}
		}
		players_in_air_counter_more {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = true
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {
				unitWhenCountMatches {
					object_type:t = "isInAir"
					object_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					func:t = "more"
					value:i = 0
					object:t = "players_squad"
					unit_type_ex:t = "isPlayer"
					var:t = "players_in_air"
				}
			}
			actions {
				varModify {
					operator:t = "add"
					value:r = 1
					var:t = "players_in_air"
				}
			}
			else_actions {

			}
		}
	}
	debug {
		isCategory:b = true
		is_enabled:b = true
		debug_t1_won {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {

			}
			actions {
				gameMPChangeScore {
					value:i = 100
					valueSystem:t = "percentage"
					team:t = "B"
				}
			}
			else_actions {

			}
		}
		debug_kill_wave {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {

			}
			actions {
				unitDamage {
					power:r = 1
					useEffect:b = false
					countEffects:i = 1
					delay:p2 = 1, 1
					offset:p3 = 0, 0, 0
					radiusOffset:p2 = 10, 15
					target:t = "all_enemy_units"
					target:t = "enemy_air_assaults"
					explodeAmmo:b = true
					doExplosion:b = true
				}
			}
			else_actions {

			}
		}
		debug_counter {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = true
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {

			}
			actions {
				missionSetTargetsIndicator {
					target_type:t = "isActive"
					target_marking:i = 0
					delta:i = 0
					icon:t = "tank"
					"icon army":i = 2
					set:b = true
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object_var_value:i = 0
					target:t = "@wave_name_var"
				}
				missionSetTargetsIndicator {
					target_type:t = "isActive"
					target_marking:i = 0
					delta:i = 0
					icon:t = "ship"
					"icon army":i = 2
					set:b = true
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object_var_value:i = 0
					target:t = "dummy_wave_indicator"
					var:t = "@tank_count_name_var"
				}
			}
			else_actions {

			}
		}
		debug_kill_faster_5km {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {
				unitWhenProperties {
					object:t = "all_enemy_units"
					func:t = "more"
					value:r = 10
					property:t = "speed"
					check_filter:t = "any"
					object_type:t = "any"
					object_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object_var_value:i = 0
				}
			}
			actions {
				unitDamage {
					power:r = 1
					useEffect:b = false
					countEffects:i = 1
					delay:p2 = 1, 1
					offset:p3 = 0, 0, 0
					radiusOffset:p2 = 10, 15
					target:t = "all_enemy_units"
					explodeAmmo:b = true
					doExplosion:b = true
					useForTriggerFiltered:b = true
				}
			}
			else_actions {

			}
		}
		debug_tickets_show {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = true
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {

			}
			actions {
				varSetInt {
					value:i = 0
					var:t = "tickets_current_int"
					source_var:t = "mpTi1"
				}
				missionSetTargetsIndicator {
					target_type:t = "isAlive"
					target_marking:i = 0
					delta:i = 0
					icon:t = "tank"
					"icon army":i = 1
					set:b = true
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object_var_value:i = 0
					target:t = "dummy_wave_indicator"
					var:t = "tickets_current_int"
				}
			}
			else_actions {

			}
		}
		debug_kill_all_enemy {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = true
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {
				unitWhenStatus {
					object_type:t = "hittedBy"
					check_objects:t = "any"
					object_marking:i = 0
					target_type:t = "isAlive"
					check_period:r = 1
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object_var_value:i = 0
					object:t = "all_enemy_units"
					hittedByTarget:t = "player_tank02"
				}
			}
			actions {
				unitDamage {
					power:r = 1
					useEffect:b = false
					countEffects:i = 1
					delay:p2 = 1, 1
					offset:p3 = 0, 0, 0
					radiusOffset:p2 = 10, 15
					target:t = "all_enemy_units"
					target:t = "enemy_air_assaults"
					explodeAmmo:b = true
					doExplosion:b = true
				}
			}
			else_actions {

			}
		}
		debug_immortal {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {

			}
			actions {
				unitSetProperties {
					object:t = "player_tank02"
					object_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object_var_value:i = 0
					isImmortal:b = true
				}
			}
			else_actions {

			}
		}
	}
	spaa_spawn_logic {
		isCategory:b = true
		is_enabled:b = true
		enemy_spaa_check_necessity {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {
				varCompareBool {
					var_value:t = "enableHelicopters"
					value:b = true
					comparasion_func:t = "equal"
				}
				varCompareInt {
					var_value:t = "players_in_air"
					value:i = 0
					comparasion_func:t = "more"
					var_value_other:t = "spaa_count"
				}
			}
			actions {
				varSetInt {
					value:i = 0
					var:t = "spaa_need_to_spawn"
					input_var:t = "players_in_air"
				}
				varModify {
					operator:t = "subAB"
					value:r = 0
					var:t = "spaa_need_to_spawn"
					use_variable:b = true
					var_value:t = "spaa_count"
				}
				triggerActivate {
					target:t = "enemy_spaa_check_wave"
					activate_type:t = "checkConidtions"
					check_trigger_status:b = false
					after_activation:t = "doNotChange"
				}
			}
			else_actions {

			}
		}
		enemy_spaa_check_wave {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ANY"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {
				varCompareInt {
					var_value:t = "wave_number_var"
					value:i = 2
					comparasion_func:t = "equal"
				}
				varCompareInt {
					var_value:t = "wave_number_var"
					value:i = 5
					comparasion_func:t = "equal"
				}
				varCompareInt {
					var_value:t = "wave_number_var"
					value:i = 8
					comparasion_func:t = "equal"
				}
				varCompareInt {
					var_value:t = "wave_number_var"
					value:i = 11
					comparasion_func:t = "equal"
				}
			}
			actions {
				wait {
					time:r = 15
				}
				playHint {
					hintType:t = "standard"
					name:t = "hints/enemy_spaa_spawn"
					action:t = "show"
					shouldFadeOut:b = true
					isOverFade:b = false
					time:r = 3
					priority:i = 0
					target_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object_var_value:i = 0
				}
				wait {
					time:r = 5
				}
				unitRespawn {
					delay:r = 0.5
					offset:p3 = 0, 0, 0
					object:t = "enemy_spaa"
					object_type:t = "isInactive"
					target:t = "spaa_spawn_squad"
					randomObjectsCountVar:t = "spaa_need_to_spawn"
					resetFormation:b = true
				}
				unitSetProperties {
					object:t = "enemy_spaa"
					object_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object_var_value:i = 0
					forceVisibleOnMap:b = true
					targetAir:b = true
					targetGnd:b = false
					accuracy:r = 0.75
					airEffShootingRate:r = 1
				}
			}
			else_actions {

			}
		}
	}
	fail_mission_by_zero_players {
		is_enabled:b = true
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			unitWhenStatus {
				object_type:t = "isOffline"
				check_objects:t = "all"
				object_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				target_type:t = "isAlive"
				check_period:r = 1
				object:t = "players_squad"
			}
		}
		actions {
			gameMPChangeScore {
				value:i = -100
				valueSystem:t = "percentage"
				team:t = "A"
			}
		}
		else_actions {

		}
	}
}
mission_objectives {
	isCategory:b = true
	is_enabled:b = true
	battle_for_survival_safe_zone_obj {
		is_enabled:b = false
		comments:t = ""
		type:t = "abstractMissionObjective"
		props {
			isPrimary:b = true
			timeLimit:i = 3600
		}
		onSuccess {

		}
		onFailed {

		}
	}
}
variables {
	wave_units_number_var:i = 0
	wave_name_var:t = "wave"
	wave_number_var:i = 0
	wave_number_overall_var:i = 11
	waves_delay_usual_var:i = 90
	start_timer_int:i = 30
	start_hint_id_str:t = ""
	wave_tier_name_str:t = "wave_tier_"
	wave_tier_number_int:i = 1
	new_wave_counter_int:i = 5
	another_hint_str:t = ""
	overall_timer:i = 0
	wave01_tanks_count:i = 0
	wave02_tanks_count:i = 0
	wave03_tanks_count:i = 0
	wave04_tanks_count:i = 0
	wave05_tanks_count:i = 0
	wave06_tanks_count:i = 0
	wave07_tanks_count:i = 0
	wave08_tanks_count:i = 0
	wave09_tanks_count:i = 0
	wave10_tanks_count:i = 0
	wave11_tanks_count:i = 0
	wave12_tanks_count:i = 0
	tank_count_name_var:t = ""
	unitCountDiv:i = 1
	num_of_direction_int:i = 3
	num_of_direction_counter_int:i = 0
	route_counter_int:i = 0
	random_int:i = 0
	direction:t = ""
	direction_respawn:t = ""
	route_giver_int:i = 1
	route_giver_str:t = ""
	a:i = 0
	b:i = 0
	c:i = 0
	d:i = 0
	units_number_percent:i = 100
	enemy_will_stop_div:i = 2
	timer_to_reset_speed:i = 25
	timer_to_reset_speed_counter:i = 0
	airunits_in_wave_int:i = 0
	airUnitCountDiv:i = 10
	wave_number_overall_counter:i = 0
	airUnitAdd:i = 1
	random_int_add:i = 0
	tickets_changing:i = -14
	tickets_changing_initial:i = -14
	tickets_changing_iter_num:i = 14
	tickets_changing_limit:i = -196
	tickets_changing_per_wave:i = 0
	tickets_current_int:i = 0
	tickets_next_int:i = 0
	tickets_after_sum_int:i = 0
	tickets_diff_for_summing_int:i = 0
	pickups_count:i = 0
	pickups_max_per_wave_int:i = 0
	tickets_bonus_after_wave:i = 0
	tickets_bonus_after_wave_min:i = 0
	tickets_bonus_after_wave_max:i = 0
	tickets_bonus_after_wave_default:i = 0
	players_online_count_int:i = 1
	players_max_count_int:i = 10
	players_in_air:i = 0
	enableHelicopters:b = false
	spaa_count:i = 0
	spaa_need_to_spawn:i = 0
	players_on_ground_current:i = 0
	players_effective_count:i = 0
	noobject_box_squad_name:t = "noobject_box_squad"
}
dialogs {

}
airfields {

}
effects {

}
units {
	structures {
		name:t = "dummy_wave_indicator"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [1391.94, -8011.65, -480.211]]
		unit_class:t = "dummy"
		objLayer:i = 2
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 1
			formation_type:t = "rows"
			formation_div:i = 3
			formation_step:p2 = 2.5, 2
			formation_noise:p2 = 0.1, 0.1
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
			isDelayed:b = true
			setStealth:b = true
		}
		way {

		}
	}
	squad {
		name:t = "players_squad"
		tm:m = [[0.935187, 0.0, 0.354153] [0.0, 1.0, 0.0] [-0.354153, 0.0, 0.935187] [1861.69, 631.198, 2493.37]]
		props {
			squad_members:t = "player_tank01"
			squad_members:t = "player_tank02"
			squad_members:t = "player_tank03"
			squad_members:t = "player_tank04"
			squad_members:t = "player_tank05"
			squad_members:t = "player_tank06"
			squad_members:t = "player_tank07"
			squad_members:t = "player_tank08"
			squad_members:t = "player_tank09"
			squad_members:t = "player_tank10"
			squad_members:t = "player_tank11"
			squad_members:t = "player_tank12"
			squad_members:t = "player_tank13"
			squad_members:t = "player_tank14"
			squad_members:t = "player_tank15"
			squad_members:t = "player_tank16"
			squad_members:t = "player_tank17"
			squad_members:t = "player_tank18"
			squad_members:t = "player_tank19"
			squad_members:t = "player_tank20"
			squad_members:t = "player_tank21"
			squad_members:t = "player_tank22"
			squad_members:t = "player_tank23"
			squad_members:t = "player_tank24"
			squad_members:t = "player_tank25"
			squad_members:t = "player_tank26"
			squad_members:t = "player_tank27"
			squad_members:t = "player_tank28"
			squad_members:t = "player_tank29"
			squad_members:t = "player_tank30"
			squad_members:t = "player_tank31"
			squad_members:t = "player_tank32"
			object_marking:i = 0
		}
	}
	tankModels {
		name:t = "player_tank01"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [1735.74, 453.473, 2299.26]]
		unit_class:t = "aaa_dummy"
		objLayer:i = 1
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 1
			formation_type:t = "rows"
			formation_div:i = 3
			formation_step:p2 = 2.5, 2
			formation_noise:p2 = 0.1, 0.1
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
			isDelayed:b = true
		}
		way {

		}
	}
	tankModels {
		name:t = "player_tank02"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [1735.74, 453.473, 2298.57]]
		unit_class:t = "aaa_dummy"
		objLayer:i = 1
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 1
			formation_type:t = "rows"
			formation_div:i = 3
			formation_step:p2 = 2.5, 2
			formation_noise:p2 = 0.1, 0.1
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
			isDelayed:b = true
		}
		way {

		}
	}
	tankModels {
		name:t = "player_tank03"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [1735.74, 453.473, 2297.87]]
		unit_class:t = "aaa_dummy"
		objLayer:i = 1
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 1
			formation_type:t = "rows"
			formation_div:i = 3
			formation_step:p2 = 2.5, 2
			formation_noise:p2 = 0.1, 0.1
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
			isDelayed:b = true
		}
		way {

		}
	}
	tankModels {
		name:t = "player_tank04"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [1735.74, 453.473, 2297.18]]
		unit_class:t = "aaa_dummy"
		objLayer:i = 1
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 1
			formation_type:t = "rows"
			formation_div:i = 3
			formation_step:p2 = 2.5, 2
			formation_noise:p2 = 0.1, 0.1
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
			isDelayed:b = true
		}
		way {

		}
	}
	tankModels {
		name:t = "player_tank05"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [1735.74, 453.473, 2296.49]]
		unit_class:t = "aaa_dummy"
		objLayer:i = 1
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 1
			formation_type:t = "rows"
			formation_div:i = 3
			formation_step:p2 = 2.5, 2
			formation_noise:p2 = 0.1, 0.1
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
			isDelayed:b = true
		}
		way {

		}
	}
	tankModels {
		name:t = "player_tank06"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [1735.74, 453.473, 2295.79]]
		unit_class:t = "aaa_dummy"
		objLayer:i = 1
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 1
			formation_type:t = "rows"
			formation_div:i = 3
			formation_step:p2 = 2.5, 2
			formation_noise:p2 = 0.1, 0.1
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
			isDelayed:b = true
		}
		way {

		}
	}
	tankModels {
		name:t = "player_tank07"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [1735.74, 453.473, 2295.1]]
		unit_class:t = "aaa_dummy"
		objLayer:i = 1
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 1
			formation_type:t = "rows"
			formation_div:i = 3
			formation_step:p2 = 2.5, 2
			formation_noise:p2 = 0.1, 0.1
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
			isDelayed:b = true
		}
		way {

		}
	}
	tankModels {
		name:t = "player_tank08"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [1735.74, 453.473, 2294.41]]
		unit_class:t = "aaa_dummy"
		objLayer:i = 1
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 1
			formation_type:t = "rows"
			formation_div:i = 3
			formation_step:p2 = 2.5, 2
			formation_noise:p2 = 0.1, 0.1
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
			isDelayed:b = true
		}
		way {

		}
	}
	tankModels {
		name:t = "player_tank09"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [1735.74, 453.473, 2293.72]]
		unit_class:t = "aaa_dummy"
		objLayer:i = 1
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 1
			formation_type:t = "rows"
			formation_div:i = 3
			formation_step:p2 = 2.5, 2
			formation_noise:p2 = 0.1, 0.1
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
			isDelayed:b = true
		}
		way {

		}
	}
	tankModels {
		name:t = "player_tank10"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [1735.74, 453.473, 2293.02]]
		unit_class:t = "aaa_dummy"
		objLayer:i = 1
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 1
			formation_type:t = "rows"
			formation_div:i = 3
			formation_step:p2 = 2.5, 2
			formation_noise:p2 = 0.1, 0.1
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
			isDelayed:b = true
		}
		way {

		}
	}
	tankModels {
		name:t = "player_tank11"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [1735.74, 453.473, 2292.33]]
		unit_class:t = "aaa_dummy"
		objLayer:i = 1
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 1
			formation_type:t = "rows"
			formation_div:i = 3
			formation_step:p2 = 2.5, 2
			formation_noise:p2 = 0.1, 0.1
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
			isDelayed:b = true
		}
		way {

		}
	}
	tankModels {
		name:t = "player_tank12"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [1735.74, 453.473, 2291.64]]
		unit_class:t = "aaa_dummy"
		objLayer:i = 1
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 1
			formation_type:t = "rows"
			formation_div:i = 3
			formation_step:p2 = 2.5, 2
			formation_noise:p2 = 0.1, 0.1
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
			isDelayed:b = true
		}
		way {

		}
	}
	tankModels {
		name:t = "player_tank13"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [1735.74, 453.473, 2290.94]]
		unit_class:t = "aaa_dummy"
		objLayer:i = 1
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 1
			formation_type:t = "rows"
			formation_div:i = 3
			formation_step:p2 = 2.5, 2
			formation_noise:p2 = 0.1, 0.1
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
			isDelayed:b = true
		}
		way {

		}
	}
	tankModels {
		name:t = "player_tank14"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [1735.74, 453.473, 2290.25]]
		unit_class:t = "aaa_dummy"
		objLayer:i = 1
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 1
			formation_type:t = "rows"
			formation_div:i = 3
			formation_step:p2 = 2.5, 2
			formation_noise:p2 = 0.1, 0.1
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
			isDelayed:b = true
		}
		way {

		}
	}
	tankModels {
		name:t = "player_tank15"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [1735.74, 453.473, 2289.56]]
		unit_class:t = "aaa_dummy"
		objLayer:i = 1
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 1
			formation_type:t = "rows"
			formation_div:i = 3
			formation_step:p2 = 2.5, 2
			formation_noise:p2 = 0.1, 0.1
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
			isDelayed:b = true
		}
		way {

		}
	}
	tankModels {
		name:t = "player_tank16"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [1735.74, 453.473, 2288.86]]
		unit_class:t = "aaa_dummy"
		objLayer:i = 1
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 1
			formation_type:t = "rows"
			formation_div:i = 3
			formation_step:p2 = 2.5, 2
			formation_noise:p2 = 0.1, 0.1
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
			isDelayed:b = true
		}
		way {

		}
	}
	tankModels {
		name:t = "player_tank17"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [1735.74, 453.473, 2288.23]]
		unit_class:t = "aaa_dummy"
		objLayer:i = 1
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 1
			formation_type:t = "rows"
			formation_div:i = 3
			formation_step:p2 = 2.5, 2
			formation_noise:p2 = 0.1, 0.1
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
			isDelayed:b = true
		}
		way {

		}
	}
	tankModels {
		name:t = "player_tank18"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [1735.74, 453.473, 2287.59]]
		unit_class:t = "aaa_dummy"
		objLayer:i = 1
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 1
			formation_type:t = "rows"
			formation_div:i = 3
			formation_step:p2 = 2.5, 2
			formation_noise:p2 = 0.1, 0.1
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
			isDelayed:b = true
		}
		way {

		}
	}
	tankModels {
		name:t = "player_tank19"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [1735.74, 453.473, 2286.96]]
		unit_class:t = "aaa_dummy"
		objLayer:i = 1
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 1
			formation_type:t = "rows"
			formation_div:i = 3
			formation_step:p2 = 2.5, 2
			formation_noise:p2 = 0.1, 0.1
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
			isDelayed:b = true
		}
		way {

		}
	}
	tankModels {
		name:t = "player_tank20"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [1735.74, 453.473, 2286.33]]
		unit_class:t = "aaa_dummy"
		objLayer:i = 1
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 1
			formation_type:t = "rows"
			formation_div:i = 3
			formation_step:p2 = 2.5, 2
			formation_noise:p2 = 0.1, 0.1
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
			isDelayed:b = true
		}
		way {

		}
	}
	tankModels {
		name:t = "player_tank21"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [1735.74, 453.473, 2285.69]]
		unit_class:t = "aaa_dummy"
		objLayer:i = 1
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 1
			formation_type:t = "rows"
			formation_div:i = 3
			formation_step:p2 = 2.5, 2
			formation_noise:p2 = 0.1, 0.1
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
			isDelayed:b = true
		}
		way {

		}
	}
	tankModels {
		name:t = "player_tank22"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [1735.74, 453.473, 2285.06]]
		unit_class:t = "aaa_dummy"
		objLayer:i = 1
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 1
			formation_type:t = "rows"
			formation_div:i = 3
			formation_step:p2 = 2.5, 2
			formation_noise:p2 = 0.1, 0.1
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
			isDelayed:b = true
		}
		way {

		}
	}
	tankModels {
		name:t = "player_tank23"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [1735.74, 453.473, 2284.43]]
		unit_class:t = "aaa_dummy"
		objLayer:i = 1
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 1
			formation_type:t = "rows"
			formation_div:i = 3
			formation_step:p2 = 2.5, 2
			formation_noise:p2 = 0.1, 0.1
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
			isDelayed:b = true
		}
		way {

		}
	}
	tankModels {
		name:t = "player_tank24"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [1735.74, 453.473, 2283.79]]
		unit_class:t = "aaa_dummy"
		objLayer:i = 1
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 1
			formation_type:t = "rows"
			formation_div:i = 3
			formation_step:p2 = 2.5, 2
			formation_noise:p2 = 0.1, 0.1
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
			isDelayed:b = true
		}
		way {

		}
	}
	tankModels {
		name:t = "player_tank25"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [1735.74, 453.473, 2283.16]]
		unit_class:t = "aaa_dummy"
		objLayer:i = 1
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 1
			formation_type:t = "rows"
			formation_div:i = 3
			formation_step:p2 = 2.5, 2
			formation_noise:p2 = 0.1, 0.1
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
			isDelayed:b = true
		}
		way {

		}
	}
	tankModels {
		name:t = "player_tank26"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [1735.74, 453.473, 2282.53]]
		unit_class:t = "aaa_dummy"
		objLayer:i = 1
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 1
			formation_type:t = "rows"
			formation_div:i = 3
			formation_step:p2 = 2.5, 2
			formation_noise:p2 = 0.1, 0.1
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
			isDelayed:b = true
		}
		way {

		}
	}
	tankModels {
		name:t = "player_tank27"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [1735.74, 453.473, 2281.89]]
		unit_class:t = "aaa_dummy"
		objLayer:i = 1
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 1
			formation_type:t = "rows"
			formation_div:i = 3
			formation_step:p2 = 2.5, 2
			formation_noise:p2 = 0.1, 0.1
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
			isDelayed:b = true
		}
		way {

		}
	}
	tankModels {
		name:t = "player_tank28"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [1735.74, 453.473, 2281.26]]
		unit_class:t = "aaa_dummy"
		objLayer:i = 1
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 1
			formation_type:t = "rows"
			formation_div:i = 3
			formation_step:p2 = 2.5, 2
			formation_noise:p2 = 0.1, 0.1
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
			isDelayed:b = true
		}
		way {

		}
	}
	tankModels {
		name:t = "player_tank29"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [1735.74, 453.473, 2280.63]]
		unit_class:t = "aaa_dummy"
		objLayer:i = 1
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 1
			formation_type:t = "rows"
			formation_div:i = 3
			formation_step:p2 = 2.5, 2
			formation_noise:p2 = 0.1, 0.1
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
			isDelayed:b = true
		}
		way {

		}
	}
	tankModels {
		name:t = "player_tank30"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [1735.74, 453.473, 2279.99]]
		unit_class:t = "aaa_dummy"
		objLayer:i = 1
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 1
			formation_type:t = "rows"
			formation_div:i = 3
			formation_step:p2 = 2.5, 2
			formation_noise:p2 = 0.1, 0.1
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
			isDelayed:b = true
		}
		way {

		}
	}
	tankModels {
		name:t = "player_tank31"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [1735.74, 453.473, 2279.36]]
		unit_class:t = "aaa_dummy"
		objLayer:i = 1
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 1
			formation_type:t = "rows"
			formation_div:i = 3
			formation_step:p2 = 2.5, 2
			formation_noise:p2 = 0.1, 0.1
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
			isDelayed:b = true
		}
		way {

		}
	}
	tankModels {
		name:t = "player_tank32"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [1735.74, 453.473, 2278.73]]
		unit_class:t = "aaa_dummy"
		objLayer:i = 1
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 1
			formation_type:t = "rows"
			formation_div:i = 3
			formation_step:p2 = 2.5, 2
			formation_noise:p2 = 0.1, 0.1
			uniqueName:t = ""
			attack_type:t = "fire_at_will"
			isDelayed:b = true
		}
		way {

		}
	}
}
areas {

}
objLayers {
	layer {
		enabled:b = true
	}
	layer {
		enabled:b = true
	}
	layer {
		enabled:b = true
	}
	layer {
		enabled:b = true
	}
}
wayPoints {

}