selected_tag:t = ""
bin_dump_file:t = ""
mission_settings {
	player {
		army:i = 1
	}
	player_teamB {
		army:i = 2
	}
	mission {
		level:t = "levels/water.bin"
		type:t = "domination"
		environment:t = "Day"
		weather:t = "clear"
		restoreType:t = "attempts"
		optionalTakeOff:b = false
	}
}
imports {

}
triggers {
	isCategory:b = true
	is_enabled:b = true
	defence_a_init {
		is_enabled:b = true
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {
			missionNamePostfix {
				postfix:t = "_DBttlA"
			}
			missionNamePostfix {
				postfix:t = "_CnvA"
			}
			missionNamePostfix {
				postfix:t = "_BDA"
			}
			missionNamePostfix {
				postfix:t = "_deepdefa"
			}
			missionNamePostfix {
				postfix:t = "_aadefa"
			}
			missionNamePostfix {
				postfix:t = "_sead"
			}
			missionNamePostfix {
				postfix:t = "_strbomb"
			}
		}
		actions {
			triggerEnable {
				target:t = "t1_no_attackers_false"
				target:t = "t1_no_attackers_timer_renewable"
			}
		}
		else_actions {

		}
	}
	defence_b_init {
		is_enabled:b = true
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {
			missionNamePostfix {
				postfix:t = "_DBttlB"
			}
			missionNamePostfix {
				postfix:t = "_CnvB"
			}
			missionNamePostfix {
				postfix:t = "_BDB"
			}
			missionNamePostfix {
				postfix:t = "_deepdefb"
			}
			missionNamePostfix {
				postfix:t = "_aadefb"
			}
		}
		actions {
			triggerEnable {
				target:t = "t2_no_attackers_false"
				target:t = "t2_no_attackers_timer_renewable"
			}
		}
		else_actions {

		}
	}
	t1_no_attackers_timer_enable {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			unitWhenCountMatches {
				object_type:t = "isActive"
				object_marking:i = 0
				func:t = "less"
				value:i = 1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object:t = "t2_players_squad"
				object_var_value:i = 0
			}
		}
		actions {
			triggerEnable {
				target:t = "t1_no_attackers_timer_renewable"
				target:t = "t1_no_attackers_false"
			}
		}
		else_actions {

		}
	}
	t1_no_attackers_false {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			unitWhenCountMatches {
				object_type:t = "isActive"
				object_marking:i = 0
				func:t = "notLess"
				value:i = 1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object:t = "t2_players_squad"
				object_var_value:i = 0
			}
		}
		actions {
			playHint {
				hintType:t = "standard"
				name:t = "hints/no_attackers_so_mission_end"
				action:t = "hide"
				shouldFadeOut:b = false
				isOverFade:b = false
				time:r = -1
				priority:i = 0
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
			}
			varSetInt {
				value:i = 60
				var:t = "no_attackers_timer_renewable"
			}
			triggerDisable {
				target:t = "t1_no_attackers_timer_renewable"
				target:t = "t1_no_attackers_timer_accumulative"
			}
			triggerEnable {
				target:t = "t1_no_attackers_timer_enable"
			}
		}
		else_actions {

		}
	}
	t1_no_attackers_timer_renewable {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "no_attackers_timer_renewable"
				value:i = 0
				comparasion_func:t = "more"
			}
		}
		actions {
			varModify {
				operator:t = "add"
				value:r = -1
				var:t = "no_attackers_timer_renewable"
			}
		}
		else_actions {
			triggerEnable {
				target:t = "t1_no_attackers_timer_accumulative"
			}
		}
	}
	t1_no_attackers_timer_accumulative {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "no_attackers_timer_accumulative"
				value:i = 1
				comparasion_func:t = "notLess"
			}
		}
		actions {
			playHint {
				hintType:t = "standard"
				name:t = "hints/no_attackers_so_mission_end"
				action:t = "show"
				shouldFadeOut:b = false
				isOverFade:b = false
				time:r = -1
				priority:i = 0
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				var_name:t = "no_attackers_timer_accumulative"
			}
			varModify {
				operator:t = "add"
				value:r = -1
				var:t = "no_attackers_timer_accumulative"
			}
		}
		else_actions {
			playHint {
				hintType:t = "standard"
				name:t = "hints/no_attackers_so_mission_end"
				action:t = "hide"
				shouldFadeOut:b = false
				isOverFade:b = false
				time:r = -1
				priority:i = 0
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
			}
			triggerEnable {
				target:t = "t1_no_attackers_mission_end"
			}
		}
	}
	t1_no_attackers_mission_end {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 0.33
			}
		}
		conditions {

		}
		actions {
			gameMPChangeScore {
				value:i = -33
				valueSystem:t = "percentage"
				team:t = "B"
			}
		}
		else_actions {

		}
	}
	t2_no_attackers_timer_enable {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			unitWhenCountMatches {
				object_type:t = "isActive"
				object_marking:i = 0
				func:t = "less"
				value:i = 1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object:t = "t1_players_squad"
				object_var_value:i = 0
			}
		}
		actions {
			triggerEnable {
				target:t = "t2_no_attackers_timer_renewable"
				target:t = "t2_no_attackers_false"
			}
		}
		else_actions {

		}
	}
	t2_no_attackers_false {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			unitWhenCountMatches {
				object_type:t = "isActive"
				object_marking:i = 0
				func:t = "notLess"
				value:i = 1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object:t = "t1_players_squad"
				object_var_value:i = 0
			}
		}
		actions {
			playHint {
				hintType:t = "standard"
				name:t = "hints/no_attackers_so_mission_end"
				action:t = "hide"
				shouldFadeOut:b = false
				isOverFade:b = false
				time:r = -1
				priority:i = 0
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
			}
			varSetInt {
				value:i = 60
				var:t = "no_attackers_timer_renewable"
			}
			triggerDisable {
				target:t = "t2_no_attackers_timer_renewable"
				target:t = "t2_no_attackers_timer_accumulative"
			}
			triggerEnable {
				target:t = "t2_no_attackers_timer_enable"
			}
		}
		else_actions {

		}
	}
	t2_no_attackers_timer_renewable {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "no_attackers_timer_renewable"
				value:i = 0
				comparasion_func:t = "more"
			}
		}
		actions {
			varModify {
				operator:t = "add"
				value:r = -1
				var:t = "no_attackers_timer_renewable"
			}
		}
		else_actions {
			triggerEnable {
				target:t = "t2_no_attackers_timer_accumulative"
			}
		}
	}
	t2_no_attackers_timer_accumulative {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "no_attackers_timer_accumulative"
				value:i = 1
				comparasion_func:t = "notLess"
			}
		}
		actions {
			playHint {
				hintType:t = "standard"
				name:t = "hints/no_attackers_so_mission_end"
				action:t = "show"
				shouldFadeOut:b = false
				isOverFade:b = false
				time:r = -1
				priority:i = 0
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				var_name:t = "no_attackers_timer_accumulative"
			}
			varModify {
				operator:t = "add"
				value:r = -1
				var:t = "no_attackers_timer_accumulative"
			}
		}
		else_actions {
			playHint {
				hintType:t = "standard"
				name:t = "hints/no_attackers_so_mission_end"
				action:t = "hide"
				shouldFadeOut:b = false
				isOverFade:b = false
				time:r = -1
				priority:i = 0
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
			}
			triggerEnable {
				target:t = "t2_no_attackers_mission_end"
			}
		}
	}
	t2_no_attackers_mission_end {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 0.33
			}
		}
		conditions {

		}
		actions {
			gameMPChangeScore {
				value:i = -33
				valueSystem:t = "percentage"
				team:t = "A"
			}
		}
		else_actions {

		}
	}
}
mission_objectives {
	isCategory:b = true
	is_enabled:b = true
}
variables {
	no_attackers_timer_renewable:i = 60
	no_attackers_timer_accumulative:i = 60
}
dialogs {

}
airfields {

}
effects {

}
units {

}
areas {

}
objLayers {
	layer {
		enabled:b = true
	}
	layer {
		enabled:b = true
	}
	layer {
		enabled:b = true
	}
	layer {
		enabled:b = true
	}
}
wayPoints {

}