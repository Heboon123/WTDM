selected_tag:t = ""
bin_dump_file:t = ""
mission_settings {
	player {
		army:i = 1
		wing:t = ""
	}
	player_teamB {
		army:i = 2
	}
	mission {
		level:t = "levels/water.bin"
		type:t = "singleMission"
		restoreType:t = "attempts"
		optionalTakeOff:b = false
		environment:t = "Day"
		weather:t = "hazy"
		scoreLimit:i = 10000
	}
	spectator_points {

	}
}
imports {

}
triggers {
	isCategory:b = true
	is_enabled:b = true
	tcp_init {
		is_enabled:b = true
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
			initMission {

			}
		}
		conditions {

		}
		actions {
			moAddMissionObjective {
				target:t = "avg_Capt_objective_01"
			}
			unitPutToSleep {
				target:t = "tcp_t1_capture_area_01_group"
				target:t = "tcp_t1_capture_area_02_group"
				target:t = "tcp_t1_capture_area_03_group"
				target:t = "tcp_t1_capture_area_04_group"
				target:t = "tcp_t1_capture_area_05_group"
				target:t = "tcp_t1_capture_area_06_group"
			}
			unitPutToSleep {
				target:t = "tcp_t2_capture_area_01_group"
				target:t = "tcp_t2_capture_area_02_group"
				target:t = "tcp_t2_capture_area_03_group"
				target:t = "tcp_t2_capture_area_04_group"
				target:t = "tcp_t2_capture_area_05_group"
			}
			varSetInt {
				var:t = "tcp_point_spawn_timer"
				value:i = 0
			}
			varSetRandomInt {
				var:t = "tcp_last_side"
				from:i = 1
				to_not_including:i = 3
			}
			comment {
				value:t = "prinuditel'no startuem central'nuyu tochku"
			}
			varSetString {
				var:t = "tcp_cur_point"
				value:t = "tcp_t1_capture_area_06"
			}
			triggerEnable {
				target:t = "tcp_t1_check_choose_point"
			}
		}
		else_actions {

		}
	}
	tcp_timers_updater {
		is_enabled:b = true
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {

		}
		actions {
			varModify {
				var:t = "tcp_point_spawn_timer"
				operator:t = "add"
				value:r = 1
			}
			varModify {
				var:t = "tcp_point_01_timer"
				operator:t = "add"
				value:r = 1
			}
			varModify {
				var:t = "tcp_point_02_timer"
				operator:t = "add"
				value:r = 1
			}
			varModify {
				var:t = "tcp_point_03_timer"
				operator:t = "add"
				value:r = 1
			}
		}
		else_actions {

		}
	}
	tcp_new_capture_point {
		is_enabled:b = true
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "tcp_point_spawn_timer"
				value:i = 0
				comparasion_func:t = "more"
				var_value_other:t = "tcp_delay_between_spawns"
			}
			varCompareInt {
				var_value:t = "tcp_active_zones_counter"
				value:i = 3
				comparasion_func:t = "less"
			}
		}
		actions {
			varSetInt {
				var:t = "tcp_point_spawn_timer"
				value:i = 0
			}
			triggerEnable {
				target:t = "tcp_t1_side_chooser"
				target:t = "tcp_t2_side_chooser"
			}
		}
		else_actions {

		}
	}
	tcp_t1_side_chooser {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "tcp_last_side"
				value:i = 2
				comparasion_func:t = "equal"
			}
		}
		actions {
			triggerDisable {
				target:t = "tcp_t2_side_chooser"
			}
			varSetInt {
				var:t = "tcp_last_side"
				value:i = 1
			}
			triggerEnable {
				target:t = "tcp_t1_start_point_chooser"
			}
		}
		else_actions {

		}
	}
	tcp_t2_side_chooser {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "tcp_last_side"
				value:i = 1
				comparasion_func:t = "equal"
			}
		}
		actions {
			triggerDisable {
				target:t = "tcp_t1_side_chooser"
			}
			varSetInt {
				var:t = "tcp_last_side"
				value:i = 2
			}
			triggerEnable {
				target:t = "tcp_t2_start_point_chooser"
			}
		}
		else_actions {

		}
	}
	tcp_t1_start_point_chooser {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			varCompareString {
				var_value:t = "tcp_area_01"
				value:t = ""
				comparasion_func:t = "equal"
			}
			varCompareString {
				var_value:t = "tcp_area_02"
				value:t = ""
				comparasion_func:t = "equal"
			}
			varCompareString {
				var_value:t = "tcp_area_03"
				value:t = ""
				comparasion_func:t = "equal"
			}
		}
		actions {
			comment {
				value:t = "na 1 tochku bol'she, tak kak dobavlyaem central'nuyu"
			}
			varSetRandomInt {
				var:t = "tcp_point_randomizer"
				from:i = 1
				to_not_including:i = 7
			}
			varSetString {
				var:t = "tcp_cur_point"
				value:t = "tcp_t1_capture_area_"
			}
			varAddString {
				var:t = "tcp_cur_point"
				value:t = "@tcp_point_randomizer"
				digits:i = 2
			}
			triggerEnable {
				target:t = "tcp_t1_check_choose_point"
			}
		}
		else_actions {

		}
	}
	tcp_t2_start_point_chooser {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			varCompareString {
				var_value:t = "tcp_area_01"
				value:t = ""
				comparasion_func:t = "equal"
			}
			varCompareString {
				var_value:t = "tcp_area_02"
				value:t = ""
				comparasion_func:t = "equal"
			}
			varCompareString {
				var_value:t = "tcp_area_03"
				value:t = ""
				comparasion_func:t = "equal"
			}
		}
		actions {
			varSetRandomInt {
				var:t = "tcp_point_randomizer"
				from:i = 1
				to_not_including:i = 6
			}
			varSetString {
				var:t = "tcp_cur_point"
				value:t = "tcp_t2_capture_area_"
			}
			varAddString {
				var:t = "tcp_cur_point"
				value:t = "@tcp_point_randomizer"
				digits:i = 2
			}
			triggerEnable {
				target:t = "tcp_t2_check_choose_point"
			}
		}
		else_actions {

		}
	}
	tcp_t1_check_choose_point {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			varCompareString {
				var_value:t = "tcp_area_01"
				value:t = "@tcp_cur_point"
				comparasion_func:t = "notEqual"
			}
			varCompareString {
				var_value:t = "tcp_area_02"
				value:t = "@tcp_cur_point"
				comparasion_func:t = "notEqual"
			}
			varCompareString {
				var_value:t = "tcp_area_03"
				value:t = "@tcp_cur_point"
				comparasion_func:t = "notEqual"
			}
		}
		actions {
			varSetString {
				var:t = "tcp_cur_point_possibility"
				value:t = ""
			}
			varAddString {
				var:t = "tcp_cur_point_possibility"
				value:t = "@tcp_cur_point"
				digits:i = 0
			}
			varAddString {
				var:t = "tcp_cur_point_possibility"
				value:t = "_possibility"
				digits:i = 0
			}
			triggerEnable {
				target:t = "tcp_t1_fail_choose_point"
			}
		}
		else_actions {
			triggerEnable {
				target:t = "tcp_t1_start_point_chooser"
			}
		}
	}
	tcp_t2_check_choose_point {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			varCompareString {
				var_value:t = "tcp_area_01"
				value:t = "@tcp_cur_point"
				comparasion_func:t = "notEqual"
			}
			varCompareString {
				var_value:t = "tcp_area_02"
				value:t = "@tcp_cur_point"
				comparasion_func:t = "notEqual"
			}
			varCompareString {
				var_value:t = "tcp_area_03"
				value:t = "@tcp_cur_point"
				comparasion_func:t = "notEqual"
			}
		}
		actions {
			varSetString {
				var:t = "tcp_cur_point_possibility"
				value:t = ""
			}
			varAddString {
				var:t = "tcp_cur_point_possibility"
				value:t = "@tcp_cur_point"
				digits:i = 0
			}
			varAddString {
				var:t = "tcp_cur_point_possibility"
				value:t = "_possibility"
				digits:i = 0
			}
			triggerEnable {
				target:t = "tcp_t2_fail_choose_point"
			}
		}
		else_actions {
			triggerEnable {
				target:t = "tcp_t2_start_point_chooser"
			}
		}
	}
	tcp_t1_fail_choose_point {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "@tcp_cur_point_possibility"
				value:i = 1
				comparasion_func:t = "notEqual"
			}
		}
		actions {
			triggerEnable {
				target:t = "tcp_t1_start_point_chooser"
			}
		}
		else_actions {
			varSetInt {
				var:t = "@tcp_cur_point_possibility"
				value:i = 0
			}
			triggerEnable {
				target:t = "tcp_choose_point_01"
				target:t = "tcp_choose_point_02"
				target:t = "tcp_choose_point_03"
			}
		}
	}
	tcp_t2_fail_choose_point {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "@tcp_cur_point_possibility"
				value:i = 1
				comparasion_func:t = "notEqual"
			}
		}
		actions {
			triggerEnable {
				target:t = "tcp_t2_start_point_chooser"
			}
		}
		else_actions {
			varSetInt {
				var:t = "@tcp_cur_point_possibility"
				value:i = 0
			}
			triggerEnable {
				target:t = "tcp_choose_point_01"
				target:t = "tcp_choose_point_02"
				target:t = "tcp_choose_point_03"
			}
		}
	}
	t1_all_zones_uses {
		is_enabled:b = true
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "tcp_t1_capture_area_01_possibility"
				value:i = 0
				comparasion_func:t = "equal"
			}
			varCompareInt {
				var_value:t = "tcp_t1_capture_area_02_possibility"
				value:i = 0
				comparasion_func:t = "equal"
			}
			varCompareInt {
				var_value:t = "tcp_t1_capture_area_03_possibility"
				value:i = 0
				comparasion_func:t = "equal"
			}
			varCompareInt {
				var_value:t = "tcp_t1_capture_area_04_possibility"
				value:i = 0
				comparasion_func:t = "equal"
			}
			varCompareInt {
				var_value:t = "tcp_t1_capture_area_05_possibility"
				value:i = 0
				comparasion_func:t = "equal"
			}
			varCompareInt {
				var_value:t = "tcp_t1_capture_area_06_possibility"
				value:i = 0
				comparasion_func:t = "equal"
			}
		}
		actions {
			comment {
				value:t = "vse zony byli ispol'zovany po razu.  nachinaem novyj krug"
			}
			varSetInt {
				var:t = "tcp_t1_capture_area_01_possibility"
				value:i = 1
			}
			varSetInt {
				var:t = "tcp_t1_capture_area_02_possibility"
				value:i = 1
			}
			varSetInt {
				var:t = "tcp_t1_capture_area_03_possibility"
				value:i = 1
			}
			varSetInt {
				var:t = "tcp_t1_capture_area_04_possibility"
				value:i = 1
			}
			varSetInt {
				var:t = "tcp_t1_capture_area_05_possibility"
				value:i = 1
			}
			varSetInt {
				var:t = "tcp_t1_capture_area_06_possibility"
				value:i = 1
			}
		}
		else_actions {

		}
	}
	t2_all_zones_uses {
		is_enabled:b = true
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "tcp_t2_capture_area_01_possibility"
				value:i = 0
				comparasion_func:t = "equal"
			}
			varCompareInt {
				var_value:t = "tcp_t2_capture_area_02_possibility"
				value:i = 0
				comparasion_func:t = "equal"
			}
			varCompareInt {
				var_value:t = "tcp_t2_capture_area_03_possibility"
				value:i = 0
				comparasion_func:t = "equal"
			}
			varCompareInt {
				var_value:t = "tcp_t2_capture_area_04_possibility"
				value:i = 0
				comparasion_func:t = "equal"
			}
			varCompareInt {
				var_value:t = "tcp_t2_capture_area_05_possibility"
				value:i = 0
				comparasion_func:t = "equal"
			}
		}
		actions {
			comment {
				value:t = "vse zony byli ispol'zovany po razu.  nachinaem novyj krug"
			}
			varSetInt {
				var:t = "tcp_t2_capture_area_01_possibility"
				value:i = 1
			}
			varSetInt {
				var:t = "tcp_t2_capture_area_02_possibility"
				value:i = 1
			}
			varSetInt {
				var:t = "tcp_t2_capture_area_03_possibility"
				value:i = 1
			}
			varSetInt {
				var:t = "tcp_t2_capture_area_04_possibility"
				value:i = 1
			}
			varSetInt {
				var:t = "tcp_t2_capture_area_05_possibility"
				value:i = 1
			}
		}
		else_actions {

		}
	}
	tcp_zone_captured_by_t1_reward {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {

		}
		actions {
			varSetInt {
				var:t = "tcp_mp_reward"
				value:i = 0
			}
			varModify {
				var:t = "tcp_mp_reward"
				operator:t = "add"
				value:r = 20
				use_variable:b = false
			}
			varModify {
				var:t = "tcp_mp_reward"
				operator:t = "mul"
				value:r = -100
			}
			varModify {
				var:t = "tcp_mp_reward"
				operator:t = "mul"
				value:r = 1
				use_variable:b = true
				var_value:t = "tcp_mp_multiplier"
			}
			gameMPChangeScore {
				value:i = 0
				valueSystem:t = "amount"
				var:t = "tcp_mp_reward"
				team:t = "B"
			}
		}
		else_actions {

		}
	}
	tcp_zone_captured_by_t2_reward {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {

		}
		actions {
			varSetInt {
				var:t = "tcp_mp_reward"
				value:i = 0
			}
			varModify {
				var:t = "tcp_mp_reward"
				operator:t = "add"
				value:r = 20
				use_variable:b = false
			}
			varModify {
				var:t = "tcp_mp_reward"
				operator:t = "mul"
				value:r = -100
			}
			varModify {
				var:t = "tcp_mp_reward"
				operator:t = "mul"
				value:r = 1
				use_variable:b = true
				var_value:t = "tcp_mp_multiplier"
			}
			gameMPChangeScore {
				value:i = 0
				valueSystem:t = "amount"
				var:t = "tcp_mp_reward"
				team:t = "A"
			}
		}
		else_actions {

		}
	}
	tcp_choose_point_01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			varCompareString {
				var_value:t = "tcp_area_01"
				value:t = ""
				comparasion_func:t = "equal"
			}
			varCompareString {
				var_value:t = "tcp_area_02"
				value:t = "@tcp_cur_point"
				comparasion_func:t = "notEqual"
			}
			varCompareString {
				var_value:t = "tcp_area_03"
				value:t = "@tcp_cur_point"
				comparasion_func:t = "notEqual"
			}
		}
		actions {
			triggerDisable {
				target:t = "tcp_choose_point_02"
				target:t = "tcp_choose_point_03"
			}
			varSetString {
				var:t = "tcp_area_01"
				value:t = ""
			}
			varAddString {
				var:t = "tcp_area_01"
				value:t = "@tcp_cur_point"
				digits:i = 0
			}
			varSetInt {
				var:t = "tcp_point_01_timer"
				value:i = 0
			}
			varModify {
				var:t = "tcp_zones_counter"
				operator:t = "add"
				value:r = 1
			}
			varModify {
				var:t = "tcp_mp_multiplier"
				operator:t = "add"
				value:r = 0.1
			}
			varSetString {
				var:t = "tcp_capture_group"
				value:t = ""
			}
			varAddString {
				var:t = "tcp_capture_group"
				value:t = "@tcp_area_01"
				digits:i = 0
			}
			varAddString {
				var:t = "tcp_capture_group"
				value:t = "_group"
				digits:i = 0
			}
			unitWakeUp {
				target:t = "@tcp_capture_group"
			}
			missionMarkAsCaptureZone {
				army:i = 0
				timeMultiplier:r = 1.5
				disableZone:b = false
				name_for_respawn_base:t = ""
				target:t = "@tcp_area_01"
				canCaptureOnGround:b = false
				canCaptureInAir:b = false
				canCaptureByGM:b = true
				captureNoPenalty:b = true
			}
			varModify {
				var:t = "tcp_active_zones_counter"
				operator:t = "add"
				value:r = 1
			}
			varSetInt {
				var:t = "tcp_point_spawn_timer"
				value:i = 0
			}
			varSetString {
				var:t = "tcp_capture_effect"
				value:t = ""
			}
			varAddString {
				var:t = "tcp_capture_effect"
				value:t = "@tcp_area_01"
				digits:i = 0
			}
			varAddString {
				var:t = "tcp_capture_effect"
				value:t = "_effect"
				digits:i = 0
			}
			unitPlayEffect {
				effect_type:t = "specify"
				effect:t = "pv_point_smoke_blue"
				offset:p3 = 0, 0, 0
				radiusOffset:p2 = 0, 0
				show:b = true
				attach:b = true
				scale:r = 1
				loopSpawn:b = true
				delay:p2 = 1, 1
				target:t = "@tcp_capture_effect"
			}
			triggerEnable {
				target:t = "tcp_despawn_point_01"
				target:t = "tcp_t1_captured_zone_01"
				target:t = "tcp_t1_captured_zone_01"
			}
		}
		else_actions {

		}
	}
	tcp_despawn_point_01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "tcp_point_01_timer"
				value:i = 0
				comparasion_func:t = "more"
				var_value_other:t = "tcp_wait_capture_timer"
			}
		}
		actions {
			missionMarkAsCaptureZone {
				army:i = 0
				timeMultiplier:r = 1.5
				disableZone:b = true
				name_for_respawn_base:t = ""
				target:t = "@tcp_area_01"
			}
			varSetString {
				var:t = "tcp_capture_group"
				value:t = ""
			}
			varAddString {
				var:t = "tcp_capture_group"
				value:t = "@tcp_area_01"
				digits:i = 0
			}
			varAddString {
				var:t = "tcp_capture_group"
				value:t = "_group"
				digits:i = 0
			}
			unitPutToSleep {
				target:t = "@tcp_capture_group"
			}
			varModify {
				var:t = "tcp_active_zones_counter"
				operator:t = "add"
				value:r = -1
			}
			varSetString {
				var:t = "tcp_capture_effect"
				value:t = ""
			}
			varAddString {
				var:t = "tcp_capture_effect"
				value:t = "@tcp_area_01"
				digits:i = 0
			}
			varAddString {
				var:t = "tcp_capture_effect"
				value:t = "_effect"
				digits:i = 0
			}
			unitPlayEffect {
				effect_type:t = "specify"
				effect:t = "pv_point_smoke_blue"
				offset:p3 = 0, 0, 0
				radiusOffset:p2 = 0, 0
				show:b = false
				attach:b = false
				scale:r = 1
				loopSpawn:b = true
				delay:p2 = 1, 1
				target:t = "@tcp_capture_effect"
			}
			triggerDisable {
				target:t = "tcp_t1_captured_zone_01"
				target:t = "tcp_t1_captured_zone_02"
			}
			varSetString {
				var:t = "tcp_area_01"
				value:t = ""
			}
		}
		else_actions {

		}
	}
	tcp_t1_captured_zone_01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			missionIsZoneCaptured {
				target:t = "@tcp_area_01"
				army:i = 1
			}
		}
		actions {
			triggerEnable {
				target:t = "tcp_zone_captured_by_t1_reward"
				target:t = "tcp_captured_zone_01_disable"
			}
		}
		else_actions {

		}
	}
	tcp_t2_captured_zone_01 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			missionIsZoneCaptured {
				target:t = "@tcp_area_01"
				army:i = 2
			}
		}
		actions {
			triggerEnable {
				target:t = "tcp_zone_captured_by_t2_reward"
				target:t = "tcp_captured_zone_01_disable"
			}
		}
		else_actions {

		}
	}
	tcp_choose_point_02 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			varCompareString {
				var_value:t = "tcp_area_02"
				value:t = ""
				comparasion_func:t = "equal"
			}
			varCompareString {
				var_value:t = "tcp_area_01"
				value:t = "@tcp_cur_point"
				comparasion_func:t = "notEqual"
			}
			varCompareString {
				var_value:t = "tcp_area_03"
				value:t = "@tcp_cur_point"
				comparasion_func:t = "notEqual"
			}
		}
		actions {
			triggerDisable {
				target:t = "tcp_choose_point_01"
				target:t = "tcp_choose_point_03"
			}
			varSetString {
				var:t = "tcp_area_02"
				value:t = ""
			}
			varAddString {
				var:t = "tcp_area_02"
				value:t = "@tcp_cur_point"
				digits:i = 0
			}
			varSetInt {
				var:t = "tcp_point_02_timer"
				value:i = 0
			}
			varModify {
				var:t = "tcp_zones_counter"
				operator:t = "add"
				value:r = 1
			}
			varModify {
				var:t = "tcp_mp_multiplier"
				operator:t = "add"
				value:r = 0.1
			}
			varSetString {
				var:t = "tcp_capture_group"
				value:t = ""
			}
			varAddString {
				var:t = "tcp_capture_group"
				value:t = "@tcp_area_02"
				digits:i = 0
			}
			varAddString {
				var:t = "tcp_capture_group"
				value:t = "_group"
				digits:i = 0
			}
			unitWakeUp {
				target:t = "@tcp_capture_group"
			}
			missionMarkAsCaptureZone {
				army:i = 0
				timeMultiplier:r = 1.5
				disableZone:b = false
				name_for_respawn_base:t = ""
				target:t = "@tcp_area_02"
				canCaptureOnGround:b = false
				canCaptureInAir:b = false
				canCaptureByGM:b = true
				captureNoPenalty:b = true
			}
			varModify {
				var:t = "tcp_active_zones_counter"
				operator:t = "add"
				value:r = 1
			}
			varSetInt {
				var:t = "tcp_point_spawn_timer"
				value:i = 0
			}
			varSetString {
				var:t = "tcp_capture_effect"
				value:t = ""
			}
			varAddString {
				var:t = "tcp_capture_effect"
				value:t = "@tcp_area_02"
				digits:i = 0
			}
			varAddString {
				var:t = "tcp_capture_effect"
				value:t = "_effect"
				digits:i = 0
			}
			unitPlayEffect {
				effect_type:t = "specify"
				effect:t = "pv_point_smoke_blue"
				offset:p3 = 0, 0, 0
				radiusOffset:p2 = 0, 0
				show:b = true
				attach:b = true
				scale:r = 1
				loopSpawn:b = true
				delay:p2 = 1, 1
				target:t = "@tcp_capture_effect"
			}
			triggerEnable {
				target:t = "tcp_despawn_point_02"
				target:t = "tcp_t1_captured_zone_02"
				target:t = "tcp_t2_captured_zone_02"
			}
		}
		else_actions {

		}
	}
	tcp_despawn_point_02 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "tcp_point_02_timer"
				value:i = 0
				comparasion_func:t = "more"
				var_value_other:t = "tcp_wait_capture_timer"
			}
		}
		actions {
			missionMarkAsCaptureZone {
				army:i = 0
				timeMultiplier:r = 1.5
				disableZone:b = true
				name_for_respawn_base:t = ""
				target:t = "@tcp_area_02"
			}
			varSetString {
				var:t = "tcp_capture_group"
				value:t = ""
			}
			varAddString {
				var:t = "tcp_capture_group"
				value:t = "@tcp_area_02"
				digits:i = 0
			}
			varAddString {
				var:t = "tcp_capture_group"
				value:t = "_group"
				digits:i = 0
			}
			unitPutToSleep {
				target:t = "@tcp_capture_group"
			}
			varModify {
				var:t = "tcp_active_zones_counter"
				operator:t = "add"
				value:r = -1
			}
			varSetString {
				var:t = "tcp_capture_effect"
				value:t = ""
			}
			varAddString {
				var:t = "tcp_capture_effect"
				value:t = "@tcp_area_02"
				digits:i = 0
			}
			varAddString {
				var:t = "tcp_capture_effect"
				value:t = "_effect"
				digits:i = 0
			}
			unitPlayEffect {
				effect_type:t = "specify"
				effect:t = "pv_point_smoke_blue"
				offset:p3 = 0, 0, 0
				radiusOffset:p2 = 0, 0
				show:b = false
				attach:b = false
				scale:r = 1
				loopSpawn:b = true
				delay:p2 = 1, 1
				target:t = "@tcp_capture_effect"
			}
			triggerDisable {
				target:t = "tcp_t1_captured_zone_02"
				target:t = "tcp_t2_captured_zone_02"
			}
			varSetString {
				var:t = "tcp_area_02"
				value:t = ""
			}
		}
		else_actions {

		}
	}
	tcp_t1_captured_zone_02 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			missionIsZoneCaptured {
				target:t = "@tcp_area_02"
				army:i = 1
			}
		}
		actions {
			triggerEnable {
				target:t = "tcp_zone_captured_by_t1_reward"
				target:t = "tcp_captured_zone_02_disable"
			}
		}
		else_actions {

		}
	}
	tcp_t2_captured_zone_02 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			missionIsZoneCaptured {
				target:t = "@tcp_area_02"
				army:i = 2
			}
		}
		actions {
			triggerEnable {
				target:t = "tcp_zone_captured_by_t2_reward"
				target:t = "tcp_captured_zone_02_disable"
			}
		}
		else_actions {

		}
	}
	tcp_choose_point_03 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			varCompareString {
				var_value:t = "tcp_area_03"
				value:t = ""
				comparasion_func:t = "equal"
			}
			varCompareString {
				var_value:t = "tcp_area_01"
				value:t = "@tcp_cur_point"
				comparasion_func:t = "notEqual"
			}
			varCompareString {
				var_value:t = "tcp_area_02"
				value:t = "@tcp_cur_point"
				comparasion_func:t = "notEqual"
			}
		}
		actions {
			triggerDisable {
				target:t = "tcp_choose_point_01"
				target:t = "tcp_choose_point_02"
			}
			varSetString {
				var:t = "tcp_area_03"
				value:t = ""
			}
			varAddString {
				var:t = "tcp_area_03"
				value:t = "@tcp_cur_point"
				digits:i = 0
			}
			varSetInt {
				var:t = "tcp_point_03_timer"
				value:i = 0
			}
			varModify {
				var:t = "tcp_zones_counter"
				operator:t = "add"
				value:r = 1
			}
			varModify {
				var:t = "tcp_mp_multiplier"
				operator:t = "add"
				value:r = 0.1
			}
			varSetString {
				var:t = "tcp_capture_group"
				value:t = ""
			}
			varAddString {
				var:t = "tcp_capture_group"
				value:t = "@tcp_area_03"
				digits:i = 0
			}
			varAddString {
				var:t = "tcp_capture_group"
				value:t = "_group"
				digits:i = 0
			}
			unitWakeUp {
				target:t = "@tcp_capture_group"
			}
			missionMarkAsCaptureZone {
				army:i = 0
				timeMultiplier:r = 1.5
				disableZone:b = false
				name_for_respawn_base:t = ""
				target:t = "@tcp_area_03"
				canCaptureOnGround:b = false
				canCaptureInAir:b = false
				canCaptureByGM:b = true
				captureNoPenalty:b = true
			}
			varModify {
				var:t = "tcp_active_zones_counter"
				operator:t = "add"
				value:r = 1
			}
			varSetInt {
				var:t = "tcp_point_spawn_timer"
				value:i = 0
			}
			varSetString {
				var:t = "tcp_capture_effect"
				value:t = ""
			}
			varAddString {
				var:t = "tcp_capture_effect"
				value:t = "@tcp_area_03"
				digits:i = 0
			}
			varAddString {
				var:t = "tcp_capture_effect"
				value:t = "_effect"
				digits:i = 0
			}
			unitPlayEffect {
				effect_type:t = "specify"
				effect:t = "pv_point_smoke_blue"
				offset:p3 = 0, 0, 0
				radiusOffset:p2 = 0, 0
				show:b = true
				attach:b = true
				scale:r = 1
				loopSpawn:b = true
				delay:p2 = 1, 1
				target:t = "@tcp_capture_effect"
			}
			triggerEnable {
				target:t = "tcp_despawn_point_01"
				target:t = "tcp_t1_captured_zone_03"
				target:t = "tcp_t2_captured_zone_03"
			}
		}
		else_actions {

		}
	}
	tcp_t1_despawn_point_03 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "tcp_point_03_timer"
				value:i = 0
				comparasion_func:t = "more"
				var_value_other:t = "tcp_wait_capture_timer"
			}
		}
		actions {
			missionMarkAsCaptureZone {
				army:i = 0
				timeMultiplier:r = 1.5
				disableZone:b = true
				name_for_respawn_base:t = ""
				target:t = "@tcp_area_03"
			}
			varSetString {
				var:t = "tcp_capture_group"
				value:t = ""
			}
			varAddString {
				var:t = "tcp_capture_group"
				value:t = "@tcp_area_03"
				digits:i = 0
			}
			varAddString {
				var:t = "tcp_capture_group"
				value:t = "_group"
				digits:i = 0
			}
			unitPutToSleep {
				target:t = "@tcp_capture_group"
			}
			varModify {
				var:t = "tcp_active_zones_counter"
				operator:t = "add"
				value:r = -1
			}
			varSetString {
				var:t = "tcp_capture_effect"
				value:t = ""
			}
			varAddString {
				var:t = "tcp_capture_effect"
				value:t = "@tcp_area_03"
				digits:i = 0
			}
			varAddString {
				var:t = "tcp_capture_effect"
				value:t = "_effect"
				digits:i = 0
			}
			unitPlayEffect {
				effect_type:t = "specify"
				effect:t = "pv_point_smoke_blue"
				offset:p3 = 0, 0, 0
				radiusOffset:p2 = 0, 0
				show:b = false
				attach:b = false
				scale:r = 1
				loopSpawn:b = true
				delay:p2 = 1, 1
				target:t = "@tcp_capture_effect"
			}
			triggerDisable {
				target:t = "tcp_t1_captured_zone_03"
				target:t = "tcp_t2_captured_zone_03"
			}
			varSetString {
				var:t = "tcp_area_03"
				value:t = ""
			}
		}
		else_actions {

		}
	}
	tcp_t1_captured_zone_03 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			missionIsZoneCaptured {
				target:t = "@tcp_area_03"
				army:i = 1
			}
		}
		actions {
			triggerEnable {
				target:t = "tcp_zone_captured_by_t1_reward"
				target:t = "tcp_captured_zone_03_disable"
			}
		}
		else_actions {

		}
	}
	tcp_t2_captured_zone_03 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			missionIsZoneCaptured {
				target:t = "@tcp_area_03"
				army:i = 2
			}
		}
		actions {
			triggerEnable {
				target:t = "tcp_zone_captured_by_t2_reward"
				target:t = "tcp_captured_zone_03_disable"
			}
		}
		else_actions {

		}
	}
	tcp_captured_zone_01_disable {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {

		}
		actions {
			varSetInt {
				var:t = "tcp_point_01_timer"
				value:i = 0
			}
			varModify {
				var:t = "tcp_point_01_timer"
				operator:t = "add"
				value:r = 1
				use_variable:b = true
				var_value:t = "tcp_wait_capture_timer"
			}
			varModify {
				var:t = "tcp_point_01_timer"
				operator:t = "add"
				value:r = 1
			}
			triggerEnable {
				target:t = "tcp_despawn_point_01"
			}
		}
		else_actions {

		}
	}
	tcp_captured_zone_02_disable {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {

		}
		actions {
			varSetInt {
				var:t = "tcp_point_02_timer"
				value:i = 0
			}
			varModify {
				var:t = "tcp_point_02_timer"
				operator:t = "add"
				value:r = 1
				use_variable:b = true
				var_value:t = "tcp_wait_capture_timer"
			}
			varModify {
				var:t = "tcp_point_02_timer"
				operator:t = "add"
				value:r = 1
			}
			triggerEnable {
				target:t = "tcp_despawn_point_02"
			}
		}
		else_actions {

		}
	}
	tcp_captured_zone_03_disable {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {

		}
		actions {
			varSetInt {
				var:t = "tcp_point_03_timer"
				value:i = 0
			}
			varModify {
				var:t = "tcp_point_03_timer"
				operator:t = "add"
				value:r = 1
				use_variable:b = true
				var_value:t = "tcp_wait_capture_timer"
			}
			varModify {
				var:t = "tcp_point_03_timer"
				operator:t = "add"
				value:r = 1
			}
			triggerEnable {
				target:t = "tcp_t1_despawn_point_03"
			}
		}
		else_actions {

		}
	}
}
mission_objectives {
	isCategory:b = true
	is_enabled:b = true
	avg_Capt_objective_01 {
		is_enabled:b = false
		comments:t = ""
		type:t = "abstractMissionObjective"
		props {
			isPrimary:b = true
			timeLimit:i = 3600
			team:t = "Both"
		}
		onSuccess {

		}
		onFailed {

		}
	}
}
variables {
	tcp_point_randomizer:i = 0
	tcp_point_spawn_timer:i = 0
	tcp_wait_capture_timer:i = 180
	tcp_delay_between_spawns:i = 60
	tcp_last_side:i = 0
	tcp_zones_counter:i = 0
	tcp_mp_multiplier:r = 1
	tcp_mp_reward:i = 0
	tcp_point_01_timer:i = 0
	tcp_point_02_timer:i = 0
	tcp_point_03_timer:i = 0
	tcp_active_zones_counter:i = 0
	tcp_area_01:t = ""
	tcp_area_02:t = ""
	tcp_area_03:t = ""
	tcp_cur_point:t = ""
	tcp_capture_group:t = ""
	tcp_capture_effect:t = ""
	tcp_t1_capture_area_01_possibility:i = 1
	tcp_t1_capture_area_02_possibility:i = 1
	tcp_t1_capture_area_03_possibility:i = 1
	tcp_t1_capture_area_04_possibility:i = 1
	tcp_t1_capture_area_05_possibility:i = 1
	tcp_t1_capture_area_06_possibility:i = 1
	tcp_cur_point_possibility:t = ""
	tcp_t2_capture_area_01_possibility:i = 1
	tcp_t2_capture_area_02_possibility:i = 1
	tcp_t2_capture_area_03_possibility:i = 1
	tcp_t2_capture_area_04_possibility:i = 1
	tcp_t2_capture_area_05_possibility:i = 1
}
dialogs {

}
airfields {

}
effects {

}
units {

}
areas {

}
objLayers {
	layer {
		enabled:b = true
	}
	layer {
		enabled:b = true
	}
	layer {
		enabled:b = true
	}
	layer {
		enabled:b = true
	}
}