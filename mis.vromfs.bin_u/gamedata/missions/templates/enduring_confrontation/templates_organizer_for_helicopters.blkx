selected_tag:t = ""
bin_dump_file:t = ""
mission_settings {
	player {
		army:i = 1
		wing:t = "t1_player01"
	}
	player_teamB {
		army:i = 2
	}
	mission {
		level:t = "levels/water.bin"
		type:t = "singleMission"
		environment:t = "Day"
		weather:t = "hazy"
		timeLimit:i = 240
		restoreType:t = "attempts"
		optionalTakeOff:b = false
	}
	spectator_points {

	}
}
imports {

}
triggers {
	isCategory:b = true
	is_enabled:b = true
	to_init {
		is_enabled:b = true
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {

		}
		actions {
			varSetInt {
				value:i = 0
				var:t = "to_randomizer"
				var:t = "to_last_randomizer"
			}
			triggerEnable {
				target:t = "to_template_delay_start"
			}
		}
		else_actions {

		}
	}
	to_template_delay_start {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
				var:t = "to_delay_timer"
			}
		}
		conditions {

		}
		actions {
			triggerEnable {
				target:t = "to_template_choosing"
			}
		}
		else_actions {

		}
	}
	to_template_choosing {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 30
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "to_cur_launched_templates"
				value:i = 0
				comparasion_func:t = "less"
				var_value_other:t = "to_max_templates_to_launch"
			}
		}
		actions {
			comment {
				value:t = "selecting random event"
			}
			varSetRandomInt {
				var:t = "to_randomizer"
				from:i = 1
				to_not_including:i = 3
				var_to_not_including:t = "to_templates_quantity"
			}
			comment {
				value:t = "choose specific template"
			}
			__varSetInt {
				value:i = 1
				var:t = "to_force_template_idx"
			}
			comment {
				value:t = "proveryaem net li forsirovaniya shablona"
			}
			triggerEnable {
				target:t = "to_check_force_template"
			}
		}
		else_actions {

		}
	}
	to_check_force_template {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "to_force_template_idx"
				value:i = 0
				comparasion_func:t = "more"
			}
		}
		actions {
			comment {
				value:t = "prinuditel'nyj vyzov shablona "
			}
			varSetInt {
				value:i = 0
				var:t = "to_randomizer"
				input_var:t = "to_force_template_idx"
			}
			__comment {
				value:t = "obnulyaem forsirovanie"
			}
			varSetInt {
				value:i = 0
				var:t = "to_force_template_idx"
			}
			comment {
				value:t = "skipaem proverku predydushchego shablona"
			}
			triggerEnable {
				target:t = "to_template_fill_army"
			}
		}
		else_actions {
			comment {
				value:t = "net prinuditel'nogo vyzova shablona"
			}
			comment {
				value:t = "idem dal'she po logike - zapolnyaem armiyu (nuzhna nekotorym shablonam)"
			}
			triggerEnable {
				target:t = "to_check_prev_template"
			}
		}
	}
	to_check_prev_template {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "to_randomizer"
				value:i = 0
				comparasion_func:t = "equal"
				var_value_other:t = "to_last_randomizer"
			}
		}
		actions {
			comment {
				value:t = "tekushchij shabon vypal takoj-zhe kak predydushchij"
			}
			triggerEnable {
				target:t = "to_template_choosing"
			}
		}
		else_actions {
			comment {
				value:t = "tekushchij i predydushchij shablony ne sovpadayut"
			}
			varSetInt {
				value:i = 0
				var:t = "to_last_randomizer"
				input_var:t = "to_randomizer"
			}
			triggerEnable {
				target:t = "to_template_fill_army"
			}
		}
	}
	to_template_fill_army {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			varCompareBool {
				var_value:t = "to_pve_enable"
				value:b = false
				comparasion_func:t = "equal"
			}
		}
		actions {
			comment {
				value:t = "it's PVP both armies are posssible"
			}
			varSetRandomInt {
				var:t = "to_army"
				from:i = 1
				to_not_including:i = 3
			}
			triggerEnable {
				target:t = "to_template_check_army"
			}
		}
		else_actions {
			comment {
				value:t = "it's PVE"
			}
			varSetInt {
				value:i = 2
				var:t = "to_army"
			}
			triggerEnable {
				target:t = "to_template_skip_check_army"
			}
		}
	}
	to_template_check_army {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "to_army"
				value:i = 0
				comparasion_func:t = "notEqual"
				var_value_other:t = "to_last_army"
			}
		}
		actions {
			comment {
				value:t = "armiya ne sovpala edinozhdy zapuskaem proverki vseh sobytij"
			}
			triggerActivate {
				target:t = "to_template_01_at_check"
				activate_type:t = "checkConidtions"
				check_trigger_status:b = false
				after_activation:t = "disable"
			}
			triggerActivate {
				target:t = "to_template_02_bt_check"
				activate_type:t = "checkConidtions"
				check_trigger_status:b = false
				after_activation:t = "disable"
			}
			comment {
				value:t = "zapominaem poslednyuyu armiyu"
			}
			varSetInt {
				value:i = 0
				var:t = "to_last_army"
				input_var:t = "to_army"
			}
			comment {
				value:t = "vklyuchaem trigger aktivacii sleduyushchego zadaniya"
			}
			triggerEnable {
				target:t = "to_template_choosing"
			}
		}
		else_actions {
			comment {
				value:t = "armiya sovpala"
			}
			triggerEnable {
				target:t = "to_template_fill_army"
			}
		}
	}
	to_template_skip_check_army {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {

		}
		actions {
			comment {
				value:t = "starting templates activation"
			}
			triggerActivate {
				target:t = "to_template_01_at_check"
				activate_type:t = "checkConidtions"
				check_trigger_status:b = false
				after_activation:t = "disable"
			}
			triggerActivate {
				target:t = "to_template_02_bt_check"
				activate_type:t = "checkConidtions"
				check_trigger_status:b = false
				after_activation:t = "disable"
			}
			comment {
				value:t = "storing cur army value"
			}
			varSetInt {
				value:i = 0
				var:t = "to_last_army"
				input_var:t = "to_army"
			}
			comment {
				value:t = "selecting another template"
			}
			triggerEnable {
				target:t = "to_template_choosing"
			}
		}
		else_actions {

		}
	}
	01 - assaults {
		isCategory:b = true
		is_enabled:b = true
		to_template_01_at_check {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 5
				}
			}
			conditions {
				varCompareInt {
					var_value:t = "to_randomizer"
					value:i = 1
					comparasion_func:t = "equal"
				}
				varCompareBool {
					var_value:t = "at_is_launch_alowed"
					value:b = true
					comparasion_func:t = "equal"
				}
				varCompareBool {
					var_value:t = "at_is_template_active"
					value:b = false
					comparasion_func:t = "equal"
				}
				varCompareInt {
					var_value:t = "to_force_template_idx"
					value:i = 0
					comparasion_func:t = "equal"
				}
				triggerStatus {
					status:t = "disabled"
					target:t = "to_template_01_at_end"
				}
			}
			actions {
				comment {
					value:t = "proveryaem vypalo li sobytie esli da - zapuskaem dal'nejshuyu proverku"
				}
				varSetInt {
					value:i = 0
					var:t = "at_army_both_zero"
					input_var:t = "to_army"
				}
				triggerEnable {
					target:t = "to_template_01_at_choose"
				}
			}
			else_actions {

			}
		}
		to_template_01_at_choose {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ANY"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {

			}
			actions {
				varModify {
					operator:t = "add"
					value:r = 1
					var:t = "to_cur_launched_templates"
				}
				comment {
					value:t = "stavim flag, chto shablon zapustilsya"
				}
				varSetBool {
					value:b = true
					var:t = "at_is_template_active"
				}
				comment {
					value:t = "zadaem sluchajnoe vremya starta"
				}
				varSetRandomInt {
					var:t = "at_assaults_delay_timer"
					from:i = 10
					to_not_including:i = 30
				}
				comment {
					value:t = "zapuskaem sobytie"
				}
				triggerEnable {
					target:t = "to_template_01_at_run"
				}
			}
			else_actions {
				comment {
					value:t = "sobytie uzhe zapushcheno - avtomatom sgeneritsya novoe"
				}
			}
		}
		to_template_01_at_run {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {

			}
			actions {
				comment {
					value:t = "govorim chto rezhim raboty shablona: jip"
				}
				varSetString {
					value:t = "jip"
					var:t = "at_assault_game_type"
				}
				comment {
					value:t = "zapuskaem starter shablona, govorim, chto shablon zapushchen"
				}
				triggerEnable {
					target:t = "at_start"
					target:t = "to_template_01_at_end"
				}
			}
			else_actions {

			}
		}
		to_template_01_at_end {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {
				varCompareBool {
					var_value:t = "at_is_template_active"
					value:b = false
					comparasion_func:t = "equal"
				}
			}
			actions {
				varModify {
					operator:t = "add"
					value:r = -1
					var:t = "to_cur_launched_templates"
				}
			}
			else_actions {

			}
		}
	}
	02 - boombers {
		isCategory:b = true
		is_enabled:b = true
		to_template_02_bt_check {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 5
				}
			}
			conditions {
				varCompareInt {
					var_value:t = "to_randomizer"
					value:i = 2
					comparasion_func:t = "equal"
				}
				varCompareBool {
					var_value:t = "bt_is_launch_alowed"
					value:b = true
					comparasion_func:t = "equal"
				}
				varCompareBool {
					var_value:t = "bt_is_template_active"
					value:b = false
					comparasion_func:t = "equal"
				}
				varCompareInt {
					var_value:t = "to_force_template_idx"
					value:i = 0
					comparasion_func:t = "equal"
				}
				triggerStatus {
					status:t = "disabled"
					target:t = "to_template_02_bt_end"
				}
			}
			actions {
				comment {
					value:t = "proveryaem vypalo li sobytie esli da - zapuskaem dal'nejshuyu proverku"
				}
				varSetInt {
					value:i = 0
					var:t = "bt_army_both_zero"
					input_var:t = "to_army"
				}
				triggerEnable {
					target:t = "to_template_02_bt_choose"
				}
			}
			else_actions {

			}
		}
		to_template_02_bt_choose {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ANY"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {

			}
			actions {
				varModify {
					operator:t = "add"
					value:r = 1
					var:t = "to_cur_launched_templates"
				}
				comment {
					value:t = "stavim flag, chto shablon zapustilsya"
				}
				varSetBool {
					value:b = true
					var:t = "bt_is_template_active"
				}
				comment {
					value:t = "zadaem sluchajnoe vremya starta"
				}
				varSetRandomInt {
					var:t = "bt_delay_timer"
					from:i = 10
					to_not_including:i = 30
				}
				comment {
					value:t = "zapuskaem sobytie"
				}
				triggerEnable {
					target:t = "bt_start"
				}
				wait {
					time:r = 10
				}
				triggerEnable {
					target:t = "to_template_02_bt_run"
				}
			}
			else_actions {
				comment {
					value:t = "sobytie uzhe zapushcheno - avtomatom sgeneritsya novoe"
				}
			}
		}
		to_template_02_bt_run {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {

			}
			actions {
				comment {
					value:t = "zapuskaem starter shablona, govorim, chto shablon zapushchen"
				}
				triggerEnable {
					target:t = "to_template_02_bt_end"
				}
			}
			else_actions {

			}
		}
		to_template_02_bt_end {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {
				varCompareBool {
					var_value:t = "bt_is_template_active"
					value:b = false
					comparasion_func:t = "equal"
				}
			}
			actions {
				varModify {
					operator:t = "add"
					value:r = -1
					var:t = "to_cur_launched_templates"
				}
			}
			else_actions {

			}
		}
	}
}
mission_objectives {
	isCategory:b = true
	is_enabled:b = true
}
variables {
	to_templates_quantity:i = 3
	to_cur_launched_templates:i = 0
	to_max_templates_to_launch:i = 3
	to_randomizer:i = 0
	to_army:i = 0
	to_last_army:i = -1
	to_force_template_idx:i = 0
	to_last_randomizer:i = 0
	to_delay_timer:i = 240
	to_pve_enable:b = false
	at_is_launch_alowed:b = true
	bt_is_launch_alowed:b = true
}
dialogs {

}
airfields {

}
effects {

}
units {

}
areas {

}
objLayers {
	layer {
		enabled:b = true
	}
	layer {
		enabled:b = true
	}
	layer {
		enabled:b = true
	}
	layer {
		enabled:b = true
	}
}
wayPoints {

}