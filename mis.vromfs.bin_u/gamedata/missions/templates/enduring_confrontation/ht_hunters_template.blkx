selected_tag:t = ""
bin_dump_file:t = ""
mission_settings {
	player {
		army:i = 1
	}
	player_teamB {
		army:i = 2
	}
	mission {
		type:t = "singleMission"
		level:t = "levels/water.bin"
		environment:t = "Day"
		weather:t = "hazy"
	}
}
imports {

}
triggers {
	isCategory:b = true
	is_enabled:b = true
	ht_init {
		is_enabled:b = true
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {

		}
		actions {
			unitLoadBehTree {
				name:t = "missionFighter"
				objects:t = "ht_t1_hunter"
				objects:t = "ht_t2_hunter"
			}
			unitSetProperties {
				object_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				object:t = "ht_t1_hunter"
				object:t = "ht_t2_hunter"
				stealthRadius:r = 1500
				calmDetection:b = true
			}
			triggerEnable {
				target:t = "ht_t1_restart"
				target:t = "ht_t2_restart"
			}
		}
		else_actions {

		}
	}
	ht_t1_routine {
		isCategory:b = true
		is_enabled:b = true
		ht_t1_restart {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 30
					var:t = "ht_restart_delay_timer"
				}
			}
			conditions {

			}
			actions {
				triggerEnable {
					target:t = "ht_t1_start"
				}
			}
			else_actions {

			}
		}
		ht_t1_start {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {
				varCompareBool {
					var_value:t = "ht_t1_is_active"
					value:b = false
					comparasion_func:t = "equal"
				}
			}
			actions {
				comment {
					value:t = ""
				}
				triggerDisable {
					target:t = "ht_t1_attack"
					target:t = "ht_t1_retreat"
				}
				comment {
					value:t = ""
				}
				triggerEnable {
					target:t = "ht_t1_choose_bombers"
				}
			}
			else_actions {
				triggerEnable {
					target:t = "ht_t1_restart"
				}
			}
		}
		ht_t1_choose_bombers {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {
				varCompareBool {
					var_value:t = "bt_t2_is_active"
					value:b = true
					comparasion_func:t = "equal"
				}
				unitWhenCountMatches {
					object_type:t = "isActive"
					object_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					func:t = "more"
					value:i = 3
					object:t = "@ht_t1_bomber_target_name"
				}
			}
			actions {
				comment {
					value:t = "bombers template is active"
				}
				varGetStringValue {
					from_var_name:t = "ht_t1_bomber_target_name"
					var:t = "ht_t1_cur_target_name"
				}
				varGetStringValue {
					from_var_name:t = "ht_t1_bomber_cover_name"
					var:t = "ht_t1_cur_cover_name"
				}
				comment {
					value:t = ""
				}
				triggerEnable {
					target:t = "ht_t1_spawn"
				}
			}
			else_actions {
				comment {
					value:t = "bombers template is no active"
				}
				triggerEnable {
					target:t = "ht_t1_choose_sea_bombers"
				}
			}
		}
		ht_t1_choose_sea_bombers {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {
				varCompareBool {
					var_value:t = "sbt_t2_is_active"
					value:b = true
					comparasion_func:t = "equal"
				}
				unitWhenCountMatches {
					object_type:t = "isActive"
					object_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					func:t = "more"
					value:i = 3
					object:t = "@ht_t1_sea_bomber_target_name"
				}
			}
			actions {
				comment {
					value:t = "sea bombers template is active"
				}
				varGetStringValue {
					from_var_name:t = "ht_t1_sea_bomber_target_name"
					var:t = "ht_t1_cur_target_name"
				}
				varGetStringValue {
					from_var_name:t = "ht_t1_sea_bomber_cover_name"
					var:t = "ht_t1_cur_cover_name"
				}
				comment {
					value:t = ""
				}
				triggerEnable {
					target:t = "ht_t1_spawn"
				}
			}
			else_actions {
				comment {
					value:t = "sea bombers template is no active"
				}
				triggerEnable {
					target:t = "ht_t1_choose_assaults"
				}
			}
		}
		ht_t1_choose_assaults {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {
				varCompareBool {
					var_value:t = "at_t2_is_active"
					value:b = true
					comparasion_func:t = "equal"
				}
				unitWhenCountMatches {
					object_type:t = "isActive"
					object_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					func:t = "more"
					value:i = 3
					object:t = "@ht_t1_assault_target_name"
				}
			}
			actions {
				comment {
					value:t = "assaults template is active"
				}
				varGetStringValue {
					from_var_name:t = "ht_t1_assault_target_name"
					var:t = "ht_t1_cur_target_name"
				}
				varGetStringValue {
					from_var_name:t = "ht_t1_assault_cover_name"
					var:t = "ht_t1_cur_cover_name"
				}
				comment {
					value:t = ""
				}
				triggerEnable {
					target:t = "ht_t1_spawn"
				}
			}
			else_actions {
				comment {
					value:t = "assaults template is no active"
				}
				triggerEnable {
					target:t = "ht_t1_restart"
				}
			}
		}
		ht_t1_spawn {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {

			}
			actions {
				comment {
					value:t = ""
				}
				varSetBool {
					value:b = true
					var:t = "ht_t1_is_active"
				}
				comment {
					value:t = ""
				}
				unitRespawn {
					delay:r = 0
					offset:p3 = 0, 0, 0
					object:t = "ht_t1_hunter"
					target:t = "ht_t1_hunter_spawn_point"
					isStealth:b = true
					resetFormation:b = true
				}
				comment {
					value:t = ""
				}
				wait {
					time:r = 1
				}
				comment {
					value:t = ""
				}
				unitMoveTo {
					object_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object_var_value:i = 0
					target:t = "@ht_t1_cur_target_name"
					target_marking:i = 0
					waypointReachedDist:r = 10
					recalculatePathDist:r = -1
					follow_target:b = true
					fastClimb:b = false
					destTimeMode:b = false
					teleportHeightType:t = "absolute"
					useUnitHeightForTele:b = true
					shouldKeepFormation:b = true
					teleportHeightValue:r = 1000
					horizontalDirectionForTeleport:b = true
					target_var_name:t = ""
					target_var_comp_op:t = "equal"
					target_var_value:i = 0
					object:t = "ht_t1_hunter"
					useFormationCenter:b = false
					teleportOffset:p3 = 0, 1000, 0
				}
				comment {
					value:t = ""
				}
				triggerEnable {
					target:t = "ht_t1_attack"
					target:t = "ht_t1_died"
				}
			}
			else_actions {

			}
		}
		ht_t1_attack {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {
				unitDistanceBetween {
					value:r = 3500
					math:t = "2D"
					object_type:t = "isActive"
					object_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					target_type:t = "isActive"
					target_marking:i = 0
					check_objects:t = "any"
					check_targets:t = "any"
					object:t = "ht_t1_hunter"
					target:t = "@ht_t1_cur_target_name"
					compareCenters:b = false
				}
			}
			actions {
				unitMoveTo {
					object_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object_var_value:i = 0
					target:t = "ht_t1_hunter_retreat_point"
					target_marking:i = 0
					waypointReachedDist:r = 10
					recalculatePathDist:r = -1
					follow_target:b = false
					fastClimb:b = false
					destTimeMode:b = false
					teleportHeightType:t = "absolute"
					useUnitHeightForTele:b = true
					shouldKeepFormation:b = false
					teleportHeightValue:r = 1000
					horizontalDirectionForTeleport:b = true
					target_var_name:t = ""
					target_var_comp_op:t = "equal"
					target_var_value:i = 0
					object:t = "ht_t1_hunter"
				}
				unitAttackTarget {
					playerAttracted:b = false
					object:t = "ht_t1_hunter"
					target:t = "@ht_t1_cur_target_name"
					target:t = "@ht_t1_cur_cover_name"
					target:t = "t2_players_squad"
					fireRandom:b = true
					anchorTarget:t = "@ht_t1_cur_target_name"
					targetToAnchorDist:p2 = 3500, 5000
				}
				comment {
					value:t = ""
				}
				triggerEnable {
					target:t = "ht_t1_retreat"
				}
			}
			else_actions {

			}
		}
		ht_t1_retreat {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = true
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {
				unitDistanceBetween {
					value:r = 4500
					math:t = "2D"
					object_type:t = "isActive"
					object_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					target_type:t = "isActive"
					target_marking:i = 0
					check_objects:t = "any"
					check_targets:t = "any"
					object:t = "ht_t1_hunter"
					target:t = "ht_t1_hunter_retreat_point"
					compareCenters:b = false
				}
			}
			actions {
				unitPutToSleep {
					target:t = "ht_t1_hunter"
					useForTriggerFiltered:b = true
				}
			}
			else_actions {

			}
		}
		ht_t1_died {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {
				unitWhenCountMatches {
					object_type:t = "isActive"
					object_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					func:t = "less"
					value:i = 1
					object:t = "ht_t1_hunter"
				}
			}
			actions {
				triggerDisable {
					target:t = "ht_t1_attack"
					target:t = "ht_t1_retreat"
				}
			}
			else_actions {

			}
		}
	}
	ht_t2_routine {
		isCategory:b = true
		is_enabled:b = true
		ht_t2_restart {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 30
					var:t = "ht_restart_delay_timer"
				}
			}
			conditions {

			}
			actions {
				triggerEnable {
					target:t = "ht_t2_start"
				}
			}
			else_actions {

			}
		}
		ht_t2_start {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {
				varCompareBool {
					var_value:t = "ht_t2_is_active"
					value:b = false
					comparasion_func:t = "equal"
				}
			}
			actions {
				comment {
					value:t = ""
				}
				triggerDisable {
					target:t = "ht_t2_attack"
					target:t = "ht_t2_retreat"
				}
				comment {
					value:t = ""
				}
				triggerEnable {
					target:t = "ht_t2_choose_bombers"
				}
			}
			else_actions {
				triggerEnable {
					target:t = "ht_t2_restart"
				}
			}
		}
		ht_t2_choose_bombers {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {
				varCompareBool {
					var_value:t = "bt_t1_is_active"
					value:b = true
					comparasion_func:t = "equal"
				}
				unitWhenCountMatches {
					object_type:t = "isActive"
					object_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					func:t = "more"
					value:i = 3
					object:t = "@ht_t2_bomber_target_name"
				}
			}
			actions {
				comment {
					value:t = "bombers template is active"
				}
				varGetStringValue {
					from_var_name:t = "ht_t2_bomber_target_name"
					var:t = "ht_t2_cur_target_name"
				}
				varGetStringValue {
					from_var_name:t = "ht_t2_bomber_cover_name"
					var:t = "ht_t2_cur_cover_name"
				}
				comment {
					value:t = ""
				}
				triggerEnable {
					target:t = "ht_t2_spawn"
				}
			}
			else_actions {
				comment {
					value:t = "bombers template is no active"
				}
				triggerEnable {
					target:t = "ht_t2_choose_sea_bombers"
				}
			}
		}
		ht_t2_choose_sea_bombers {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {
				varCompareBool {
					var_value:t = "sbt_t1_is_active"
					value:b = true
					comparasion_func:t = "equal"
				}
				unitWhenCountMatches {
					object_type:t = "isActive"
					object_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					func:t = "more"
					value:i = 3
					object:t = "@ht_t2_sea_bomber_target_name"
				}
			}
			actions {
				comment {
					value:t = "sea bombers template is active"
				}
				varGetStringValue {
					from_var_name:t = "ht_t2_sea_bomber_target_name"
					var:t = "ht_t2_cur_target_name"
				}
				varGetStringValue {
					from_var_name:t = "ht_t2_sea_bomber_cover_name"
					var:t = "ht_t2_cur_cover_name"
				}
				comment {
					value:t = ""
				}
				triggerEnable {
					target:t = "ht_t2_spawn"
				}
			}
			else_actions {
				comment {
					value:t = "sea bombers template is no active"
				}
				triggerEnable {
					target:t = "ht_t2_choose_assaults"
				}
			}
		}
		ht_t2_choose_assaults {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {
				varCompareBool {
					var_value:t = "at_t1_is_active"
					value:b = true
					comparasion_func:t = "equal"
				}
				unitWhenCountMatches {
					object_type:t = "isActive"
					object_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					func:t = "more"
					value:i = 3
					object:t = "@ht_t2_assault_target_name"
				}
			}
			actions {
				comment {
					value:t = "assaults template is active"
				}
				varGetStringValue {
					from_var_name:t = "ht_t2_assault_target_name"
					var:t = "ht_t2_cur_target_name"
				}
				varGetStringValue {
					from_var_name:t = "ht_t2_assault_cover_name"
					var:t = "ht_t2_cur_cover_name"
				}
				comment {
					value:t = ""
				}
				triggerEnable {
					target:t = "ht_t2_spawn"
				}
			}
			else_actions {
				comment {
					value:t = "assaults template is no active"
				}
				triggerEnable {
					target:t = "ht_t2_restart"
				}
			}
		}
		ht_t2_spawn {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {

			}
			actions {
				comment {
					value:t = ""
				}
				varSetBool {
					value:b = true
					var:t = "ht_t2_is_active"
				}
				comment {
					value:t = ""
				}
				unitRespawn {
					delay:r = 0
					offset:p3 = 0, 0, 0
					object:t = "ht_t2_hunter"
					target:t = "ht_t2_hunter_spawn_point"
					isStealth:b = true
					resetFormation:b = true
				}
				comment {
					value:t = ""
				}
				wait {
					time:r = 1
				}
				comment {
					value:t = ""
				}
				unitMoveTo {
					object_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object_var_value:i = 0
					target:t = "@ht_t2_cur_target_name"
					target_marking:i = 0
					waypointReachedDist:r = 10
					recalculatePathDist:r = -1
					follow_target:b = true
					fastClimb:b = false
					destTimeMode:b = false
					teleportHeightType:t = "absolute"
					useUnitHeightForTele:b = true
					shouldKeepFormation:b = true
					teleportHeightValue:r = 1000
					horizontalDirectionForTeleport:b = true
					target_var_name:t = ""
					target_var_comp_op:t = "equal"
					target_var_value:i = 0
					object:t = "ht_t2_hunter"
					useFormationCenter:b = false
					teleportOffset:p3 = 0, 1000, 0
				}
				comment {
					value:t = ""
				}
				triggerEnable {
					target:t = "ht_t2_attack"
					target:t = "ht_t2_died"
				}
			}
			else_actions {

			}
		}
		ht_t2_attack {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {
				unitDistanceBetween {
					value:r = 3500
					math:t = "2D"
					object_type:t = "isActive"
					object_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					target_type:t = "isActive"
					target_marking:i = 0
					check_objects:t = "any"
					check_targets:t = "any"
					object:t = "ht_t2_hunter"
					target:t = "@ht_t2_cur_target_name"
					compareCenters:b = false
				}
			}
			actions {
				unitMoveTo {
					object_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object_var_value:i = 0
					target:t = "ht_t2_hunter_retreat_point"
					target_marking:i = 0
					waypointReachedDist:r = 10
					recalculatePathDist:r = -1
					follow_target:b = false
					fastClimb:b = false
					destTimeMode:b = false
					teleportHeightType:t = "absolute"
					useUnitHeightForTele:b = true
					shouldKeepFormation:b = false
					teleportHeightValue:r = 1000
					horizontalDirectionForTeleport:b = true
					target_var_name:t = ""
					target_var_comp_op:t = "equal"
					target_var_value:i = 0
					object:t = "ht_t2_hunter"
				}
				unitAttackTarget {
					playerAttracted:b = false
					object:t = "ht_t2_hunter"
					target:t = "@ht_t2_cur_target_name"
					target:t = "@ht_t2_cur_cover_name"
					target:t = "t1_players_squad"
					fireRandom:b = true
					anchorTarget:t = "@ht_t2_cur_target_name"
					targetToAnchorDist:p2 = 3500, 5000
				}
				comment {
					value:t = ""
				}
				triggerEnable {
					target:t = "ht_t2_retreat"
				}
			}
			else_actions {

			}
		}
		ht_t2_retreat {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = true
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {
				unitDistanceBetween {
					value:r = 4500
					math:t = "2D"
					object_type:t = "isActive"
					object_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					target_type:t = "isActive"
					target_marking:i = 0
					check_objects:t = "any"
					check_targets:t = "any"
					object:t = "ht_t2_hunter"
					target:t = "ht_t2_hunter_retreat_point"
					compareCenters:b = false
				}
			}
			actions {
				unitPutToSleep {
					target:t = "ht_t2_hunter"
					useForTriggerFiltered:b = true
				}
			}
			else_actions {

			}
		}
		ht_t2_died {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {
				unitWhenCountMatches {
					object_type:t = "isActive"
					object_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					func:t = "less"
					value:i = 1
					object:t = "ht_t2_hunter"
				}
			}
			actions {
				triggerDisable {
					target:t = "ht_t2_attack"
					target:t = "ht_t2_retreat"
				}
			}
			else_actions {

			}
		}
	}
}
mission_objectives {
	isCategory:b = true
	is_enabled:b = true
}
variables {
	ht_t1_is_active:b = false
	ht_t2_is_active:b = false
	ht_t1_bomber_target_name:t = "bt_t2_bomber"
	ht_t1_bomber_cover_name:t = "bt_t2_fighter"
	ht_t1_sea_bomber_target_name:t = "sbt_t2_bomber"
	ht_t1_sea_bomber_cover_name:t = "sbt_t2_fighter"
	ht_t1_assault_target_name:t = "at_t2_assault"
	ht_t1_assault_cover_name:t = "at_t2_fighter"
	ht_t1_cur_target_name:t = ""
	ht_t1_cur_cover_name:t = ""
	ht_t2_bomber_target_name:t = "bt_t1_bomber"
	ht_t2_bomber_cover_name:t = "bt_t1_fighter"
	ht_t2_sea_bomber_target_name:t = "sbt_t1_bomber"
	ht_t2_sea_bomber_cover_name:t = "sbt_t1_fighter"
	ht_t2_assault_target_name:t = "at_t1_assault"
	ht_t2_assault_cover_name:t = "at_t1_fighter"
	ht_t2_cur_target_name:t = ""
	ht_t2_cur_cover_name:t = ""
	ht_restart_delay_timer:i = 120
}
dialogs {

}
airfields {

}
effects {

}
units {

}
areas {

}
objLayers {
	layer {
		enabled:b = true
	}
	layer {
		enabled:b = true
	}
	layer {
		enabled:b = true
	}
	layer {
		enabled:b = true
	}
}
wayPoints {

}