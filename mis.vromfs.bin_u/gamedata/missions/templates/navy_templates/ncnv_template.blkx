selected_tag:t = ""
bin_dump_file:t = ""
mission_settings {
	player {
		army:i = 1
		wing:t = ""
	}
	player_teamB {
		army:i = 2
	}
	mission {
		level:t = "levels/water.bin"
		type:t = "singleMission"
		restoreType:t = "attempts"
		optionalTakeOff:b = false
		environment:t = "Day"
		weather:t = "hazy"
	}
	spectator_points {

	}
}
imports {

}
triggers {
	isCategory:b = true
	is_enabled:b = true
	ncnv_template_init1 {
		is_enabled:b = true
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {

		}
		actions {
			varAddString {
				value:t = ""
				digits:i = 2
				var:t = "last_waypoint"
				input_var:t = "waypoints_num"
			}
			varSetInt {
				value:i = 0
				var:t = "have_to_kill_count"
				fromDescriptor:t = "aiTargetCount"
			}
			triggerEnable {
				target:t = "drawTheLineA"
				target:t = "ncnv_template_init2"
				target:t = "show_first_point"
			}
			missionMarkAsRespawnPoint {
				loc_name:t = "missions/spawn_random"
				spawnEffect:b = false
				isStrictSpawn:b = false
				resetStrictSpawnIndex:b = false
				isAirfield:b = false
				isUnit:b = false
				useExisting:b = false
				isIndividual:b = true
				onlyOnePlayerPerSpawnPoint:b = false
				removeAreas:b = false
				replaceAreas:b = false
				canSpawnOnNeutral:b = false
				showOnMap:b = true
				radius:r = -1
				target:t = "t1_ships_spawn00"
				target:t = "t1_ships_spawn01"
				target:t = "t1_ships_spawn02"
				team:t = "A"
				tags {
					air:b = false
					tank:b = false
					ship:b = true
					boat:b = true
					type_frigate:b = false
					type_destroyer:b = false
					type_light_cruiser:b = false
					type_heavy_cruiser:b = false
					type_battlecruiser:b = false
					type_battleship:b = false
				}
			}
			missionMarkAsRespawnPoint {
				loc_name:t = "missions/spawn_01"
				spawnEffect:b = false
				isStrictSpawn:b = false
				resetStrictSpawnIndex:b = false
				isAirfield:b = false
				isUnit:b = false
				useExisting:b = false
				isIndividual:b = true
				onlyOnePlayerPerSpawnPoint:b = false
				removeAreas:b = false
				replaceAreas:b = false
				canSpawnOnNeutral:b = false
				showOnMap:b = true
				radius:r = -1
				target:t = "t1_ships_spawn00"
				team:t = "A"
				tags {
					air:b = false
					tank:b = false
					ship:b = true
					boat:b = true
					type_frigate:b = false
					type_destroyer:b = false
					type_light_cruiser:b = false
					type_heavy_cruiser:b = false
					type_battlecruiser:b = false
					type_battleship:b = false
				}
			}
			missionMarkAsRespawnPoint {
				loc_name:t = "missions/spawn_02"
				spawnEffect:b = false
				isStrictSpawn:b = false
				resetStrictSpawnIndex:b = false
				isAirfield:b = false
				isUnit:b = false
				useExisting:b = false
				isIndividual:b = true
				onlyOnePlayerPerSpawnPoint:b = false
				removeAreas:b = false
				replaceAreas:b = false
				canSpawnOnNeutral:b = false
				showOnMap:b = true
				radius:r = -1
				target:t = "t1_ships_spawn01"
				team:t = "A"
				tags {
					air:b = false
					tank:b = false
					ship:b = true
					boat:b = true
					type_frigate:b = false
					type_destroyer:b = false
					type_light_cruiser:b = false
					type_heavy_cruiser:b = false
					type_battlecruiser:b = false
					type_battleship:b = false
				}
			}
			missionMarkAsRespawnPoint {
				loc_name:t = "missions/spawn_03"
				spawnEffect:b = false
				isStrictSpawn:b = false
				resetStrictSpawnIndex:b = false
				isAirfield:b = false
				isUnit:b = false
				useExisting:b = false
				isIndividual:b = true
				onlyOnePlayerPerSpawnPoint:b = false
				removeAreas:b = false
				replaceAreas:b = false
				canSpawnOnNeutral:b = false
				showOnMap:b = true
				radius:r = -1
				target:t = "t1_ships_spawn02"
				team:t = "A"
				tags {
					air:b = false
					tank:b = false
					ship:b = true
					boat:b = true
					type_frigate:b = false
					type_destroyer:b = false
					type_light_cruiser:b = false
					type_heavy_cruiser:b = false
					type_battlecruiser:b = false
					type_battleship:b = false
				}
			}
			missionMarkAsRespawnPoint {
				loc_name:t = "missions/spawn_random"
				spawnEffect:b = false
				isStrictSpawn:b = false
				resetStrictSpawnIndex:b = false
				isAirfield:b = false
				isUnit:b = false
				useExisting:b = false
				isIndividual:b = true
				onlyOnePlayerPerSpawnPoint:b = false
				removeAreas:b = false
				replaceAreas:b = false
				canSpawnOnNeutral:b = false
				showOnMap:b = true
				radius:r = -1
				target:t = "t2_ships_spawn00"
				target:t = "t2_ships_spawn01"
				target:t = "t2_ships_spawn02"
				team:t = "B"
				tags {
					air:b = false
					tank:b = false
					ship:b = true
					boat:b = true
					type_frigate:b = false
					type_destroyer:b = false
					type_light_cruiser:b = false
					type_heavy_cruiser:b = false
					type_battlecruiser:b = false
					type_battleship:b = false
				}
			}
			missionMarkAsRespawnPoint {
				loc_name:t = "missions/spawn_01"
				spawnEffect:b = false
				isStrictSpawn:b = false
				resetStrictSpawnIndex:b = false
				isAirfield:b = false
				isUnit:b = false
				useExisting:b = false
				isIndividual:b = true
				onlyOnePlayerPerSpawnPoint:b = false
				removeAreas:b = false
				replaceAreas:b = false
				canSpawnOnNeutral:b = false
				showOnMap:b = true
				radius:r = -1
				target:t = "t2_ships_spawn00"
				team:t = "B"
				tags {
					air:b = false
					tank:b = false
					ship:b = true
					boat:b = true
					type_frigate:b = false
					type_destroyer:b = false
					type_light_cruiser:b = false
					type_heavy_cruiser:b = false
					type_battlecruiser:b = false
					type_battleship:b = false
				}
			}
			missionMarkAsRespawnPoint {
				loc_name:t = "missions/spawn_02"
				spawnEffect:b = false
				isStrictSpawn:b = false
				resetStrictSpawnIndex:b = false
				isAirfield:b = false
				isUnit:b = false
				useExisting:b = false
				isIndividual:b = true
				onlyOnePlayerPerSpawnPoint:b = false
				removeAreas:b = false
				replaceAreas:b = false
				canSpawnOnNeutral:b = false
				showOnMap:b = true
				radius:r = -1
				target:t = "t2_ships_spawn01"
				team:t = "B"
				tags {
					air:b = false
					tank:b = false
					ship:b = true
					boat:b = true
					type_frigate:b = false
					type_destroyer:b = false
					type_light_cruiser:b = false
					type_heavy_cruiser:b = false
					type_battlecruiser:b = false
					type_battleship:b = false
				}
			}
			missionMarkAsRespawnPoint {
				loc_name:t = "missions/spawn_03"
				spawnEffect:b = false
				isStrictSpawn:b = false
				resetStrictSpawnIndex:b = false
				isAirfield:b = false
				isUnit:b = false
				useExisting:b = false
				isIndividual:b = true
				onlyOnePlayerPerSpawnPoint:b = false
				removeAreas:b = false
				replaceAreas:b = false
				canSpawnOnNeutral:b = false
				showOnMap:b = true
				radius:r = -1
				target:t = "t2_ships_spawn02"
				team:t = "B"
				tags {
					air:b = false
					tank:b = false
					ship:b = true
					boat:b = true
					type_frigate:b = false
					type_destroyer:b = false
					type_light_cruiser:b = false
					type_heavy_cruiser:b = false
					type_battlecruiser:b = false
					type_battleship:b = false
				}
			}
		}
		else_actions {

		}
	}
	ncnv_template_init2 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {
			varCompareInt {
				var_value:t = "have_to_kill_count"
				value:i = 0
				comparasion_func:t = "more"
			}
		}
		actions {
			triggerEnable {
				target:t = "ncnv_template_init3"
			}
		}
		else_actions {
			varSetInt {
				value:i = 7
				var:t = "have_to_kill_count"
			}
			triggerEnable {
				target:t = "ncnv_template_init3"
			}
		}
	}
	ncnv_template_init3 {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {

		}
		actions {
			varAddString {
				value:t = ""
				digits:i = 2
				var:t = "convoy_sq_name"
				input_var:t = "have_to_kill_count"
			}
			unitSetFormation {
				formation_type:t = "cols"
				formation_div:i = 3
				formation_step:p2 = 7, 2.5
				formation_noise:p2 = 0.2, 0.1
				object:t = "@convoy_sq_name"
				allUnitsInOneFormation:b = true
			}
			unitRespawn {
				delay:r = 0.01
				offset:p3 = 0, 0, 0
				object:t = "@convoy_sq_name"
				object_type:t = "isInactive"
				target:t = "convoy_starting_point"
				resetFormation:b = true
				randomObjectsCountVar:t = "have_to_kill_count"
			}
			wait {
				time:r = 1
			}
			unitSetRoute {
				route:t = "convoy_route"
				object:t = "@convoy_sq_name"
			}
			unitSetProperties {
				object_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				object:t = "@convoy_sq_name"
				targetAir:b = true
				targetGnd:b = true
				accuracy:r = 0.5
				effShootingRate:r = 0.5
				airEffShootingRate:r = 0.3
				speed:r = 20
				lockSpeed:b = true
			}
			unitSetIndication {
				set:b = true
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				target:t = "@convoy_sq_name"
			}
			varSetInt {
				value:i = 0
				var:t = "convoy_kill_penalty"
				source_var:t = "mpTi1"
			}
			varModify {
				operator:t = "divAB"
				value:r = 1
				var:t = "convoy_kill_penalty"
				use_variable:b = true
				var_value:t = "have_to_kill_count"
			}
			varModify {
				operator:t = "mul"
				value:r = -1
				var:t = "convoy_kill_penalty"
			}
			triggerEnable {
				target:t = "calc_waypoint_reached_penalty"
				target:t = "convoy_unit_killed"
				target:t = "convoy_counter"
				target:t = "convoy_all_unit_dead_check"
			}
		}
		else_actions {

		}
	}
	show_first_point {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionShowMapIcon {
				show:b = true
				iconName:t = "ui/gameuiskin#radar_object_waypoint.svg"
				areaName:t = "@current_waypoint_str"
			}
		}
		else_actions {

		}
	}
	drawTheLineA {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 0.1
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "linePointCount"
				value:i = 0
				comparasion_func:t = "less"
				var_value_other:t = "waypoints_num"
			}
		}
		actions {
			varSetString {
				value:t = "convoy_waypoint"
				var:t = "linePointStr"
			}
			varAddString {
				value:t = ""
				digits:i = 2
				var:t = "linePointStr"
				input_var:t = "linePointCount"
			}
			varModify {
				operator:t = "add"
				value:r = 1
				var:t = "linePointCount"
			}
			varSetString {
				value:t = "convoy_waypoint"
				var:t = "linPointStr_next"
			}
			varAddString {
				value:t = ""
				digits:i = 2
				var:t = "linPointStr_next"
				input_var:t = "linePointCount"
			}
			missionShowMapLine {
				areaNameFrom:t = "@linePointStr"
				areaNameTo:t = "@linPointStr_next"
				show:b = true
				colorCode:t = "Team B"
				scale:r = 0.5
			}
			missionShowMapIcon {
				show:b = true
				iconName:t = "ui/gameuiskin#radar_object_waypoint.svg"
				areaName:t = "@linPointStr_next"
			}
		}
		else_actions {

		}
	}
	convoy_counter {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {

		}
		actions {
			missionSetTargetsIndicator {
				target_type:t = "isAlive"
				target_marking:i = 0
				delta:i = 0
				icon:t = "ship"
				"icon army":i = 2
				set:b = true
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				target:t = "convoy_sq"
				var:t = "have_to_kill_count"
				team:t = "Both"
			}
		}
		else_actions {

		}
	}
	calc_waypoint_reached_penalty {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {

		}
		actions {
			varSetInt {
				value:i = 0
				var:t = "waypoint_reached_penalty"
				source_var:t = "mpTi1"
			}
			varModify {
				operator:t = "divAB"
				value:r = 1
				var:t = "waypoint_reached_penalty"
				use_variable:b = true
				var_value:t = "waypoints_num"
			}
			varModify {
				operator:t = "mul"
				value:r = -1
				var:t = "waypoint_reached_penalty"
			}
			triggerEnable {
				target:t = "waypoint_reached"
			}
		}
		else_actions {

		}
	}
	waypoint_reached {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			unitDistanceBetween {
				value:r = 500
				math:t = "2D"
				object_type:t = "isAlive"
				object_marking:i = 0
				target_type:t = "isAlive"
				target_marking:i = 0
				check_objects:t = "any"
				check_targets:t = "any"
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				object:t = "convoy_sq"
				target:t = "@current_waypoint_str"
			}
		}
		actions {
			triggerEnable {
				target:t = "waypoint_reached_penalty"
			}
		}
		else_actions {

		}
	}
	waypoint_reached_penalty {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.5
			}
		}
		conditions {

		}
		actions {
			gameMPChangeScore {
				value:i = 0
				valueSystem:t = "amount"
				var:t = "waypoint_reached_penalty"
				team:t = "A"
			}
			varModify {
				operator:t = "add"
				value:r = 1
				var:t = "current_waypoint"
			}
			varModify {
				operator:t = "add"
				value:r = 1
				var:t = "t1_spawnzone_counter"
			}
			varModify {
				operator:t = "add"
				value:r = 1
				var:t = "t2_spawnzone_counter"
			}
			triggerEnable {
				target:t = "waypoint_reached_hide_lines"
			}
		}
		else_actions {

		}
	}
	waypoint_reached_hide_lines {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.5
			}
		}
		conditions {

		}
		actions {
			varSetString {
				value:t = ""
				var:t = "prev_waypoint_str"
				input_var:t = "current_waypoint_str"
			}
			varSetString {
				value:t = "convoy_waypoint"
				var:t = "current_waypoint_str"
			}
			varAddString {
				value:t = ""
				digits:i = 2
				var:t = "current_waypoint_str"
				input_var:t = "current_waypoint"
			}
			missionShowMapLine {
				areaNameFrom:t = "@prev_waypoint_str"
				areaNameTo:t = "@current_waypoint_str"
				show:b = false
			}
			missionShowMapIcon {
				show:b = false
				iconName:t = "ui/gameuiskin#radar_object_waypoint.svg"
				areaName:t = "@prev_waypoint_str"
			}
		}
		else_actions {

		}
	}
	convoy_unit_killed {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			unitWhenCountMatches {
				object_type:t = "isKilled"
				object_marking:i = 0
				func:t = "more"
				value:i = 1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				object:t = "convoy_sq"
				var:t = "kill_count"
			}
		}
		actions {
			varModify {
				operator:t = "add"
				value:r = 1
				var:t = "kill_count"
			}
			varModify {
				operator:t = "subAB"
				value:r = 1
				var:t = "have_to_kill_count"
			}
			triggerEnable {
				target:t = "convoy_unit_convoy_kill_penalty"
			}
		}
		else_actions {

		}
	}
	convoy_unit_convoy_kill_penalty {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.5
			}
		}
		conditions {

		}
		actions {
			gameMPChangeScore {
				value:i = -250
				valueSystem:t = "amount"
				var:t = "convoy_kill_penalty"
				team:t = "B"
			}
		}
		else_actions {

		}
	}
	convoy_all_unit_dead_check {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.5
			}
		}
		conditions {
			unitWhenCountMatches {
				object_type:t = "isActive"
				object_marking:i = 0
				func:t = "less"
				value:i = 1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				object:t = "convoy_sq"
			}
		}
		actions {
			triggerEnable {
				target:t = "convoy_all_unit_dead_end_mission"
			}
		}
		else_actions {

		}
	}
	convoy_all_unit_dead_end_mission {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {

		}
		actions {
			gameMPChangeScore {
				value:i = -10
				valueSystem:t = "percentage"
				team:t = "B"
			}
		}
		else_actions {

		}
	}
	player_bots_move {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 5
			}
		}
		conditions {

		}
		actions {
			unitMoveTo {
				target:t = "@current_waypoint_str"
				waypointReachedDist:r = 10
				recalculatePathDist:r = -1
				follow_target:b = false
				teleportHeightType:t = "absolute"
				useUnitHeightForTele:b = true
				shouldKeepFormation:b = false
				teleportHeightValue:r = 1000
				horizontalDirectionForTeleport:b = true
				object_marking:i = 0
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				object:t = "all_players_squad"
				speed:r = 50
				distributionRadius:r = 300
			}
		}
		else_actions {

		}
	}
	delay_death_bots {
		is_enabled:b = true
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			unitWhenCountMatches {
				object_type:t = "isInactive"
				object_marking:i = 0
				func:t = "more"
				value:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				object:t = "convoy_sq"
			}
		}
		actions {
			unitPutToSleep {
				target:t = "convoy_sq"
				useForTriggerFiltered:b = true
				delayForObjects:p2 = 3, 0
				numToSleep:i = 1
				order:t = "fromStart"
			}
		}
		else_actions {

		}
	}
	repair_mobility_parts {
		is_enabled:b = true
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 10
			}
		}
		conditions {

		}
		actions {
			unitRestore {
				ressurectIfDead:b = false
				fullRestore:b = false
				target:t = "convoy_sq"
				partRestore:b = true
				tankPart:t = "engine_dm"
				tankPart:t = "engine_01_dm"
				tankPart:t = "engine_02_dm"
				tankPart:t = "engine_03_dm"
				tankPart:t = "engine_04_dm"
				tankPart:t = "engine_room_01_dm"
				tankPart:t = "engine_room_02_dm"
				tankPart:t = "engine_room_03_dm"
				tankPart:t = "engine_room_04_dm"
				power:r = 0.7
			}
			unitRestore {
				ressurectIfDead:b = false
				fullRestore:b = false
				target:t = "convoy_sq"
				partRestore:b = true
				tankPart:t = "transmission_01_dm"
				tankPart:t = "transmission_02_dm"
				tankPart:t = "transmission_03_dm"
				tankPart:t = "transmission_04_dm"
				tankPart:t = "steering_gear_01_dm"
				tankPart:t = "steering_gear_02_dm"
				tankPart:t = "steering_gear_03_dm"
				tankPart:t = "steering_gear_04_dm"
				tankPart:t = "funnel_01_dm"
				tankPart:t = "funnel_02_dm"
				tankPart:t = "funnel_03_dm"
				tankPart:t = "funnel_04_dm"
				power:r = 0.7
			}
		}
		else_actions {

		}
	}
}
mission_objectives {
	isCategory:b = true
	is_enabled:b = true
	ncnv_convoy_defend {
		is_enabled:b = true
		comments:t = ""
		type:t = "abstractMissionObjective"
		props {
			isPrimary:b = true
			timeLimit:i = 1800
			team:t = "B"
		}
		onSuccess {

		}
		onFailed {

		}
	}
	ncnv_convoy_attack {
		is_enabled:b = true
		comments:t = ""
		type:t = "abstractMissionObjective"
		props {
			isPrimary:b = true
			timeLimit:i = 1800
			team:t = "A"
		}
		onSuccess {

		}
		onFailed {

		}
	}
}
variables {
	waypoint_reached_penalty:i = 0
	have_to_kill_count:i = 0
	convoy_kill_penalty:i = 0
	kill_count:i = 0
	current_waypoint_str:t = "convoy_waypoint01"
	prev_waypoint_str:t = "convoy_waypoint00"
	current_waypoint:i = 1
	last_waypoint:t = "convoy_waypoint"
	linePointCount:i = 1
	linePointStr:t = ""
	linPointStr_next:t = ""
	t1_spawnzone_name:t = "t1_ships_spawn00"
	t1_spawnzone_counter:i = 0
	t2_spawnzone_name:t = "t2_ships_spawn00"
	t2_spawnzone_counter:i = 0
	convoy_sq_name:t = "convoy_sq_"
}
dialogs {

}
airfields {

}
effects {

}
units {
	squad {
		name:t = "convoy_sq"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [2590.42, 4.48975, -576.691]]
		props {
			squad_members:t = "ship_01"
			squad_members:t = "ship_02"
			squad_members:t = "ship_03"
			squad_members:t = "ship_04"
			squad_members:t = "ship_05"
			squad_members:t = "ship_06"
			squad_members:t = "ship_07"
			squad_members:t = "ship_08"
			squad_members:t = "ship_09"
			squad_members:t = "ship_10"
		}
	}
	squad {
		name:t = "convoy_sq_01"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [2586.26, 4.48975, -576.691]]
		props {
			squad_members:t = "ship_01"
		}
	}
	squad {
		name:t = "convoy_sq_02"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [2582.11, 4.48975, -576.691]]
		props {
			squad_members:t = "ship_01"
			squad_members:t = "ship_02"
		}
	}
	squad {
		name:t = "convoy_sq_03"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [2577.95, 4.48975, -576.691]]
		props {
			squad_members:t = "ship_01"
			squad_members:t = "ship_02"
			squad_members:t = "ship_03"
		}
	}
	squad {
		name:t = "convoy_sq_04"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [2573.8, 4.48975, -576.691]]
		props {
			squad_members:t = "ship_01"
			squad_members:t = "ship_02"
			squad_members:t = "ship_03"
			squad_members:t = "ship_04"
		}
	}
	squad {
		name:t = "convoy_sq_05"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [2569.64, 4.48975, -576.691]]
		props {
			squad_members:t = "ship_01"
			squad_members:t = "ship_02"
			squad_members:t = "ship_03"
			squad_members:t = "ship_04"
			squad_members:t = "ship_05"
		}
	}
	squad {
		name:t = "convoy_sq_06"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [2565.49, 4.48975, -576.691]]
		props {
			squad_members:t = "ship_01"
			squad_members:t = "ship_02"
			squad_members:t = "ship_03"
			squad_members:t = "ship_04"
			squad_members:t = "ship_05"
			squad_members:t = "ship_06"
		}
	}
	squad {
		name:t = "convoy_sq_07"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [2561.33, 4.48975, -576.691]]
		props {
			squad_members:t = "ship_01"
			squad_members:t = "ship_02"
			squad_members:t = "ship_03"
			squad_members:t = "ship_04"
			squad_members:t = "ship_05"
			squad_members:t = "ship_06"
			squad_members:t = "ship_07"
		}
	}
	squad {
		name:t = "convoy_sq_08"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [2557.18, 4.48975, -576.691]]
		props {
			squad_members:t = "ship_01"
			squad_members:t = "ship_02"
			squad_members:t = "ship_03"
			squad_members:t = "ship_04"
			squad_members:t = "ship_05"
			squad_members:t = "ship_06"
			squad_members:t = "ship_07"
			squad_members:t = "ship_08"
		}
	}
	squad {
		name:t = "convoy_sq_09"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [2553.02, 4.48975, -576.691]]
		props {
			squad_members:t = "ship_01"
			squad_members:t = "ship_02"
			squad_members:t = "ship_03"
			squad_members:t = "ship_04"
			squad_members:t = "ship_05"
			squad_members:t = "ship_06"
			squad_members:t = "ship_07"
			squad_members:t = "ship_08"
			squad_members:t = "ship_09"
		}
	}
	squad {
		name:t = "convoy_sq_10"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [2548.87, 4.48975, -576.691]]
		props {
			squad_members:t = "ship_01"
			squad_members:t = "ship_02"
			squad_members:t = "ship_03"
			squad_members:t = "ship_04"
			squad_members:t = "ship_05"
			squad_members:t = "ship_06"
			squad_members:t = "ship_07"
			squad_members:t = "ship_08"
			squad_members:t = "ship_09"
			squad_members:t = "ship_10"
		}
	}
}
areas {

}
objLayers {
	layer {
		enabled:b = true
	}
	layer {
		enabled:b = true
	}
	layer {
		enabled:b = true
	}
	layer {
		enabled:b = true
	}
}
wayPoints {

}