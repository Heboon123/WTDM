selected_tag:t = ""
bin_dump_file:t = ""
mission_settings {
	player {
		army:i = 1
	}
	player_teamB {
		army:i = 2
	}
	mission {
		type:t = "singleMission"
		level:t = "levels/water.bin"
		environment:t = "Day"
		weather:t = "hazy"
		restoreType:t = "attempts"
		optionalTakeOff:b = false
	}
	spectator_points {

	}
}
imports {

}
triggers {
	isCategory:b = true
	is_enabled:b = true
	nbttl_init {
		is_enabled:b = true
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {

		}
		actions {
			comment {
				value:t = ""
			}
			varSetString {
				value:t = "nbttl_t1_boat_spawn_01"
				var:t = "t1_boat_spawn_01_name"
			}
			varSetString {
				value:t = "nbttl_t1_boat_spawn_02"
				var:t = "t1_boat_spawn_02_name"
			}
			varSetString {
				value:t = "nbttl_t2_boat_spawn_01"
				var:t = "t2_boat_spawn_01_name"
			}
			varSetString {
				value:t = "nbttl_t2_boat_spawn_02"
				var:t = "t2_boat_spawn_02_name"
			}
			comment {
				value:t = ""
			}
			varSetString {
				value:t = "nbttl_t1_destroyer_spawn_01"
				var:t = "t1_destroyer_spawn_01_name"
			}
			varSetString {
				value:t = "nbttl_t1_destroyer_spawn_02"
				var:t = "t1_destroyer_spawn_02_name"
			}
			varSetString {
				value:t = "nbttl_t2_destroyer_spawn_01"
				var:t = "t2_destroyer_spawn_01_name"
			}
			varSetString {
				value:t = "nbttl_t2_destroyer_spawn_02"
				var:t = "t2_destroyer_spawn_02_name"
			}
			comment {
				value:t = ""
			}
			varSetString {
				value:t = "nbttl_t1_cruiser_spawn_01"
				var:t = "t1_cruiser_spawn_01_name"
			}
			varSetString {
				value:t = "nbttl_t1_cruiser_spawn_02"
				var:t = "t1_cruiser_spawn_02_name"
			}
			varSetString {
				value:t = "nbttl_t2_cruiser_spawn_01"
				var:t = "t2_cruiser_spawn_01_name"
			}
			varSetString {
				value:t = "nbttl_t2_cruiser_spawn_02"
				var:t = "t2_cruiser_spawn_02_name"
			}
			comment {
				value:t = ""
			}
			varSetString {
				value:t = "nbttl_battle_area"
				var:t = "battle_area_name"
			}
			comment {
				value:t = ""
			}
			varSetString {
				value:t = "missions/spawn_cruisers_random"
				var:t = "loc_name_random_str"
			}
			varSetString {
				value:t = "missions/spawn_cruisers_01"
				var:t = "loc_name_01_str"
			}
			varSetString {
				value:t = "missions/spawn_cruisers_02"
				var:t = "loc_name_02_str"
			}
			triggerEnable {
				target:t = "nbttl_check_random_boat_spawn"
			}
		}
		else_actions {

		}
	}
	base_naval_logic {
		isCategory:b = true
		is_enabled:b = true
		nbttl_check_random_boat_spawn {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				initMission {

				}
			}
			conditions {
				objectExists {
					target:t = "@t1_boat_spawn_01_name"
					type:t = "squad"
				}
				objectExists {
					target:t = "@t2_boat_spawn_01_name"
					type:t = "squad"
				}
				objectExists {
					target:t = "@t1_boat_spawn_02_name"
					type:t = "squad"
				}
				objectExists {
					target:t = "@t2_boat_spawn_02_name"
					type:t = "squad"
				}
			}
			actions {
				missionMarkAsRespawnPoint {
					loc_name:t = "missions/spawn_random"
					spawnEffect:b = false
					isStrictSpawn:b = false
					isAirfield:b = false
					isUnit:b = false
					useExisting:b = false
					isIndividual:b = true
					removeAreas:b = false
					canSpawnOnNeutral:b = false
					showOnMap:b = true
					radius:r = -1
					onlyOnePlayerPerSpawnPoint:b = false
					resetStrictSpawnIndex:b = false
					replaceAreas:b = false
					forceCreate:b = false
					target:t = "@t1_boat_spawn_01_name"
					target:t = "@t1_boat_spawn_02_name"
					team:t = "A"
					separate_fuel_time:b = false
					modular_airfield:b = false
					offset:p3 = 0, 0, 0
					tags {
						air:b = false
						tank:b = false
						ship:b = true
						boat:b = true
						type_destroyer:b = false
						type_light_cruiser:b = false
						type_heavy_cruiser:b = false
						type_battlecruiser:b = false
						type_battleship:b = false
					}
				}
				missionMarkAsRespawnPoint {
					loc_name:t = "missions/spawn_random"
					spawnEffect:b = false
					isStrictSpawn:b = false
					isAirfield:b = false
					isUnit:b = false
					useExisting:b = false
					isIndividual:b = true
					removeAreas:b = false
					canSpawnOnNeutral:b = false
					showOnMap:b = true
					radius:r = -1
					onlyOnePlayerPerSpawnPoint:b = false
					resetStrictSpawnIndex:b = false
					replaceAreas:b = false
					forceCreate:b = false
					target:t = "@t2_boat_spawn_01_name"
					target:t = "@t2_boat_spawn_02_name"
					team:t = "B"
					separate_fuel_time:b = false
					modular_airfield:b = false
					offset:p3 = 0, 0, 0
					tags {
						air:b = false
						tank:b = false
						ship:b = true
						boat:b = true
						type_destroyer:b = false
						type_light_cruiser:b = false
						type_heavy_cruiser:b = false
						type_battlecruiser:b = false
						type_battleship:b = false
					}
				}
				triggerEnable {
					target:t = "nbttl_start"
				}
			}
			else_actions {
				triggerEnable {
					target:t = "nbttl_start"
				}
			}
		}
		nbttl_check_random_destroyer_spawn {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				initMission {

				}
			}
			conditions {
				objectExists {
					target:t = "@t1_destroyer_spawn_01_name"
					type:t = "squad"
				}
				objectExists {
					target:t = "@t2_destroyer_spawn_01_name"
					type:t = "squad"
				}
				objectExists {
					target:t = "@t1_destroyer_spawn_02_name"
					type:t = "squad"
				}
				objectExists {
					target:t = "@t2_destroyer_spawn_02_name"
					type:t = "squad"
				}
			}
			actions {
				missionMarkAsRespawnPoint {
					loc_name:t = "missions/spawn_destroyers_random"
					spawnEffect:b = false
					isStrictSpawn:b = false
					isAirfield:b = false
					isUnit:b = false
					useExisting:b = false
					isIndividual:b = true
					removeAreas:b = false
					canSpawnOnNeutral:b = false
					showOnMap:b = true
					radius:r = -1
					onlyOnePlayerPerSpawnPoint:b = false
					resetStrictSpawnIndex:b = false
					replaceAreas:b = false
					forceCreate:b = false
					target:t = "@t1_destroyer_spawn_01_name"
					target:t = "@t1_destroyer_spawn_02_name"
					team:t = "A"
					separate_fuel_time:b = false
					modular_airfield:b = false
					offset:p3 = 0, 0, 0
					tags {
						air:b = false
						tank:b = false
						ship:b = true
						boat:b = false
						type_destroyer:b = true
						type_light_cruiser:b = false
						type_heavy_cruiser:b = false
						type_battlecruiser:b = false
						type_battleship:b = false
					}
				}
				missionMarkAsRespawnPoint {
					loc_name:t = "missions/spawn_destroyers_random"
					spawnEffect:b = false
					isStrictSpawn:b = false
					isAirfield:b = false
					isUnit:b = false
					useExisting:b = false
					isIndividual:b = true
					removeAreas:b = false
					canSpawnOnNeutral:b = false
					showOnMap:b = true
					radius:r = -1
					onlyOnePlayerPerSpawnPoint:b = false
					resetStrictSpawnIndex:b = false
					replaceAreas:b = false
					forceCreate:b = false
					target:t = "@t2_destroyer_spawn_01_name"
					target:t = "@t2_destroyer_spawn_02_name"
					team:t = "B"
					separate_fuel_time:b = false
					modular_airfield:b = false
					offset:p3 = 0, 0, 0
					tags {
						air:b = false
						tank:b = false
						ship:b = true
						boat:b = false
						type_destroyer:b = true
						type_light_cruiser:b = false
						type_heavy_cruiser:b = false
						type_battlecruiser:b = false
						type_battleship:b = false
					}
				}
				triggerEnable {
					target:t = "nbttl_start_destroyer_spawn"
				}
			}
			else_actions {
				triggerEnable {
					target:t = "nbttl_start_destroyer_spawn"
				}
			}
		}
		nbttl_check_random_cruiser_spawn {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				initMission {

				}
			}
			conditions {
				objectExists {
					target:t = "@t1_cruiser_spawn_01_name"
					type:t = "squad"
				}
				objectExists {
					target:t = "@t2_cruiser_spawn_01_name"
					type:t = "squad"
				}
				objectExists {
					target:t = "@t1_cruiser_spawn_02_name"
					type:t = "squad"
				}
				objectExists {
					target:t = "@t2_cruiser_spawn_02_name"
					type:t = "squad"
				}
			}
			actions {
				missionMarkAsRespawnPoint {
					loc_name:t = "@loc_name_random_str"
					spawnEffect:b = false
					isStrictSpawn:b = false
					isAirfield:b = false
					isUnit:b = false
					useExisting:b = false
					isIndividual:b = true
					removeAreas:b = false
					canSpawnOnNeutral:b = false
					showOnMap:b = true
					radius:r = -1
					onlyOnePlayerPerSpawnPoint:b = false
					resetStrictSpawnIndex:b = false
					replaceAreas:b = false
					forceCreate:b = false
					target:t = "@t1_cruiser_spawn_01_name"
					target:t = "@t1_cruiser_spawn_02_name"
					team:t = "A"
					separate_fuel_time:b = false
					modular_airfield:b = false
					offset:p3 = 0, 0, 0
					tags {
						air:b = false
						tank:b = false
						ship:b = true
						boat:b = false
						type_destroyer:b = false
						type_light_cruiser:b = true
						type_heavy_cruiser:b = true
						type_battlecruiser:b = true
						type_battleship:b = true
					}
				}
				missionMarkAsRespawnPoint {
					loc_name:t = "@loc_name_random_str"
					spawnEffect:b = false
					isStrictSpawn:b = false
					isAirfield:b = false
					isUnit:b = false
					useExisting:b = false
					isIndividual:b = true
					removeAreas:b = false
					canSpawnOnNeutral:b = false
					showOnMap:b = true
					radius:r = -1
					onlyOnePlayerPerSpawnPoint:b = false
					resetStrictSpawnIndex:b = false
					replaceAreas:b = false
					forceCreate:b = false
					target:t = "@t2_cruiser_spawn_01_name"
					target:t = "@t2_cruiser_spawn_02_name"
					team:t = "B"
					separate_fuel_time:b = false
					modular_airfield:b = false
					offset:p3 = 0, 0, 0
					tags {
						air:b = false
						tank:b = false
						ship:b = true
						boat:b = false
						type_destroyer:b = false
						type_light_cruiser:b = true
						type_heavy_cruiser:b = true
						type_battlecruiser:b = true
						type_battleship:b = true
					}
				}
				triggerEnable {
					target:t = "nbttl_start_cruiser_spawn"
				}
			}
			else_actions {
				triggerEnable {
					target:t = "nbttl_start_cruiser_spawn"
				}
			}
		}
		nbttl_check_random_cruiser_spawn_if_not_exist {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				initMission {

				}
			}
			conditions {
				objectExists {
					target:t = "@t1_cruiser_spawn_01_name"
					type:t = "squad"
				}
				objectExists {
					target:t = "@t2_cruiser_spawn_01_name"
					type:t = "squad"
				}
				objectExists {
					target:t = "@t1_cruiser_spawn_02_name"
					type:t = "squad"
				}
				objectExists {
					target:t = "@t2_cruiser_spawn_02_name"
					type:t = "squad"
				}
			}
			actions {
				comment {
					value:t = ""
				}
				missionMarkAsRespawnPoint {
					loc_name:t = "@loc_name_random_str"
					spawnEffect:b = false
					isStrictSpawn:b = false
					isAirfield:b = false
					isUnit:b = false
					useExisting:b = false
					isIndividual:b = true
					removeAreas:b = false
					canSpawnOnNeutral:b = false
					showOnMap:b = true
					radius:r = -1
					onlyOnePlayerPerSpawnPoint:b = false
					resetStrictSpawnIndex:b = false
					replaceAreas:b = false
					forceCreate:b = false
					target:t = "@t1_cruiser_spawn_01_name"
					target:t = "@t1_cruiser_spawn_02_name"
					team:t = "A"
					separate_fuel_time:b = false
					modular_airfield:b = false
					offset:p3 = 0, 0, 0
					tags {
						air:b = false
						tank:b = false
						type_frigate:b = true
						type_destroyer:b = true
						type_light_cruiser:b = true
						type_heavy_cruiser:b = true
						type_battlecruiser:b = true
						type_battleship:b = true
					}
				}
				missionMarkAsRespawnPoint {
					loc_name:t = "@loc_name_random_str"
					spawnEffect:b = false
					isStrictSpawn:b = false
					isAirfield:b = false
					isUnit:b = false
					useExisting:b = false
					isIndividual:b = true
					removeAreas:b = false
					canSpawnOnNeutral:b = false
					showOnMap:b = true
					radius:r = -1
					onlyOnePlayerPerSpawnPoint:b = false
					resetStrictSpawnIndex:b = false
					replaceAreas:b = false
					forceCreate:b = false
					target:t = "@t2_cruiser_spawn_01_name"
					target:t = "@t2_cruiser_spawn_02_name"
					team:t = "B"
					separate_fuel_time:b = false
					modular_airfield:b = false
					offset:p3 = 0, 0, 0
					tags {
						air:b = false
						tank:b = false
						type_frigate:b = true
						type_destroyer:b = true
						type_light_cruiser:b = true
						type_heavy_cruiser:b = true
						type_battlecruiser:b = true
						type_battleship:b = true
					}
				}
				triggerEnable {
					target:t = "nbttl_start_cruiser_spawn_if_not_exist"
				}
			}
			else_actions {
				triggerEnable {
					target:t = "nbttl_start_cruiser_spawn_if_not_exist"
				}
			}
		}
		nbttl_start {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				initMission {

				}
			}
			conditions {

			}
			actions {
				missionMarkAsRespawnPoint {
					loc_name:t = "missions/spawn_01"
					spawnEffect:b = false
					isAirfield:b = false
					isUnit:b = false
					radius:r = -1
					isStrictSpawn:b = false
					useExisting:b = false
					removeAreas:b = false
					canSpawnOnNeutral:b = false
					showOnMap:b = true
					isIndividual:b = true
					onlyOnePlayerPerSpawnPoint:b = false
					resetStrictSpawnIndex:b = false
					replaceAreas:b = false
					forceCreate:b = false
					target:t = "@t1_boat_spawn_01_name"
					team:t = "A"
					tags {
						air:b = false
						tank:b = false
						ship:b = true
						boat:b = true
						type_frigate:b = false
						type_destroyer:b = false
						type_light_cruiser:b = false
						type_heavy_cruiser:b = false
						type_battlecruiser:b = false
						type_battleship:b = false
					}
				}
				missionMarkAsRespawnPoint {
					loc_name:t = "missions/spawn_01"
					spawnEffect:b = false
					isAirfield:b = false
					isUnit:b = false
					radius:r = -1
					isStrictSpawn:b = false
					useExisting:b = false
					removeAreas:b = false
					canSpawnOnNeutral:b = false
					showOnMap:b = true
					isIndividual:b = true
					onlyOnePlayerPerSpawnPoint:b = false
					resetStrictSpawnIndex:b = false
					replaceAreas:b = false
					forceCreate:b = false
					target:t = "@t2_boat_spawn_01_name"
					team:t = "B"
					separate_fuel_time:b = false
					modular_airfield:b = false
					offset:p3 = 0, 0, 0
					tags {
						air:b = false
						tank:b = false
						ship:b = true
						boat:b = true
						type_frigate:b = false
						type_destroyer:b = false
						type_light_cruiser:b = false
						type_heavy_cruiser:b = false
						type_battlecruiser:b = false
						type_battleship:b = false
					}
				}
				missionMarkAsCaptureZone {
					army:i = 0
					name_for_respawn_base:t = ""
					timeMultiplier:r = 1.5
					disableZone:b = false
					target:t = "@zone_01_name"
					iconIndex:i = 0
					canCaptureOnGround:b = false
					playAirfieldSound:b = false
					canCaptureInAir:b = false
					canCaptureByGM:b = true
					useHUDMarkers:b = true
					markUnitPreset:t = "ship_buoys"
					zoneDefenders {

					}
				}
				missionMarkAsCaptureZone {
					army:i = 0
					name_for_respawn_base:t = ""
					timeMultiplier:r = 1.5
					disableZone:b = false
					target:t = "@zone_02_name"
					iconIndex:i = 1
					canCaptureOnGround:b = false
					playAirfieldSound:b = false
					canCaptureInAir:b = false
					canCaptureByGM:b = true
					useHUDMarkers:b = true
					markUnitPreset:t = "ship_buoys"
					zoneDefenders {

					}
				}
				moAddMissionObjective {
					target:t = "avn_NBttl_objective_capture_zone_for_progress"
					object_var_comp_op:t = "equal"
					object_var_name:t = ""
				}
				moAddMissionObjective {
					target:t = "avn_NBttl_objective_capture_all_zones"
					object_var_comp_op:t = "equal"
					object_var_name:t = ""
				}
				missionShowMapIcon {
					show:b = true
					iconName:t = "ui/gameuiskin#objective_captureZone_captured.svg"
					areaName:t = "@zone_t1_name"
					colorCode:t = "Team A"
				}
				missionShowMapIcon {
					show:b = true
					iconName:t = "ui/gameuiskin#objective_captureZone_captured.svg"
					areaName:t = "@zone_t2_name"
					colorCode:t = "Team B"
				}
				missionShowMapLine {
					areaNameFrom:t = "@zone_01_name"
					areaNameTo:t = "@zone_t1_name"
					show:b = true
					colorCode:t = "Team A"
				}
				missionShowMapLine {
					areaNameFrom:t = "@zone_01_name"
					areaNameTo:t = "@zone_t2_name"
					show:b = true
					colorCode:t = "Team B"
				}
				missionShowMapLine {
					areaNameFrom:t = "@zone_02_name"
					areaNameTo:t = "@zone_t1_name"
					show:b = true
					colorCode:t = "Team A"
				}
				missionShowMapLine {
					areaNameFrom:t = "@zone_02_name"
					areaNameTo:t = "@zone_t2_name"
					show:b = true
					colorCode:t = "Team B"
				}
				triggerEnable {
					target:t = "nbttl_check_second_spawn"
					target:t = "nbttl_check_battle_area_exist"
				}
			}
			else_actions {

			}
		}
		nbttl_check_second_spawn {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				initMission {

				}
			}
			conditions {
				objectExists {
					target:t = "@t1_boat_spawn_02_name"
					type:t = "squad"
				}
				objectExists {
					target:t = "@t2_boat_spawn_02_name"
					type:t = "squad"
				}
			}
			actions {
				missionMarkAsRespawnPoint {
					loc_name:t = "missions/spawn_02"
					spawnEffect:b = false
					isAirfield:b = false
					isUnit:b = false
					radius:r = -1
					isStrictSpawn:b = false
					useExisting:b = false
					removeAreas:b = false
					canSpawnOnNeutral:b = false
					showOnMap:b = true
					isIndividual:b = true
					onlyOnePlayerPerSpawnPoint:b = false
					resetStrictSpawnIndex:b = false
					replaceAreas:b = false
					forceCreate:b = false
					target:t = "@t1_boat_spawn_02_name"
					team:t = "A"
					separate_fuel_time:b = false
					modular_airfield:b = false
					offset:p3 = 0, 0, 0
					tags {
						air:b = false
						tank:b = false
						ship:b = true
						boat:b = true
						type_frigate:b = false
						type_destroyer:b = false
						type_light_cruiser:b = false
						type_heavy_cruiser:b = false
						type_battlecruiser:b = false
						type_battleship:b = false
					}
				}
				missionMarkAsRespawnPoint {
					loc_name:t = "missions/spawn_02"
					spawnEffect:b = false
					isAirfield:b = false
					isUnit:b = false
					radius:r = -1
					isStrictSpawn:b = false
					useExisting:b = false
					removeAreas:b = false
					canSpawnOnNeutral:b = false
					showOnMap:b = true
					isIndividual:b = true
					onlyOnePlayerPerSpawnPoint:b = false
					resetStrictSpawnIndex:b = false
					replaceAreas:b = false
					forceCreate:b = false
					target:t = "@t2_boat_spawn_02_name"
					team:t = "B"
					separate_fuel_time:b = false
					modular_airfield:b = false
					offset:p3 = 0, 0, 0
					tags {
						air:b = false
						tank:b = false
						ship:b = true
						boat:b = true
						type_frigate:b = false
						type_destroyer:b = false
						type_light_cruiser:b = false
						type_heavy_cruiser:b = false
						type_battlecruiser:b = false
						type_battleship:b = false
					}
				}
				triggerEnable {
					target:t = "nbttl_check_random_cruiser_spawn"
				}
			}
			else_actions {
				triggerEnable {
					target:t = "nbttl_check_random_cruiser_spawn"
				}
			}
		}
		nbttl_check_battle_area_exist {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				initMission {

				}
			}
			conditions {
				objectExists {
					target:t = "@battle_area_name"
					type:t = "area"
				}
			}
			actions {
				missionBattleArea {
					air:b = false
					ground:b = true
					mapArea:b = true
					killOutOfBattleArea:b = true
					target:t = "@battle_area_name"
					newGridHorizontalCellCount:i = 0
					killArea:b = false
					detectionArea:b = false
					airMapArea:b = false
					area:t = "@battle_area_name"
				}
			}
			else_actions {

			}
		}
		nbttl_start_destroyer_spawn {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				initMission {

				}
			}
			conditions {
				objectExists {
					target:t = "@t1_destroyer_spawn_01_name"
					type:t = "squad"
				}
				objectExists {
					target:t = "@t2_destroyer_spawn_01_name"
					type:t = "squad"
				}
			}
			actions {
				missionMarkAsRespawnPoint {
					loc_name:t = "missions/spawn_destroyers_01"
					spawnEffect:b = false
					isAirfield:b = false
					isUnit:b = false
					radius:r = -1
					isStrictSpawn:b = false
					useExisting:b = false
					removeAreas:b = false
					canSpawnOnNeutral:b = false
					showOnMap:b = true
					isIndividual:b = true
					onlyOnePlayerPerSpawnPoint:b = false
					resetStrictSpawnIndex:b = false
					replaceAreas:b = false
					forceCreate:b = false
					target:t = "@t1_destroyer_spawn_01_name"
					team:t = "A"
					separate_fuel_time:b = false
					modular_airfield:b = false
					offset:p3 = 0, 0, 0
					tags {
						air:b = false
						tank:b = false
						ship:b = true
						boat:b = false
						type_frigate:b = true
						type_destroyer:b = true
						type_light_cruiser:b = false
						type_heavy_cruiser:b = false
						type_battlecruiser:b = false
						type_battleship:b = false
					}
				}
				missionMarkAsRespawnPoint {
					loc_name:t = "missions/spawn_destroyers_01"
					spawnEffect:b = false
					isAirfield:b = false
					isUnit:b = false
					radius:r = -1
					isStrictSpawn:b = false
					useExisting:b = false
					removeAreas:b = false
					canSpawnOnNeutral:b = false
					showOnMap:b = true
					isIndividual:b = true
					onlyOnePlayerPerSpawnPoint:b = false
					resetStrictSpawnIndex:b = false
					replaceAreas:b = false
					forceCreate:b = false
					target:t = "@t2_destroyer_spawn_01_name"
					team:t = "B"
					separate_fuel_time:b = false
					modular_airfield:b = false
					offset:p3 = 0, 0, 0
					tags {
						air:b = false
						tank:b = false
						ship:b = true
						boat:b = false
						type_frigate:b = true
						type_destroyer:b = true
						type_light_cruiser:b = false
						type_heavy_cruiser:b = false
						type_battlecruiser:b = false
						type_battleship:b = false
					}
				}
				triggerEnable {
					target:t = "nbttl_check_second_destroyer_spawn"
				}
			}
			else_actions {
				triggerEnable {
					target:t = "nbttl_check_second_destroyer_spawn"
				}
			}
		}
		nbttl_check_second_destroyer_spawn {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				initMission {

				}
			}
			conditions {
				objectExists {
					target:t = "@t1_destroyer_spawn_02_name"
					type:t = "squad"
				}
				objectExists {
					target:t = "@t2_destroyer_spawn_02_name"
					type:t = "squad"
				}
			}
			actions {
				missionMarkAsRespawnPoint {
					loc_name:t = "missions/spawn_destroyers_02"
					spawnEffect:b = false
					isAirfield:b = false
					isUnit:b = false
					radius:r = -1
					isStrictSpawn:b = false
					useExisting:b = false
					removeAreas:b = false
					canSpawnOnNeutral:b = false
					showOnMap:b = true
					isIndividual:b = true
					onlyOnePlayerPerSpawnPoint:b = false
					resetStrictSpawnIndex:b = false
					replaceAreas:b = false
					forceCreate:b = false
					target:t = "@t1_destroyer_spawn_02_name"
					team:t = "A"
					separate_fuel_time:b = false
					modular_airfield:b = false
					offset:p3 = 0, 0, 0
					tags {
						air:b = false
						tank:b = false
						ship:b = true
						boat:b = false
						type_frigate:b = true
						type_destroyer:b = true
						type_light_cruiser:b = false
						type_heavy_cruiser:b = false
						type_battlecruiser:b = false
						type_battleship:b = false
					}
				}
				missionMarkAsRespawnPoint {
					loc_name:t = "missions/spawn_destroyers_02"
					spawnEffect:b = false
					isAirfield:b = false
					isUnit:b = false
					radius:r = -1
					isStrictSpawn:b = false
					useExisting:b = false
					removeAreas:b = false
					canSpawnOnNeutral:b = false
					showOnMap:b = true
					isIndividual:b = true
					onlyOnePlayerPerSpawnPoint:b = false
					resetStrictSpawnIndex:b = false
					replaceAreas:b = false
					forceCreate:b = false
					target:t = "@t2_destroyer_spawn_02_name"
					team:t = "B"
					separate_fuel_time:b = false
					modular_airfield:b = false
					offset:p3 = 0, 0, 0
					tags {
						air:b = false
						tank:b = false
						ship:b = true
						boat:b = false
						type_frigate:b = true
						type_destroyer:b = true
						type_light_cruiser:b = false
						type_heavy_cruiser:b = false
						type_battlecruiser:b = false
						type_battleship:b = false
					}
				}
			}
			else_actions {

			}
		}
		nbttl_start_cruiser_spawn {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				initMission {

				}
			}
			conditions {
				objectExists {
					target:t = "@t1_cruiser_spawn_01_name"
					type:t = "squad"
				}
				objectExists {
					target:t = "@t2_cruiser_spawn_01_name"
					type:t = "squad"
				}
			}
			actions {
				missionMarkAsRespawnPoint {
					loc_name:t = "@loc_name_01_str"
					spawnEffect:b = false
					isAirfield:b = false
					isUnit:b = false
					radius:r = -1
					isStrictSpawn:b = false
					useExisting:b = false
					removeAreas:b = false
					canSpawnOnNeutral:b = false
					showOnMap:b = true
					isIndividual:b = true
					onlyOnePlayerPerSpawnPoint:b = false
					resetStrictSpawnIndex:b = false
					replaceAreas:b = false
					forceCreate:b = false
					target:t = "@t1_cruiser_spawn_01_name"
					team:t = "A"
					separate_fuel_time:b = false
					modular_airfield:b = false
					offset:p3 = 0, 0, 0
					tags {
						air:b = false
						tank:b = false
						type_destroyer:b = false
						type_light_cruiser:b = true
						type_heavy_cruiser:b = true
						type_battlecruiser:b = true
						type_battleship:b = true
					}
				}
				missionMarkAsRespawnPoint {
					loc_name:t = "@loc_name_01_str"
					spawnEffect:b = false
					isAirfield:b = false
					isUnit:b = false
					radius:r = -1
					isStrictSpawn:b = false
					useExisting:b = false
					removeAreas:b = false
					canSpawnOnNeutral:b = false
					showOnMap:b = true
					isIndividual:b = true
					onlyOnePlayerPerSpawnPoint:b = false
					resetStrictSpawnIndex:b = false
					replaceAreas:b = false
					forceCreate:b = false
					target:t = "@t2_cruiser_spawn_01_name"
					team:t = "B"
					separate_fuel_time:b = false
					modular_airfield:b = false
					offset:p3 = 0, 0, 0
					tags {
						air:b = false
						tank:b = false
						type_destroyer:b = false
						type_light_cruiser:b = true
						type_heavy_cruiser:b = true
						type_battlecruiser:b = true
						type_battleship:b = true
					}
				}
				triggerEnable {
					target:t = "nbttl_check_second_cruiser_spawn"
				}
			}
			else_actions {
				varSetString {
					value:t = "nbttl_t1_destroyer_spawn_01"
					var:t = "t1_cruiser_spawn_01_name"
				}
				varSetString {
					value:t = "nbttl_t1_destroyer_spawn_02"
					var:t = "t1_cruiser_spawn_02_name"
				}
				varSetString {
					value:t = "nbttl_t2_destroyer_spawn_01"
					var:t = "t2_cruiser_spawn_01_name"
				}
				varSetString {
					value:t = "nbttl_t2_destroyer_spawn_02"
					var:t = "t2_cruiser_spawn_02_name"
				}
				varSetString {
					value:t = "missions/spawn_destroyers_random"
					var:t = "loc_name_random_str"
				}
				varSetString {
					value:t = "missions/spawn_destroyers_01"
					var:t = "loc_name_01_str"
				}
				varSetString {
					value:t = "missions/spawn_destroyers_02"
					var:t = "loc_name_02_str"
				}
				triggerEnable {
					target:t = "nbttl_check_random_cruiser_spawn_if_not_exist"
				}
			}
		}
		nbttl_check_second_cruiser_spawn {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				initMission {

				}
			}
			conditions {
				objectExists {
					target:t = "@t1_cruiser_spawn_02_name"
					type:t = "squad"
				}
				objectExists {
					target:t = "@t2_cruiser_spawn_02_name"
					type:t = "squad"
				}
			}
			actions {
				missionMarkAsRespawnPoint {
					loc_name:t = "@loc_name_02_str"
					spawnEffect:b = false
					isAirfield:b = false
					isUnit:b = false
					radius:r = -1
					isStrictSpawn:b = false
					useExisting:b = false
					removeAreas:b = false
					canSpawnOnNeutral:b = false
					showOnMap:b = true
					isIndividual:b = true
					onlyOnePlayerPerSpawnPoint:b = false
					resetStrictSpawnIndex:b = false
					replaceAreas:b = false
					forceCreate:b = false
					target:t = "@t1_cruiser_spawn_02_name"
					team:t = "A"
					separate_fuel_time:b = false
					modular_airfield:b = false
					offset:p3 = 0, 0, 0
					tags {
						air:b = false
						tank:b = false
						type_destroyer:b = false
						type_light_cruiser:b = true
						type_heavy_cruiser:b = true
						type_battlecruiser:b = true
						type_battleship:b = true
					}
				}
				missionMarkAsRespawnPoint {
					loc_name:t = "@loc_name_02_str"
					spawnEffect:b = false
					isAirfield:b = false
					isUnit:b = false
					radius:r = -1
					isStrictSpawn:b = false
					useExisting:b = false
					removeAreas:b = false
					canSpawnOnNeutral:b = false
					showOnMap:b = true
					isIndividual:b = true
					onlyOnePlayerPerSpawnPoint:b = false
					resetStrictSpawnIndex:b = false
					replaceAreas:b = false
					forceCreate:b = false
					target:t = "@t2_cruiser_spawn_02_name"
					team:t = "B"
					separate_fuel_time:b = false
					modular_airfield:b = false
					offset:p3 = 0, 0, 0
					tags {
						air:b = false
						tank:b = false
						type_destroyer:b = false
						type_light_cruiser:b = true
						type_heavy_cruiser:b = true
						type_battlecruiser:b = true
						type_battleship:b = true
					}
				}
				triggerEnable {
					target:t = "nbttl_check_random_destroyer_spawn"
				}
			}
			else_actions {
				triggerEnable {
					target:t = "nbttl_check_random_destroyer_spawn"
				}
			}
		}
		nbttl_start_cruiser_spawn_if_not_exist {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				initMission {

				}
			}
			conditions {
				objectExists {
					target:t = "@t1_cruiser_spawn_01_name"
					type:t = "squad"
				}
				objectExists {
					target:t = "@t2_cruiser_spawn_01_name"
					type:t = "squad"
				}
			}
			actions {
				missionMarkAsRespawnPoint {
					loc_name:t = "@loc_name_01_str"
					spawnEffect:b = false
					isAirfield:b = false
					isUnit:b = false
					radius:r = -1
					isStrictSpawn:b = false
					useExisting:b = false
					removeAreas:b = false
					canSpawnOnNeutral:b = false
					showOnMap:b = true
					isIndividual:b = true
					onlyOnePlayerPerSpawnPoint:b = false
					resetStrictSpawnIndex:b = false
					replaceAreas:b = false
					forceCreate:b = false
					target:t = "@t1_cruiser_spawn_01_name"
					team:t = "A"
					separate_fuel_time:b = false
					modular_airfield:b = false
					offset:p3 = 0, 0, 0
					tags {
						air:b = false
						tank:b = false
						type_destroyer:b = true
						type_light_cruiser:b = true
						type_heavy_cruiser:b = true
						type_battlecruiser:b = true
						type_battleship:b = true
					}
				}
				missionMarkAsRespawnPoint {
					loc_name:t = "@loc_name_01_str"
					spawnEffect:b = false
					isAirfield:b = false
					isUnit:b = false
					radius:r = -1
					isStrictSpawn:b = false
					useExisting:b = false
					removeAreas:b = false
					canSpawnOnNeutral:b = false
					showOnMap:b = true
					isIndividual:b = true
					onlyOnePlayerPerSpawnPoint:b = false
					resetStrictSpawnIndex:b = false
					replaceAreas:b = false
					forceCreate:b = false
					target:t = "@t2_cruiser_spawn_01_name"
					team:t = "B"
					separate_fuel_time:b = false
					modular_airfield:b = false
					offset:p3 = 0, 0, 0
					tags {
						air:b = false
						tank:b = false
						type_frigate:b = true
						type_destroyer:b = true
						type_light_cruiser:b = true
						type_heavy_cruiser:b = true
						type_battlecruiser:b = true
						type_battleship:b = true
					}
				}
				triggerEnable {
					target:t = "nbttl_check_second_cruiser_spawn_if_not_exist"
				}
			}
			else_actions {
				triggerEnable {
					target:t = "nbttl_check_second_cruiser_spawn_if_not_exist"
				}
			}
		}
		nbttl_check_second_cruiser_spawn_if_not_exist {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				initMission {

				}
			}
			conditions {
				objectExists {
					target:t = "@t1_cruiser_spawn_02_name"
					type:t = "squad"
				}
				objectExists {
					target:t = "@t2_cruiser_spawn_02_name"
					type:t = "squad"
				}
			}
			actions {
				missionMarkAsRespawnPoint {
					loc_name:t = "@loc_name_02_str"
					spawnEffect:b = false
					isAirfield:b = false
					isUnit:b = false
					radius:r = -1
					isStrictSpawn:b = false
					useExisting:b = false
					removeAreas:b = false
					canSpawnOnNeutral:b = false
					showOnMap:b = true
					isIndividual:b = true
					onlyOnePlayerPerSpawnPoint:b = false
					resetStrictSpawnIndex:b = false
					replaceAreas:b = false
					forceCreate:b = false
					target:t = "@t1_cruiser_spawn_02_name"
					team:t = "A"
					separate_fuel_time:b = false
					modular_airfield:b = false
					offset:p3 = 0, 0, 0
					tags {
						air:b = false
						tank:b = false
						type_frigate:b = true
						type_destroyer:b = true
						type_light_cruiser:b = true
						type_heavy_cruiser:b = true
						type_battlecruiser:b = true
						type_battleship:b = true
					}
				}
				missionMarkAsRespawnPoint {
					loc_name:t = "@loc_name_02_str"
					spawnEffect:b = false
					isAirfield:b = false
					isUnit:b = false
					radius:r = -1
					isStrictSpawn:b = false
					useExisting:b = false
					removeAreas:b = false
					canSpawnOnNeutral:b = false
					showOnMap:b = true
					isIndividual:b = true
					onlyOnePlayerPerSpawnPoint:b = false
					resetStrictSpawnIndex:b = false
					replaceAreas:b = false
					forceCreate:b = false
					target:t = "@t2_cruiser_spawn_02_name"
					team:t = "B"
					separate_fuel_time:b = false
					modular_airfield:b = false
					offset:p3 = 0, 0, 0
					tags {
						air:b = false
						tank:b = false
						type_frigate:b = true
						type_destroyer:b = true
						type_light_cruiser:b = true
						type_heavy_cruiser:b = true
						type_battlecruiser:b = true
						type_battleship:b = true
					}
				}
			}
			else_actions {

			}
		}
	}
	zones_holder_checker {
		isCategory:b = true
		is_enabled:b = true
		nbttl_zone_01_captured_by_t0 {
			is_enabled:b = true
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = true
			}
			events {
				periodicEvent {
					time:r = 0.1
				}
			}
			conditions {
				missionIsZoneCaptured {
					target:t = "@zone_01_name"
					army:i = 0
				}
			}
			actions {
				varSetInt {
					value:i = 0
					var:t = "zone_01_holder"
				}
			}
			else_actions {

			}
		}
		nbttl_zone_01_captured_by_t1 {
			is_enabled:b = true
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = true
			}
			events {
				periodicEvent {
					time:r = 0.1
				}
			}
			conditions {
				missionIsZoneCaptured {
					target:t = "@zone_01_name"
					army:i = 1
				}
			}
			actions {
				varSetInt {
					value:i = 1
					var:t = "zone_01_holder"
				}
			}
			else_actions {

			}
		}
		nbttl_zone_01_captured_by_t2 {
			is_enabled:b = true
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = true
			}
			events {
				periodicEvent {
					time:r = 0.1
				}
			}
			conditions {
				missionIsZoneCaptured {
					target:t = "@zone_01_name"
					army:i = 2
				}
			}
			actions {
				varSetInt {
					value:i = 2
					var:t = "zone_01_holder"
				}
			}
			else_actions {

			}
		}
		nbttl_zone_02_captured_by_t0 {
			is_enabled:b = true
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = true
			}
			events {
				periodicEvent {
					time:r = 0.1
				}
			}
			conditions {
				missionIsZoneCaptured {
					target:t = "@zone_02_name"
					army:i = 0
				}
			}
			actions {
				varSetInt {
					value:i = 0
					var:t = "zone_02_holder"
				}
			}
			else_actions {

			}
		}
		nbttl_zone_02_captured_by_t1 {
			is_enabled:b = true
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = true
			}
			events {
				periodicEvent {
					time:r = 0.1
				}
			}
			conditions {
				missionIsZoneCaptured {
					target:t = "@zone_02_name"
					army:i = 1
				}
			}
			actions {
				varSetInt {
					value:i = 1
					var:t = "zone_02_holder"
				}
			}
			else_actions {

			}
		}
		nbttl_zone_02_captured_by_t2 {
			is_enabled:b = true
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = true
			}
			events {
				periodicEvent {
					time:r = 0.1
				}
			}
			conditions {
				missionIsZoneCaptured {
					target:t = "@zone_02_name"
					army:i = 2
				}
			}
			actions {
				varSetInt {
					value:i = 2
					var:t = "zone_02_holder"
				}
			}
			else_actions {

			}
		}
		nbttl_zone_t1_captured_by_t0 {
			is_enabled:b = true
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = true
			}
			events {
				periodicEvent {
					time:r = 0.1
				}
			}
			conditions {
				missionIsZoneCaptured {
					target:t = "@zone_t1_name"
					army:i = 0
				}
			}
			actions {
				varSetInt {
					value:i = 0
					var:t = "zone_t1_holder"
				}
			}
			else_actions {

			}
		}
		nbttl_zone_t1_captured_by_t1 {
			is_enabled:b = true
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = true
			}
			events {
				periodicEvent {
					time:r = 0.1
				}
			}
			conditions {
				missionIsZoneCaptured {
					target:t = "@zone_t1_name"
					army:i = 1
				}
			}
			actions {
				varSetInt {
					value:i = 1
					var:t = "zone_t1_holder"
				}
			}
			else_actions {

			}
		}
		nbttl_zone_t1_captured_by_t2 {
			is_enabled:b = true
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = true
			}
			events {
				periodicEvent {
					time:r = 0.1
				}
			}
			conditions {
				missionIsZoneCaptured {
					target:t = "@zone_t1_name"
					army:i = 2
				}
			}
			actions {
				varSetInt {
					value:i = 2
					var:t = "zone_t1_holder"
				}
			}
			else_actions {

			}
		}
		nbttl_zone_t2_captured_by_t0 {
			is_enabled:b = true
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = true
			}
			events {
				periodicEvent {
					time:r = 0.1
				}
			}
			conditions {
				missionIsZoneCaptured {
					target:t = "@zone_t2_name"
					army:i = 0
				}
			}
			actions {
				varSetInt {
					value:i = 0
					var:t = "zone_t2_holder"
				}
			}
			else_actions {

			}
		}
		nbttl_zone_t2_captured_by_t1 {
			is_enabled:b = true
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = true
			}
			events {
				periodicEvent {
					time:r = 0.1
				}
			}
			conditions {
				missionIsZoneCaptured {
					target:t = "@zone_t2_name"
					army:i = 1
				}
			}
			actions {
				varSetInt {
					value:i = 1
					var:t = "zone_t2_holder"
				}
			}
			else_actions {

			}
		}
		nbttl_zone_t2_captured_by_t2 {
			is_enabled:b = true
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = true
			}
			events {
				periodicEvent {
					time:r = 0.1
				}
			}
			conditions {
				missionIsZoneCaptured {
					target:t = "@zone_t2_name"
					army:i = 2
				}
			}
			actions {
				varSetInt {
					value:i = 2
					var:t = "zone_t2_holder"
				}
			}
			else_actions {

			}
		}
		nbttl_t1_all_zone_captured {
			is_enabled:b = true
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 0.1
				}
			}
			conditions {
				varCompareInt {
					var_value:t = "zone_t2_holder"
					value:i = 1
					comparasion_func:t = "equal"
				}
				varCompareInt {
					var_value:t = "zone_01_holder"
					value:i = 1
					comparasion_func:t = "equal"
				}
				varCompareInt {
					var_value:t = "zone_02_holder"
					value:i = 1
					comparasion_func:t = "equal"
				}
			}
			actions {
				gameMPChangeScore {
					value:i = -100
					valueSystem:t = "percentage"
					team:t = "B"
				}
			}
			else_actions {

			}
		}
		nbttl_t2_all_zone_captured {
			is_enabled:b = true
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 0.1
				}
			}
			conditions {
				varCompareInt {
					var_value:t = "zone_t1_holder"
					value:i = 2
					comparasion_func:t = "equal"
				}
				varCompareInt {
					var_value:t = "zone_01_holder"
					value:i = 2
					comparasion_func:t = "equal"
				}
				varCompareInt {
					var_value:t = "zone_02_holder"
					value:i = 2
					comparasion_func:t = "equal"
				}
			}
			actions {
				gameMPChangeScore {
					value:i = -100
					valueSystem:t = "percentage"
					team:t = "A"
				}
			}
			else_actions {

			}
		}
	}
	nbttl_draw_zone_01_not_captured {
		is_enabled:b = true
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "zone_01_holder"
				value:i = 0
				comparasion_func:t = "equal"
			}
		}
		actions {
			missionShowMapLine {
				areaNameFrom:t = "@zone_01_name"
				areaNameTo:t = "@zone_t1_name"
				show:b = true
				colorCode:t = "Team A"
			}
			missionShowMapLine {
				areaNameFrom:t = "@zone_01_name"
				areaNameTo:t = "@zone_t2_name"
				show:b = true
				colorCode:t = "Team B"
			}
		}
		else_actions {

		}
	}
	nbttl_draw_zone_02_not_captured {
		is_enabled:b = true
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "zone_02_holder"
				value:i = 0
				comparasion_func:t = "equal"
			}
		}
		actions {
			missionShowMapLine {
				areaNameFrom:t = "@zone_02_name"
				areaNameTo:t = "@zone_t1_name"
				show:b = true
				colorCode:t = "Team A"
			}
			missionShowMapLine {
				areaNameFrom:t = "@zone_02_name"
				areaNameTo:t = "@zone_t2_name"
				show:b = true
				colorCode:t = "Team B"
			}
		}
		else_actions {

		}
	}
	nbttl_draw_zone_01_captured_by_t1 {
		is_enabled:b = true
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "zone_01_holder"
				value:i = 1
				comparasion_func:t = "equal"
			}
		}
		actions {
			missionShowMapLine {
				areaNameFrom:t = "@zone_01_name"
				areaNameTo:t = "@zone_t1_name"
				show:b = true
				colorCode:t = "Team A"
			}
			missionShowMapLine {
				areaNameFrom:t = "@zone_01_name"
				areaNameTo:t = "@zone_t2_name"
				show:b = true
				colorCode:t = "Team A"
			}
		}
		else_actions {

		}
	}
	nbttl_draw_zone_02_captured_by_t1 {
		is_enabled:b = true
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "zone_02_holder"
				value:i = 1
				comparasion_func:t = "equal"
			}
		}
		actions {
			missionShowMapLine {
				areaNameFrom:t = "@zone_02_name"
				areaNameTo:t = "@zone_t1_name"
				show:b = true
				colorCode:t = "Team A"
			}
			missionShowMapLine {
				areaNameFrom:t = "@zone_02_name"
				areaNameTo:t = "@zone_t2_name"
				show:b = true
				colorCode:t = "Team A"
			}
		}
		else_actions {

		}
	}
	nbttl_draw_zone_01_captured_by_t2 {
		is_enabled:b = true
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "zone_01_holder"
				value:i = 2
				comparasion_func:t = "equal"
			}
		}
		actions {
			missionShowMapLine {
				areaNameFrom:t = "@zone_01_name"
				areaNameTo:t = "@zone_t1_name"
				show:b = true
				colorCode:t = "Team B"
			}
			missionShowMapLine {
				areaNameFrom:t = "@zone_01_name"
				areaNameTo:t = "@zone_t2_name"
				show:b = true
				colorCode:t = "Team B"
			}
		}
		else_actions {

		}
	}
	nbttl_draw_zone_02_captured_by_t2 {
		is_enabled:b = true
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "zone_02_holder"
				value:i = 2
				comparasion_func:t = "equal"
			}
		}
		actions {
			missionShowMapLine {
				areaNameFrom:t = "@zone_02_name"
				areaNameTo:t = "@zone_t1_name"
				show:b = true
				colorCode:t = "Team B"
			}
			missionShowMapLine {
				areaNameFrom:t = "@zone_02_name"
				areaNameTo:t = "@zone_t2_name"
				show:b = true
				colorCode:t = "Team B"
			}
		}
		else_actions {

		}
	}
	zones_capture_logic {
		isCategory:b = true
		is_enabled:b = true
		nbttl_zone_t1_can_be_captured {
			is_enabled:b = true
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 0.1
				}
			}
			conditions {
				varCompareInt {
					var_value:t = "zone_01_holder"
					value:i = 2
					comparasion_func:t = "equal"
				}
				varCompareInt {
					var_value:t = "zone_02_holder"
					value:i = 2
					comparasion_func:t = "equal"
				}
			}
			actions {
				missionMarkAsCaptureZone {
					army:i = 1
					name_for_respawn_base:t = ""
					timeMultiplier:r = 1
					disableZone:b = false
					target:t = "@zone_t1_name"
					iconIndex:i = 2
					canCaptureOnGround:b = false
					playAirfieldSound:b = false
					canCaptureInAir:b = false
					canCaptureByGM:b = true
					useHUDMarkers:b = true
					markUnitPreset:t = "ship_buoys"
					zoneDefenders {

					}
				}
				missionShowMapIcon {
					show:b = false
					iconName:t = "ui/gameuiskin#objective_captureZone_captured.svg"
					areaName:t = "@zone_t1_name"
					colorCode:t = "Team A"
				}
				triggerEnable {
					target:t = "nbttl_zone_t1_cant_be_captured"
				}
			}
			else_actions {

			}
		}
		nbttl_zone_t2_can_be_captured {
			is_enabled:b = true
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 0.1
				}
			}
			conditions {
				varCompareInt {
					var_value:t = "zone_01_holder"
					value:i = 1
					comparasion_func:t = "equal"
				}
				varCompareInt {
					var_value:t = "zone_02_holder"
					value:i = 1
					comparasion_func:t = "equal"
				}
			}
			actions {
				missionMarkAsCaptureZone {
					army:i = 2
					name_for_respawn_base:t = ""
					timeMultiplier:r = 1
					disableZone:b = false
					target:t = "@zone_t2_name"
					iconIndex:i = 2
					canCaptureOnGround:b = false
					playAirfieldSound:b = false
					canCaptureInAir:b = false
					canCaptureByGM:b = true
					useHUDMarkers:b = true
					markUnitPreset:t = "ship_buoys"
					zoneDefenders {

					}
				}
				missionShowMapIcon {
					show:b = false
					iconName:t = "ui/gameuiskin#objective_captureZone_captured.svg"
					areaName:t = "@zone_t2_name"
					colorCode:t = "Team B"
				}
				triggerEnable {
					target:t = "nbttl_zone_t2_cant_be_captured"
				}
			}
			else_actions {

			}
		}
		nbttl_zone_t1_cant_be_captured {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ANY"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {
				varCompareInt {
					var_value:t = "zone_01_holder"
					value:i = 2
					comparasion_func:t = "notEqual"
				}
				varCompareInt {
					var_value:t = "zone_02_holder"
					value:i = 2
					comparasion_func:t = "notEqual"
				}
			}
			actions {
				missionMarkAsCaptureZone {
					army:i = 0
					name_for_respawn_base:t = ""
					timeMultiplier:r = 1
					disableZone:b = true
					target:t = "@zone_t1_name"
					canCaptureOnGround:b = false
					playAirfieldSound:b = false
					canCaptureInAir:b = false
					canCaptureByGM:b = true
					useHUDMarkers:b = true
					markUnitPreset:t = "ship_buoys"
					zoneDefenders {

					}
				}
				missionShowMapIcon {
					show:b = true
					iconName:t = "ui/gameuiskin#objective_captureZone_captured.svg"
					areaName:t = "@zone_t1_name"
					colorCode:t = "Team A"
				}
				triggerEnable {
					target:t = "nbttl_zone_t1_can_be_captured"
				}
			}
			else_actions {

			}
		}
		nbttl_zone_t2_cant_be_captured {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ANY"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {
				varCompareInt {
					var_value:t = "zone_01_holder"
					value:i = 1
					comparasion_func:t = "notEqual"
				}
				varCompareInt {
					var_value:t = "zone_02_holder"
					value:i = 1
					comparasion_func:t = "notEqual"
				}
			}
			actions {
				missionMarkAsCaptureZone {
					army:i = 0
					name_for_respawn_base:t = ""
					timeMultiplier:r = 1
					disableZone:b = true
					target:t = "@zone_t2_name"
					canCaptureOnGround:b = false
					playAirfieldSound:b = false
					canCaptureInAir:b = false
					canCaptureByGM:b = true
					useHUDMarkers:b = true
					markUnitPreset:t = "ship_buoys"
					zoneDefenders {

					}
				}
				missionShowMapIcon {
					show:b = true
					iconName:t = "ui/gameuiskin#objective_captureZone_captured.svg"
					areaName:t = "@zone_t2_name"
					colorCode:t = "Team B"
				}
				triggerEnable {
					target:t = "nbttl_zone_t2_can_be_captured"
				}
			}
			else_actions {

			}
		}
		nbttl_zone_t1_capture_remaining_point {
			is_enabled:b = true
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {
				varCompareInt {
					var_value:t = "zone_01_holder"
					value:i = 2
					comparasion_func:t = "equal"
				}
				varCompareInt {
					var_value:t = "zone_02_holder"
					value:i = 2
					comparasion_func:t = "equal"
				}
			}
			actions {
				playHint {
					hintType:t = "standard"
					name:t = "hints/nbttl_capture_remaining_point_for_instant_win"
					action:t = "show"
					shouldFadeOut:b = true
					isOverFade:b = false
					time:r = 3
					priority:i = 0
					target_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object_var_value:i = 0
					team:t = "B"
				}
				playHint {
					hintType:t = "standard"
					name:t = "hints/nbttl_lose_remaining_point_for_instant_defeat"
					action:t = "show"
					shouldFadeOut:b = true
					isOverFade:b = false
					time:r = 3
					priority:i = 0
					target_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object_var_value:i = 0
					team:t = "A"
				}
				triggerEnable {
					target:t = "nbttl_zone_t1_capture_remaining_point_reset"
				}
			}
			else_actions {

			}
		}
		nbttl_zone_t2_capture_remaining_point {
			is_enabled:b = true
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {
				varCompareInt {
					var_value:t = "zone_01_holder"
					value:i = 1
					comparasion_func:t = "equal"
				}
				varCompareInt {
					var_value:t = "zone_02_holder"
					value:i = 1
					comparasion_func:t = "equal"
				}
			}
			actions {
				playHint {
					hintType:t = "standard"
					name:t = "hints/nbttl_capture_remaining_point_for_instant_win"
					action:t = "show"
					shouldFadeOut:b = true
					isOverFade:b = false
					time:r = 3
					priority:i = 0
					target_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object_var_value:i = 0
					team:t = "A"
				}
				playHint {
					hintType:t = "standard"
					name:t = "hints/nbttl_lose_remaining_point_for_instant_defeat"
					action:t = "show"
					shouldFadeOut:b = true
					isOverFade:b = false
					time:r = 3
					priority:i = 0
					target_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object_var_value:i = 0
					team:t = "B"
				}
				triggerEnable {
					target:t = "nbttl_zone_t2_capture_remaining_point_reset"
				}
			}
			else_actions {

			}
		}
		nbttl_zone_t1_capture_remaining_point_reset {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ANY"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {
				varCompareInt {
					var_value:t = "zone_01_holder"
					value:i = 2
					comparasion_func:t = "notEqual"
				}
				varCompareInt {
					var_value:t = "zone_02_holder"
					value:i = 2
					comparasion_func:t = "notEqual"
				}
			}
			actions {
				triggerEnable {
					target:t = "nbttl_zone_t1_capture_remaining_point"
				}
			}
			else_actions {

			}
		}
		nbttl_zone_t2_capture_remaining_point_reset {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ANY"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {
				varCompareInt {
					var_value:t = "zone_01_holder"
					value:i = 1
					comparasion_func:t = "notEqual"
				}
				varCompareInt {
					var_value:t = "zone_02_holder"
					value:i = 1
					comparasion_func:t = "notEqual"
				}
			}
			actions {
				triggerEnable {
					target:t = "nbttl_zone_t2_capture_remaining_point"
				}
			}
			else_actions {

			}
		}
	}
}
mission_objectives {
	isCategory:b = true
	is_enabled:b = true
	avn_NBttl_objective_capture_zone_for_progress {
		is_enabled:b = false
		comments:t = ""
		type:t = "abstractMissionObjective"
		props {
			isPrimary:b = true
			timeLimit:i = 3600
			team:t = "Both"
		}
		onSuccess {

		}
		onFailed {

		}
	}
	avn_NBttl_objective_capture_all_zones {
		is_enabled:b = false
		comments:t = ""
		type:t = "abstractMissionObjective"
		props {
			isPrimary:b = true
			timeLimit:i = 3600
			team:t = "Both"
		}
		onSuccess {

		}
		onFailed {

		}
	}
}
variables {
	zone_t1_name:t = "nbttl_capture_area_t1"
	zone_t2_name:t = "nbttl_capture_area_t2"
	zone_01_name:t = "nbttl_capture_area_01"
	zone_02_name:t = "nbttl_capture_area_02"
	t1_boat_spawn_01_name:t = ""
	t1_boat_spawn_02_name:t = ""
	t2_boat_spawn_01_name:t = ""
	t2_boat_spawn_02_name:t = ""
	t1_destroyer_spawn_01_name:t = ""
	t1_destroyer_spawn_02_name:t = ""
	t2_destroyer_spawn_01_name:t = ""
	t2_destroyer_spawn_02_name:t = ""
	t1_cruiser_spawn_01_name:t = ""
	t1_cruiser_spawn_02_name:t = ""
	t2_cruiser_spawn_01_name:t = ""
	t2_cruiser_spawn_02_name:t = ""
	battle_area_name:t = ""
	loc_name_random_str:t = ""
	loc_name_01_str:t = ""
	loc_name_02_str:t = ""
	zone_t1_holder:i = 1
	zone_t2_holder:i = 2
	zone_01_holder:i = 0
	zone_02_holder:i = 0
}
dialogs {

}
airfields {

}
effects {

}
units {

}
areas {

}
objLayers {
	layer {
		enabled:b = true
	}
	layer {
		enabled:b = true
	}
	layer {
		enabled:b = true
	}
	layer {
		enabled:b = true
	}
}
wayPoints {

}