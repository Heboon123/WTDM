selected_tag:t = ""
bin_dump_file:t = ""
mission_settings {
	player {
		army:i = 1
		wing:t = "t1_player01"
	}
	player_teamB {
		army:i = 2
	}
	mission {
		level:t = "levels/water.bin"
		type:t = "domination"
		environment:t = "Day"
		weather:t = "clear"
		scoreLimit:i = 6400
		timeLimit:i = 25
		deathPenaltyMul:r = 0
		restoreType:t = "attempts"
		optionalTakeOff:b = false
	}
	atmosphere {
		pressure:r = 760
		temperature:r = 30
	}
	spectator_points {

	}
}
imports {

}
triggers {
	isCategory:b = true
	is_enabled:b = true
	antiTankGun_init {
		is_enabled:b = true
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {
			objectExists {
				target:t = "t1_zoneDef_sq"
				type:t = "squad"
			}
			objectExists {
				target:t = "t2_zoneDef_sq"
				type:t = "squad"
			}
		}
		actions {
			unitSetProperties {
				object_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				object:t = "t1_zoneDef_sq"
				object:t = "t2_zoneDef_sq"
				accuracy:r = 0.5
				checkVisibilityTarget:b = true
				visibilityTreeTransparencyThreshold:r = 0.01
			}
			unitPutToSleep {
				target:t = "t1_zoneDef_sq"
				target:t = "t2_zoneDef_sq"
				target:t = "t1_trench_sq"
				target:t = "t2_trench_sq"
			}
			varSetInt {
				value:i = 0
				var:t = "teamA_antiTankGun_count"
				fromDescriptor:t = "teamA_antiTankGun_count"
			}
			varSetInt {
				value:i = 0
				var:t = "teamB_antiTankGun_count"
				fromDescriptor:t = "teamB_antiTankGun_count"
			}
			varSetBool {
				value:b = false
				var:t = "isAADef"
				fromDescriptor:t = "isAADef"
			}
			varSetBool {
				value:b = false
				var:t = "antiTankGunMissionTarget"
				fromDescriptor:t = "antiTankGunMissionTarget"
			}
			triggerEnable {
				target:t = "antiTankGun_AADef"
				target:t = "teamA_antiTankGun_needToSpawn"
				target:t = "teamB_antiTankGun_needToSpawn"
			}
		}
		else_actions {

		}
	}
	antiTankGun_AADef {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {
			varCompareBool {
				var_value:t = "isAADef"
				value:b = true
				comparasion_func:t = "equal"
			}
		}
		actions {
			unitSetProperties {
				object_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				object:t = "t1_zoneDef_sq"
				object:t = "t2_zoneDef_sq"
				accuracy:r = 0.7
				checkVisibilityTarget:b = true
			}
		}
		else_actions {

		}
	}
	teamA_antiTankGun_needToSpawn {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {
			objectExists {
				target:t = "defenseMissionTeam"
				type:t = "var"
				invertResult:b = true
			}
			varCompareString {
				var_value:t = "defenseMissionTeam"
				value:t = "teamA"
				comparasion_func:t = "equal"
			}
		}
		actions {
			triggerEnable {
				target:t = "teamA_antiTankGun_setLimit"
			}
		}
		else_actions {

		}
	}
	teamB_antiTankGun_needToSpawn {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {
			objectExists {
				target:t = "defenseMissionTeam"
				type:t = "var"
				invertResult:b = true
			}
			varCompareString {
				var_value:t = "defenseMissionTeam"
				value:t = "teamB"
				comparasion_func:t = "equal"
			}
		}
		actions {
			triggerEnable {
				target:t = "teamB_antiTankGun_setLimit"
			}
		}
		else_actions {

		}
	}
	teamA_antiTankGun_setLimit {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {
			varCompareInt {
				var_value:t = "teamA_antiTankGun_count"
				value:i = 20
				comparasion_func:t = "more"
			}
		}
		actions {
			varSetInt {
				value:i = 20
				var:t = "teamA_antiTankGun_count"
			}
			triggerEnable {
				target:t = "teamA_antiTankGun_spawn"
			}
		}
		else_actions {
			triggerEnable {
				target:t = "teamA_antiTankGun_spawn"
			}
		}
	}
	teamB_antiTankGun_setLimit {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {
			varCompareInt {
				var_value:t = "teamB_antiTankGun_count"
				value:i = 20
				comparasion_func:t = "more"
			}
		}
		actions {
			varSetInt {
				value:i = 20
				var:t = "teamB_antiTankGun_count"
			}
			triggerEnable {
				target:t = "teamB_antiTankGun_spawn"
			}
		}
		else_actions {
			triggerEnable {
				target:t = "teamB_antiTankGun_spawn"
			}
		}
	}
	teamA_antiTankGun_spawn {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {
			varCompareInt {
				var_value:t = "teamA_antiTankGun_count"
				value:i = 0
				comparasion_func:t = "more"
			}
		}
		actions {
			unitWakeUp {
				target:t = "t1_zoneDef_sq"
				varNameNumToWakeUp:t = "teamA_antiTankGun_count"
				order:t = "random"
			}
			unitWakeUp {
				target:t = "t1_trench_sq"
			}
			triggerEnable {
				target:t = "antiTankGun_missionType_check"
			}
		}
		else_actions {

		}
	}
	teamB_antiTankGun_spawn {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {
			varCompareInt {
				var_value:t = "teamB_antiTankGun_count"
				value:i = 0
				comparasion_func:t = "more"
			}
		}
		actions {
			unitWakeUp {
				target:t = "t2_zoneDef_sq"
				varNameNumToWakeUp:t = "teamB_antiTankGun_count"
				order:t = "random"
			}
			unitWakeUp {
				target:t = "t2_trench_sq"
			}
			triggerEnable {
				target:t = "antiTankGun_missionType_check"
			}
		}
		else_actions {

		}
	}
	antiTankGun_missionType_check {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {
			varCompareBool {
				var_value:t = "antiTankGunMissionTarget"
				value:b = true
				comparasion_func:t = "equal"
			}
		}
		actions {
			varModify {
				operator:t = "add"
				value:r = 1
				var:t = "teamA_totalAICount"
				use_variable:b = true
				var_value:t = "teamA_antiTankGun_count"
			}
			varModify {
				operator:t = "add"
				value:r = 1
				var:t = "teamB_totalAICount"
				use_variable:b = true
				var_value:t = "teamB_antiTankGun_count"
			}
			unitSetIndication {
				set:b = true
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				target:t = "t1_zoneDef_sq"
				target:t = "t2_zoneDef_sq"
			}
			unitMark {
				target_marking:i = 2
				target:t = "t1_zoneDef_sq"
				target:t = "t2_zoneDef_sq"
			}
			triggerEnable {
				target:t = "antiTankGun_counter"
			}
		}
		else_actions {

		}
	}
	antiTankGun_counter {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {

		}
		actions {
			missionSetTargetsIndicator {
				target_type:t = "isActive"
				target_marking:i = 0
				delta:i = 0
				icon:t = "cannon"
				"icon army":i = 1
				set:b = true
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				target:t = "t1_zoneDef_sq"
			}
			missionSetTargetsIndicator {
				target_type:t = "isActive"
				target_marking:i = 0
				delta:i = 0
				icon:t = "cannon"
				"icon army":i = 2
				set:b = true
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				target:t = "t2_zoneDef_sq"
			}
		}
		else_actions {

		}
	}
	artillery_init {
		is_enabled:b = true
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {
			objectExists {
				target:t = "t1_artillery_sq"
				type:t = "squad"
			}
			objectExists {
				target:t = "t2_artillery_sq"
				type:t = "squad"
			}
		}
		actions {
			unitSetProperties {
				object_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				object:t = "t1_artillery_sq"
				object:t = "t2_artillery_sq"
			}
			unitPutToSleep {
				target:t = "t1_artillery_sq"
				target:t = "t2_artillery_sq"
			}
			varSetInt {
				value:i = 0
				var:t = "teamA_artillery_count"
				fromDescriptor:t = "teamA_artillery_count"
			}
			varSetInt {
				value:i = 0
				var:t = "teamB_artillery_count"
				fromDescriptor:t = "teamB_artillery_count"
			}
			varSetBool {
				value:b = false
				var:t = "artilleryMissionTarget"
				fromDescriptor:t = "artilleryMissionTarget"
			}
			triggerEnable {
				target:t = "teamA_artillery_spawn"
				target:t = "teamB_artillery_spawn"
			}
		}
		else_actions {

		}
	}
	teamA_artillery_spawn {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {
			varCompareInt {
				var_value:t = "teamA_artillery_count"
				value:i = 0
				comparasion_func:t = "more"
			}
		}
		actions {
			unitWakeUp {
				target:t = "t1_artillery_sq"
				varNameNumToWakeUp:t = "teamA_artillery_count"
				order:t = "random"
			}
			triggerEnable {
				target:t = "artillery_missionType_check"
			}
		}
		else_actions {

		}
	}
	teamB_artillery_spawn {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {
			varCompareInt {
				var_value:t = "teamB_artillery_count"
				value:i = 0
				comparasion_func:t = "more"
			}
		}
		actions {
			unitWakeUp {
				target:t = "t2_artillery_sq"
				varNameNumToWakeUp:t = "teamB_artillery_count"
				order:t = "random"
			}
			triggerEnable {
				target:t = "artillery_missionType_check"
			}
		}
		else_actions {

		}
	}
	artillery_missionType_check {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {
			varCompareBool {
				var_value:t = "artilleryMissionTarget"
				value:b = true
				comparasion_func:t = "equal"
			}
		}
		actions {
			varModify {
				operator:t = "add"
				value:r = 1
				var:t = "teamA_totalAICount"
				use_variable:b = true
				var_value:t = "teamA_artillery_count"
			}
			varModify {
				operator:t = "add"
				value:r = 1
				var:t = "teamB_totalAICount"
				use_variable:b = true
				var_value:t = "teamB_artillery_count"
			}
			unitSetIndication {
				set:b = true
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				target:t = "t1_artillery_sq"
				target:t = "t2_artillery_sq"
			}
			unitMark {
				target_marking:i = 2
				target:t = "t1_artillery_sq"
				target:t = "t2_artillery_sq"
			}
			triggerEnable {
				target:t = "artillery_counter"
			}
		}
		else_actions {

		}
	}
	artillery_counter {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {

		}
		actions {
			missionSetTargetsIndicator {
				target_type:t = "isActive"
				target_marking:i = 0
				delta:i = 0
				icon:t = "aa"
				"icon army":i = 1
				set:b = true
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				target:t = "t1_artillery_sq"
			}
			missionSetTargetsIndicator {
				target_type:t = "isActive"
				target_marking:i = 0
				delta:i = 0
				icon:t = "aa"
				"icon army":i = 2
				set:b = true
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				target:t = "t2_artillery_sq"
			}
		}
		else_actions {

		}
	}
	tank_init {
		is_enabled:b = true
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {
			objectExists {
				target:t = "t1_ai_tank_sq"
				type:t = "squad"
			}
			objectExists {
				target:t = "t2_ai_tank_sq"
				type:t = "squad"
			}
		}
		actions {
			unitSetProperties {
				object_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				object:t = "t1_ai_tank_sq"
				object:t = "t2_ai_tank_sq"
				accuracy:r = 0.3
				checkVisibilityTarget:b = true
			}
			unitPutToSleep {
				target:t = "t1_ai_tank_sq"
				target:t = "t2_ai_tank_sq"
			}
			varSetInt {
				value:i = 0
				var:t = "teamA_tanks_count"
				fromDescriptor:t = "aiTargetCount_teamA"
			}
			varSetInt {
				value:i = 0
				var:t = "teamB_tanks_count"
				fromDescriptor:t = "aiTargetCount_teamB"
			}
			varSetBool {
				value:b = false
				var:t = "tankMissionTarget"
				fromDescriptor:t = "tankMissionTarget"
			}
			triggerEnable {
				target:t = "teamA_tanks_spawn"
				target:t = "teamB_tanks_spawn"
			}
		}
		else_actions {

		}
	}
	teamA_tanks_spawn {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {
			varCompareInt {
				var_value:t = "teamA_tanks_count"
				value:i = 0
				comparasion_func:t = "more"
			}
		}
		actions {
			unitWakeUp {
				target:t = "t1_ai_tank_sq"
				varNameNumToWakeUp:t = "teamA_tanks_count"
				order:t = "random"
			}
			triggerEnable {
				target:t = "tank_missionType_check"
			}
		}
		else_actions {

		}
	}
	teamB_tanks_spawn {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {
			varCompareInt {
				var_value:t = "teamB_tanks_count"
				value:i = 0
				comparasion_func:t = "more"
			}
		}
		actions {
			unitWakeUp {
				target:t = "t2_ai_tank_sq"
				varNameNumToWakeUp:t = "teamB_tanks_count"
				order:t = "random"
			}
			triggerEnable {
				target:t = "tank_missionType_check"
			}
		}
		else_actions {

		}
	}
	tank_missionType_check {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {
			varCompareBool {
				var_value:t = "tankMissionTarget"
				value:b = true
				comparasion_func:t = "equal"
			}
		}
		actions {
			varModify {
				operator:t = "add"
				value:r = 1
				var:t = "teamA_totalAICount"
				use_variable:b = true
				var_value:t = "teamA_tanks_count"
			}
			varModify {
				operator:t = "add"
				value:r = 1
				var:t = "teamB_totalAICount"
				use_variable:b = true
				var_value:t = "teamB_tanks_count"
			}
			unitSetIndication {
				set:b = true
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				target:t = "t1_ai_tank_sq"
				target:t = "t2_ai_tank_sq"
			}
			unitMark {
				target_marking:i = 2
				target:t = "t1_ai_tank_sq"
				target:t = "t2_ai_tank_sq"
			}
			triggerEnable {
				target:t = "tanks_counter"
			}
		}
		else_actions {

		}
	}
	tanks_counter {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "teamA_tanks_count"
				value:i = 0
				comparasion_func:t = "more"
			}
			varCompareInt {
				var_value:t = "teamB_tanks_count"
				value:i = 0
				comparasion_func:t = "more"
			}
		}
		actions {
			missionSetTargetsIndicator {
				target_type:t = "isActive"
				target_marking:i = 0
				delta:i = 0
				icon:t = "tank"
				"icon army":i = 1
				set:b = true
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				target:t = "t1_ai_tank_sq"
			}
			missionSetTargetsIndicator {
				target_type:t = "isActive"
				target_marking:i = 0
				delta:i = 0
				icon:t = "tank"
				"icon army":i = 2
				set:b = true
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				target:t = "t2_ai_tank_sq"
			}
		}
		else_actions {

		}
	}
	common_init {
		is_enabled:b = true
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			objectExists {
				target:t = "t1_allActive_ai_zoneDef_sq"
				type:t = "squad"
			}
			objectExists {
				target:t = "t1_allActive_ai_zoneDef_sq"
				type:t = "squad"
			}
		}
		actions {
			varSetInt {
				value:i = 0
				var:t = "kill_penalty"
				fromDescriptor:t = "aiKillPenaltyPercent"
			}
			varSetInt {
				value:i = 0
				var:t = "tickets_count"
				source_var:t = "mpTi1"
			}
			varModify {
				operator:t = "mul"
				value:r = 1
				var:t = "kill_penalty"
				use_variable:b = true
				var_value:t = "tickets_count"
			}
			varModify {
				operator:t = "divAB"
				value:r = 100
				var:t = "kill_penalty"
			}
			varSetInt {
				value:i = 0
				var:t = "teamA_ai_dies_penalty"
				input_var:t = "kill_penalty"
			}
			varSetInt {
				value:i = 0
				var:t = "teamB_ai_dies_penalty"
				input_var:t = "kill_penalty"
			}
			triggerEnable {
				target:t = "t1_check_kill_penalty"
				target:t = "t2_check_kill_penalty"
			}
		}
		else_actions {

		}
	}
	t1_check_kill_penalty {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "teamA_ai_dies_penalty"
				value:i = 0
				comparasion_func:t = "more"
			}
			varCompareInt {
				var_value:t = "teamA_totalAICount"
				value:i = 0
				comparasion_func:t = "more"
			}
		}
		actions {
			varModify {
				operator:t = "divAB"
				value:r = 1
				var:t = "teamA_ai_dies_penalty"
				use_variable:b = true
				var_value:t = "teamA_totalAICount"
			}
			varModify {
				operator:t = "mul"
				value:r = -1
				var:t = "teamA_ai_dies_penalty"
			}
			triggerEnable {
				target:t = "teamA_ai_dies"
				target:t = "teamA_all_ai_dead"
				target:t = "teamB_attack_timeIsUp"
				target:t = "t1_add_objectives"
			}
		}
		else_actions {

		}
	}
	t2_check_kill_penalty {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "teamB_ai_dies_penalty"
				value:i = 0
				comparasion_func:t = "more"
			}
			varCompareInt {
				var_value:t = "teamB_totalAICount"
				value:i = 0
				comparasion_func:t = "more"
			}
		}
		actions {
			varModify {
				operator:t = "divAB"
				value:r = 1
				var:t = "teamB_ai_dies_penalty"
				use_variable:b = true
				var_value:t = "teamB_totalAICount"
			}
			varModify {
				operator:t = "mul"
				value:r = -1
				var:t = "teamB_ai_dies_penalty"
			}
			triggerEnable {
				target:t = "teamB_ai_dies"
				target:t = "teamB_all_ai_dead"
				target:t = "teamA_attack_timeIsUp"
				target:t = "t2_add_objectives"
			}
		}
		else_actions {

		}
	}
	t1_add_objectives {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			missionNamePostfix {
				postfix:t = "_DBttlA"
			}
		}
		actions {
			wait {
				time:r = 3
			}
			moAddMissionObjective {
				target:t = "t1_ai_base_defend"
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
			}
			moAddMissionObjective {
				target:t = "t2_ai_base_defend"
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
			}
		}
		else_actions {

		}
	}
	t2_add_objectives {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			missionNamePostfix {
				postfix:t = "_DBttlB"
			}
		}
		actions {
			wait {
				time:r = 3
			}
			moAddMissionObjective {
				target:t = "t2_ai_base_defend"
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
			}
			moAddMissionObjective {
				target:t = "t1_ai_base_attack"
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
			}
		}
		else_actions {

		}
	}
	teamA_ai_dies {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			unitWhenCountMatches {
				object_type:t = "isMarked"
				object_marking:i = 2
				func:t = "less"
				value:i = 1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object:t = "t1_allActive_ai_zoneDef_sq"
				unit_type_ex:t = "isActive"
				object_var_value:i = 0
				var:t = "teamA_totalAICount"
			}
		}
		actions {
			varModify {
				operator:t = "subAB"
				value:r = 1
				var:t = "teamA_totalAICount"
			}
			gameMPChangeScore {
				value:i = 1
				valueSystem:t = "amount"
				var:t = "teamA_ai_dies_penalty"
				team:t = "A"
			}
		}
		else_actions {

		}
	}
	teamB_ai_dies {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			unitWhenCountMatches {
				object_type:t = "isMarked"
				object_marking:i = 2
				func:t = "less"
				value:i = 1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object:t = "t2_allActive_ai_zoneDef_sq"
				unit_type_ex:t = "isActive"
				object_var_value:i = 0
				var:t = "teamB_totalAICount"
			}
		}
		actions {
			varModify {
				operator:t = "subAB"
				value:r = 1
				var:t = "teamB_totalAICount"
			}
			gameMPChangeScore {
				value:i = 1
				valueSystem:t = "amount"
				var:t = "teamB_ai_dies_penalty"
				team:t = "B"
			}
		}
		else_actions {

		}
	}
	teamA_all_ai_dead {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			unitWhenCountMatches {
				object_type:t = "isMarked"
				object_marking:i = 2
				func:t = "less"
				value:i = 1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object:t = "t1_allActive_ai_zoneDef_sq"
				object_var_value:i = 0
			}
		}
		actions {
			moSetObjectiveStatus {
				target:t = "t1_ai_base_defend"
				status:i = 3
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
				team:t = "A"
			}
			moSetObjectiveStatus {
				target:t = "t2_ai_base_attack"
				status:i = 2
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
				team:t = "B"
			}
			gameMPChangeScore {
				value:i = -100
				valueSystem:t = "percentage"
				team:t = "A"
			}
		}
		else_actions {

		}
	}
	teamB_all_ai_dead {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			unitWhenCountMatches {
				object_type:t = "isMarked"
				object_marking:i = 2
				func:t = "less"
				value:i = 1
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object:t = "t2_allActive_ai_zoneDef_sq"
				object_var_value:i = 0
			}
		}
		actions {
			moSetObjectiveStatus {
				target:t = "t2_ai_base_defend"
				status:i = 3
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
				team:t = "B"
			}
			moSetObjectiveStatus {
				target:t = "t1_ai_base_attack"
				status:i = 2
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
				team:t = "A"
			}
			gameMPChangeScore {
				value:i = -100
				valueSystem:t = "percentage"
				team:t = "B"
			}
		}
		else_actions {

		}
	}
	teamA_attack_timeIsUp {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			objectExists {
				target:t = "dbttl_cur_timer"
				type:t = "var"
			}
			varCompareInt {
				var_value:t = "@dbttl_timer_str"
				value:i = 1
				comparasion_func:t = "less"
			}
		}
		actions {
			moSetObjectiveStatus {
				target:t = "t2_ai_base_defend"
				status:i = 2
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
				team:t = "B"
			}
			moSetObjectiveStatus {
				target:t = "t1_ai_base_attack"
				status:i = 3
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
				team:t = "A"
			}
		}
		else_actions {

		}
	}
	teamB_attack_timeIsUp {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			objectExists {
				target:t = "dbttl_cur_timer"
				type:t = "var"
			}
			varCompareInt {
				var_value:t = "@dbttl_timer_str"
				value:i = 1
				comparasion_func:t = "less"
			}
		}
		actions {
			moSetObjectiveStatus {
				target:t = "t1_ai_base_defend"
				status:i = 2
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
				team:t = "A"
			}
			moSetObjectiveStatus {
				target:t = "t2_ai_base_attack"
				status:i = 3
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
				team:t = "B"
			}
		}
		else_actions {

		}
	}
}
mission_objectives {
	isCategory:b = true
	is_enabled:b = true
	t1_ai_base_defend {
		is_enabled:b = false
		comments:t = ""
		type:t = "abstractMissionObjective"
		props {
			isPrimary:b = true
			timeLimit:i = 1800
			team:t = "A"
		}
		onSuccess {

		}
		onFailed {

		}
	}
	t2_ai_base_defend {
		is_enabled:b = false
		comments:t = ""
		type:t = "abstractMissionObjective"
		props {
			isPrimary:b = true
			timeLimit:i = 1800
			team:t = "B"
		}
		onSuccess {

		}
		onFailed {

		}
	}
	t1_ai_base_attack {
		is_enabled:b = false
		comments:t = ""
		type:t = "abstractMissionObjective"
		props {
			isPrimary:b = true
			timeLimit:i = 1800
			team:t = "A"
		}
		onSuccess {

		}
		onFailed {

		}
	}
	t2_ai_base_attack {
		is_enabled:b = false
		comments:t = ""
		type:t = "abstractMissionObjective"
		props {
			isPrimary:b = true
			timeLimit:i = 1800
			team:t = "B"
		}
		onSuccess {

		}
		onFailed {

		}
	}
}
variables {
	teamA_antiTankGun_count:i = 0
	teamB_antiTankGun_count:i = 0
	teamA_artillery_count:i = 0
	teamB_artillery_count:i = 0
	teamA_tanks_count:i = 0
	teamB_tanks_count:i = 0
	kill_penalty:i = 0
	tickets_count:i = 0
	teamA_totalAICount:i = 0
	teamB_totalAICount:i = 0
	teamA_ai_dies_penalty:i = 0
	teamB_ai_dies_penalty:i = 0
	dbttl_timer_str:t = "dbttl_cur_timer"
	isAADef:b = false
	antiTankGunMissionTarget:b = false
	artilleryMissionTarget:b = false
	tankMissionTarget:b = false
}
dialogs {

}
airfields {

}
effects {

}
units {

}
areas {

}
objLayers {
	layer {
		enabled:b = true
	}
	layer {
		enabled:b = true
	}
	layer {
		enabled:b = true
	}
	layer {
		enabled:b = true
	}
}
wayPoints {

}