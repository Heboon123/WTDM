selected_tag:t = ""
bin_dump_file:t = ""
mission_settings {
	player {
		army:i = 1
	}
	player_teamB {
		army:i = 2
	}
	mission {
		level:t = "levels/water.bin"
		type:t = "singleMission"
		environment:t = "Day"
		weather:t = "hazy"
		restoreType:t = "attempts"
		optionalTakeOff:b = false
	}
	spectator_points {

	}
}
imports {

}
triggers {
	isCategory:b = true
	is_enabled:b = true
	air_spawn_set_variables {
		is_enabled:b = true
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {

		}
		actions {
			varSetBool {
				value:b = false
				var:t = "force_plane_airfield_spawn"
				fromDescriptor:t = "force_plane_airfield_spawn"
			}
			varSetBool {
				value:b = false
				var:t = "disableAirfields"
				fromDescriptor:t = "disableAirfields"
			}
			varSetPoint3 {
				value:p3 = 15000, 1500, 0
				var:t = "defense_air_spawn_attack_pos"
				fromDescriptor:t = "defense_air_spawn_attack_pos"
			}
			varSetPoint3 {
				value:p3 = 6500, 1500, 0
				var:t = "defense_air_spawn_defense_pos"
				fromDescriptor:t = "defense_air_spawn_defense_pos"
			}
			missionGetBalanceLevel {
				input_var:t = "session_rank"
			}
			triggerEnable {
				target:t = "air_spawn_init"
			}
		}
		else_actions {

		}
	}
	air_spawn_set_props {
		is_enabled:b = true
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {

		}
		actions {
			unitSetProperties {
				object:t = "defense_air_spawn_structure"
				isImmortal:b = true
			}
		}
		else_actions {

		}
	}
	air_spawn_init {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {
			objectExists {
				target:t = "@defence_team_variable"
				type:t = "var"
			}
		}
		actions {
			triggerEnable {
				target:t = "set_battlearea_name_cnv"
			}
		}
		else_actions {
			triggerEnable {
				target:t = "air_spawn_force_check"
			}
		}
	}
	air_spawn_force_check {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {
			varCompareBool {
				var_value:t = "force_plane_airfield_spawn"
				value:b = false
				comparasion_func:t = "equal"
			}
		}
		actions {
			comment {
				value:t = "no forced spawn. let's spawn in the usual way"
			}
			triggerEnable {
				target:t = "air_ab_spawn_start"
				target:t = "air_rb_low_spawn_start"
				target:t = "air_rb_high_spawn_start"
				target:t = "air_rb_top_spawn_start"
				target:t = "air_sb_spawn_start"
			}
		}
		else_actions {
			comment {
				value:t = "forced spawn on the airfield of everything except bombers"
			}
			triggerEnable {
				target:t = "rb_only_bombers_air_spawn"
			}
		}
	}
	air_ab_spawn_start {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {
			gameWhenDifficulty {
				difficulty:t = "arcade"
				is:t = "equal"
			}
		}
		actions {
			comment {
				value:t = "arcade mode"
			}
			varSetString {
				value:t = "t1_air_spawn_arcade"
				var:t = "t1_air_spawn_str"
			}
			varSetString {
				value:t = "t2_air_spawn_arcade"
				var:t = "t2_air_spawn_str"
			}
			triggerEnable {
				target:t = "ab_air_spawn"
			}
		}
		else_actions {
			comment {
				value:t = "disabling trigger"
			}
			triggerDisable {
				target:t = "air_ab_spawn_start"
			}
		}
	}
	air_rb_low_spawn_start {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {
			gameWhenDifficulty {
				difficulty:t = "realistic"
				is:t = "equal"
			}
			varCompareInt {
				var_value:t = "session_rank"
				value:i = 20
				comparasion_func:t = "less"
			}
		}
		actions {
			comment {
				value:t = "realistic mode and <20 session rank"
			}
			varSetString {
				value:t = "t1_air_spawn_arcade"
				var:t = "t1_air_spawn_str"
			}
			varSetString {
				value:t = "t2_air_spawn_arcade"
				var:t = "t2_air_spawn_str"
			}
			varSetString {
				value:t = "t1_bombers_spawn_arcade"
				var:t = "t1_bombers_spawn_str"
			}
			varSetString {
				value:t = "t2_bombers_spawn_arcade"
				var:t = "t2_bombers_spawn_str"
			}
			triggerEnable {
				target:t = "rb_low_air_spawn"
			}
		}
		else_actions {
			comment {
				value:t = "disabling trigger"
			}
			triggerDisable {
				target:t = "air_rb_low_spawn_start"
			}
		}
	}
	air_rb_high_spawn_start {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {
			gameWhenDifficulty {
				difficulty:t = "realistic"
				is:t = "equal"
			}
			varCompareInt {
				var_value:t = "session_rank"
				value:i = 20
				comparasion_func:t = "notLess"
			}
		}
		actions {
			comment {
				value:t = "realistic mode and >=20 session rank"
			}
			varSetString {
				value:t = "t1_air_spawn_hardcore"
				var:t = "t1_air_spawn_str"
			}
			varSetString {
				value:t = "t2_air_spawn_hardcore"
				var:t = "t2_air_spawn_str"
			}
			triggerEnable {
				target:t = "rb_high_air_spawn"
			}
		}
		else_actions {
			comment {
				value:t = "disabling trigger"
			}
			triggerDisable {
				target:t = "air_rb_high_spawn_start"
			}
		}
	}
	air_rb_top_spawn_start {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {
			gameWhenDifficulty {
				difficulty:t = "realistic"
				is:t = "equal"
			}
			varCompareInt {
				var_value:t = "session_rank"
				value:i = 32
				comparasion_func:t = "notLess"
			}
		}
		actions {
			comment {
				value:t = "realistic mode and >=32 session rank"
			}
			varSetString {
				value:t = "t1_air_spawn_top"
				var:t = "t1_air_spawn_str"
			}
			varSetString {
				value:t = "t2_air_spawn_top"
				var:t = "t2_air_spawn_str"
			}
			triggerEnable {
				target:t = "rb_top_air_spawn"
			}
		}
		else_actions {
			comment {
				value:t = "disabling trigger"
			}
			triggerDisable {
				target:t = "air_rb_top_spawn_start"
			}
		}
	}
	air_sb_spawn_start {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {
			gameWhenDifficulty {
				difficulty:t = "simulator"
				is:t = "equal"
			}
		}
		actions {
			comment {
				value:t = "arcade mode"
			}
			varSetString {
				value:t = "t1_air_spawn_hardcore"
				var:t = "t1_bombers_spawn_str"
			}
			varSetString {
				value:t = "t2_air_spawn_hardcore"
				var:t = "t2_bombers_spawn_str"
			}
			triggerEnable {
				target:t = "sb_air_spawn"
			}
		}
		else_actions {
			comment {
				value:t = "disabling trigger"
			}
			triggerDisable {
				target:t = "air_sb_spawn_start"
			}
		}
	}
	ab_air_spawn {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {
			objectExists {
				target:t = "@t1_air_spawn_str"
				type:t = "area"
			}
			objectExists {
				target:t = "@t2_air_spawn_str"
				type:t = "area"
			}
		}
		actions {
			comment {
				value:t = "non-simulator mode - spawn in the air"
			}
			missionMarkAsRespawnPoint {
				loc_name:t = "missions/air_spawn"
				spawnEffect:b = false
				radius:r = -1
				target:t = "@t1_air_spawn_str"
				team:t = "A"
				isStrictSpawn:b = false
				resetStrictSpawnIndex:b = false
				isAirfield:b = false
				isUnit:b = false
				forceCreate:b = false
				useExisting:b = false
				ignoreTeamsOnReuse:b = false
				isIndividual:b = false
				onlyOnePlayerPerSpawnPoint:b = false
				removeAreas:b = false
				replaceAreas:b = false
				canSpawnOnNeutral:b = false
				showOnMap:b = true
				tags {
					type_strike_ucav:b = false
					helicopter:b = false
					type_attack_helicopter:b = false
					type_utility_helicopter:b = false
					tank:b = false
					artillery:b = false
					aaa:b = false
					ship:b = false
				}
			}
			missionMarkAsRespawnPoint {
				loc_name:t = "missions/air_spawn"
				spawnEffect:b = false
				radius:r = -1
				target:t = "@t2_air_spawn_str"
				team:t = "B"
				isStrictSpawn:b = false
				resetStrictSpawnIndex:b = false
				isAirfield:b = false
				isUnit:b = false
				forceCreate:b = false
				useExisting:b = false
				ignoreTeamsOnReuse:b = false
				isIndividual:b = false
				onlyOnePlayerPerSpawnPoint:b = false
				removeAreas:b = false
				replaceAreas:b = false
				canSpawnOnNeutral:b = false
				showOnMap:b = true
				tags {
					type_strike_ucav:b = false
					helicopter:b = false
					type_attack_helicopter:b = false
					type_utility_helicopter:b = false
					tank:b = false
					artillery:b = false
					aaa:b = false
					ship:b = false
				}
			}
			varSetString {
				value:t = "t1_airfield"
				var:t = "t1_airfield_str"
			}
			varSetString {
				value:t = "t2_airfield"
				var:t = "t2_airfield_str"
			}
			triggerEnable {
				target:t = "airfields_init"
			}
		}
		else_actions {

		}
	}
	rb_low_air_spawn {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {
			objectExists {
				target:t = "@t1_air_spawn_str"
				type:t = "area"
			}
			objectExists {
				target:t = "@t2_air_spawn_str"
				type:t = "area"
			}
			objectExists {
				target:t = "@t1_bombers_spawn_str"
				type:t = "area"
			}
			objectExists {
				target:t = "@t2_bombers_spawn_str"
				type:t = "area"
			}
		}
		actions {
			missionMarkAsRespawnPoint {
				loc_name:t = "missions/bombers_spawn"
				spawnEffect:b = false
				radius:r = -1
				target:t = "@t1_bombers_spawn_str"
				team:t = "A"
				isStrictSpawn:b = false
				resetStrictSpawnIndex:b = false
				isAirfield:b = false
				isUnit:b = false
				forceCreate:b = false
				useExisting:b = false
				ignoreTeamsOnReuse:b = false
				isIndividual:b = false
				onlyOnePlayerPerSpawnPoint:b = false
				removeAreas:b = false
				replaceAreas:b = false
				canSpawnOnNeutral:b = false
				showOnMap:b = true
				tags {
					type_longrange_bomber:b = true
					type_strike_ucav:b = false
					airfield_take_off:b = false
					helicopter:b = false
					type_attack_helicopter:b = false
					type_utility_helicopter:b = false
					tank:b = false
					artillery:b = false
					aaa:b = false
					ship:b = false
				}
			}
			missionMarkAsRespawnPoint {
				loc_name:t = "missions/bombers_spawn"
				spawnEffect:b = false
				radius:r = -1
				target:t = "@t2_bombers_spawn_str"
				team:t = "B"
				isStrictSpawn:b = false
				resetStrictSpawnIndex:b = false
				isAirfield:b = false
				isUnit:b = false
				forceCreate:b = false
				useExisting:b = false
				ignoreTeamsOnReuse:b = false
				isIndividual:b = false
				onlyOnePlayerPerSpawnPoint:b = false
				removeAreas:b = false
				replaceAreas:b = false
				canSpawnOnNeutral:b = false
				showOnMap:b = true
				tags {
					type_longrange_bomber:b = true
					type_strike_ucav:b = false
					airfield_take_off:b = false
					helicopter:b = false
					type_attack_helicopter:b = false
					type_utility_helicopter:b = false
					tank:b = false
					artillery:b = false
					aaa:b = false
					ship:b = false
				}
			}
			missionMarkAsRespawnPoint {
				loc_name:t = "missions/air_spawn"
				spawnEffect:b = false
				radius:r = -1
				target:t = "@t1_air_spawn_str"
				team:t = "A"
				isStrictSpawn:b = false
				resetStrictSpawnIndex:b = false
				isAirfield:b = false
				isUnit:b = false
				forceCreate:b = false
				useExisting:b = false
				ignoreTeamsOnReuse:b = false
				isIndividual:b = false
				onlyOnePlayerPerSpawnPoint:b = false
				removeAreas:b = false
				replaceAreas:b = false
				canSpawnOnNeutral:b = false
				showOnMap:b = true
				tags {
					type_longrange_bomber:b = false
					type_strike_ucav:b = false
					airfield_take_off:b = false
					helicopter:b = false
					type_attack_helicopter:b = false
					type_utility_helicopter:b = false
					tank:b = false
					artillery:b = false
					aaa:b = false
					ship:b = false
				}
			}
			missionMarkAsRespawnPoint {
				loc_name:t = "missions/air_spawn"
				spawnEffect:b = false
				radius:r = -1
				target:t = "@t2_air_spawn_str"
				team:t = "B"
				isStrictSpawn:b = false
				resetStrictSpawnIndex:b = false
				isAirfield:b = false
				isUnit:b = false
				forceCreate:b = false
				useExisting:b = false
				ignoreTeamsOnReuse:b = false
				isIndividual:b = false
				onlyOnePlayerPerSpawnPoint:b = false
				removeAreas:b = false
				replaceAreas:b = false
				canSpawnOnNeutral:b = false
				showOnMap:b = true
				tags {
					type_longrange_bomber:b = false
					type_strike_ucav:b = false
					airfield_take_off:b = false
					helicopter:b = false
					type_attack_helicopter:b = false
					type_utility_helicopter:b = false
					tank:b = false
					artillery:b = false
					aaa:b = false
					ship:b = false
				}
			}
			varSetString {
				value:t = "t1_airfield"
				var:t = "t1_airfield_str"
			}
			varSetString {
				value:t = "t2_airfield"
				var:t = "t2_airfield_str"
			}
			triggerEnable {
				target:t = "airfields_init"
			}
		}
		else_actions {

		}
	}
	rb_high_air_spawn {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {
			objectExists {
				target:t = "@t1_air_spawn_str"
				type:t = "area"
			}
			objectExists {
				target:t = "@t2_air_spawn_str"
				type:t = "area"
			}
		}
		actions {
			missionMarkAsRespawnPoint {
				loc_name:t = "missions/air_spawn"
				spawnEffect:b = false
				radius:r = -1
				target:t = "@t1_air_spawn_str"
				team:t = "A"
				isStrictSpawn:b = false
				resetStrictSpawnIndex:b = false
				isAirfield:b = false
				isUnit:b = false
				forceCreate:b = false
				useExisting:b = false
				ignoreTeamsOnReuse:b = false
				isIndividual:b = false
				onlyOnePlayerPerSpawnPoint:b = false
				removeAreas:b = false
				replaceAreas:b = false
				canSpawnOnNeutral:b = false
				showOnMap:b = true
				tags {
					type_strike_ucav:b = false
					airfield_take_off:b = false
					helicopter:b = false
					type_attack_helicopter:b = false
					type_utility_helicopter:b = false
					tank:b = false
					artillery:b = false
					aaa:b = false
					ship:b = false
				}
			}
			missionMarkAsRespawnPoint {
				loc_name:t = "missions/air_spawn"
				spawnEffect:b = false
				radius:r = -1
				target:t = "@t2_air_spawn_str"
				team:t = "B"
				isStrictSpawn:b = false
				resetStrictSpawnIndex:b = false
				isAirfield:b = false
				isUnit:b = false
				forceCreate:b = false
				useExisting:b = false
				ignoreTeamsOnReuse:b = false
				isIndividual:b = false
				onlyOnePlayerPerSpawnPoint:b = false
				removeAreas:b = false
				replaceAreas:b = false
				canSpawnOnNeutral:b = false
				showOnMap:b = true
				tags {
					type_strike_ucav:b = false
					airfield_take_off:b = false
					helicopter:b = false
					type_attack_helicopter:b = false
					type_utility_helicopter:b = false
					tank:b = false
					artillery:b = false
					aaa:b = false
					ship:b = false
				}
			}
			varSetString {
				value:t = "t1_airfield"
				var:t = "t1_airfield_str"
			}
			varSetString {
				value:t = "t2_airfield"
				var:t = "t2_airfield_str"
			}
			triggerEnable {
				target:t = "airfields_init"
			}
		}
		else_actions {

		}
	}
	rb_top_air_spawn {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {
			objectExists {
				target:t = "@t1_air_spawn_str"
				type:t = "area"
			}
			objectExists {
				target:t = "@t2_air_spawn_str"
				type:t = "area"
			}
		}
		actions {
			missionMarkAsRespawnPoint {
				loc_name:t = "missions/air_spawn"
				spawnEffect:b = false
				radius:r = -1
				target:t = "@t1_air_spawn_str"
				team:t = "A"
				isStrictSpawn:b = false
				resetStrictSpawnIndex:b = false
				isAirfield:b = false
				isUnit:b = false
				forceCreate:b = false
				useExisting:b = false
				ignoreTeamsOnReuse:b = false
				isIndividual:b = false
				onlyOnePlayerPerSpawnPoint:b = false
				removeAreas:b = false
				replaceAreas:b = false
				canSpawnOnNeutral:b = false
				showOnMap:b = true
				tags {
					type_strike_ucav:b = false
					airfield_take_off:b = false
					helicopter:b = false
					type_attack_helicopter:b = false
					type_utility_helicopter:b = false
					tank:b = false
					artillery:b = false
					aaa:b = false
					ship:b = false
				}
			}
			missionMarkAsRespawnPoint {
				loc_name:t = "missions/air_spawn"
				spawnEffect:b = false
				radius:r = -1
				target:t = "@t2_air_spawn_str"
				team:t = "B"
				isStrictSpawn:b = false
				resetStrictSpawnIndex:b = false
				isAirfield:b = false
				isUnit:b = false
				forceCreate:b = false
				useExisting:b = false
				ignoreTeamsOnReuse:b = false
				isIndividual:b = false
				onlyOnePlayerPerSpawnPoint:b = false
				removeAreas:b = false
				replaceAreas:b = false
				canSpawnOnNeutral:b = false
				showOnMap:b = true
				tags {
					type_strike_ucav:b = false
					airfield_take_off:b = false
					helicopter:b = false
					type_attack_helicopter:b = false
					type_utility_helicopter:b = false
					tank:b = false
					artillery:b = false
					aaa:b = false
					ship:b = false
				}
			}
			varSetString {
				value:t = "t1_airfield"
				var:t = "t1_airfield_str"
			}
			varSetString {
				value:t = "t2_airfield"
				var:t = "t2_airfield_str"
			}
			triggerEnable {
				target:t = "airfields_init"
			}
		}
		else_actions {
			comment {
				value:t = "spawns not exist trying to find previous tier spawns"
			}
			varSetString {
				value:t = "t1_air_spawn_hardcore"
				var:t = "t1_air_spawn_str"
			}
			varSetString {
				value:t = "t2_air_spawn_hardcore"
				var:t = "t2_air_spawn_str"
			}
			triggerEnable {
				target:t = "rb_high_air_spawn"
			}
		}
	}
	sb_air_spawn {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {
			objectExists {
				target:t = "@t1_bombers_spawn_str"
				type:t = "area"
			}
			objectExists {
				target:t = "@t2_bombers_spawn_str"
				type:t = "area"
			}
		}
		actions {
			comment {
				value:t = "simulator mode. spawned bombers in the air, fighters on the airfield"
			}
			missionMarkAsRespawnPoint {
				loc_name:t = "missions/bombers_spawn"
				spawnEffect:b = false
				radius:r = -1
				target:t = "@t1_bombers_spawn_str"
				team:t = "A"
				isStrictSpawn:b = false
				resetStrictSpawnIndex:b = false
				isAirfield:b = false
				isUnit:b = false
				forceCreate:b = false
				useExisting:b = false
				ignoreTeamsOnReuse:b = false
				isIndividual:b = false
				onlyOnePlayerPerSpawnPoint:b = false
				removeAreas:b = false
				replaceAreas:b = false
				canSpawnOnNeutral:b = false
				showOnMap:b = true
				tags {
					type_longrange_bomber:b = true
					type_strike_ucav:b = false
					airfield_take_off:b = false
					helicopter:b = false
					type_attack_helicopter:b = false
					type_utility_helicopter:b = false
					tank:b = false
					artillery:b = false
					aaa:b = false
					ship:b = false
				}
			}
			missionMarkAsRespawnPoint {
				loc_name:t = "missions/bombers_spawn"
				spawnEffect:b = false
				radius:r = -1
				target:t = "@t2_bombers_spawn_str"
				team:t = "B"
				isStrictSpawn:b = false
				resetStrictSpawnIndex:b = false
				isAirfield:b = false
				isUnit:b = false
				forceCreate:b = false
				useExisting:b = false
				ignoreTeamsOnReuse:b = false
				isIndividual:b = false
				onlyOnePlayerPerSpawnPoint:b = false
				removeAreas:b = false
				replaceAreas:b = false
				canSpawnOnNeutral:b = false
				showOnMap:b = true
				tags {
					type_longrange_bomber:b = true
					type_strike_ucav:b = false
					airfield_take_off:b = false
					helicopter:b = false
					type_attack_helicopter:b = false
					type_utility_helicopter:b = false
					tank:b = false
					artillery:b = false
					aaa:b = false
					ship:b = false
				}
			}
			triggerEnable {
				target:t = "airfields_init"
			}
		}
		else_actions {
			triggerEnable {
				target:t = "airfields_init"
			}
		}
	}
	set_battlearea_name_cnv {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {
			missionNamePostfix {
				postfix:t = "_CnvA"
			}
			missionNamePostfix {
				postfix:t = "_CnvB"
			}
		}
		actions {
			varSetString {
				value:t = "cnv_battle_area"
				var:t = "battlearea_name"
			}
			triggerEnable {
				target:t = "defense_air_spawn_start"
			}
		}
		else_actions {
			triggerEnable {
				target:t = "set_battlearea_name_dbttl"
			}
		}
	}
	set_battlearea_name_dbttl {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {
			missionNamePostfix {
				postfix:t = "_DBttlA"
			}
			missionNamePostfix {
				postfix:t = "_DBttlB"
			}
		}
		actions {
			varSetString {
				value:t = "dbttl_battle_area"
				var:t = "battlearea_name"
			}
			triggerEnable {
				target:t = "defense_air_spawn_start"
			}
		}
		else_actions {
			triggerEnable {
				target:t = "set_battlearea_name_aadef"
			}
		}
	}
	set_battlearea_name_aadef {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {
			missionNamePostfix {
				postfix:t = "_aadefa"
			}
			missionNamePostfix {
				postfix:t = "_aadefb"
			}
		}
		actions {
			varSetString {
				value:t = "aadef_battle_area"
				var:t = "battlearea_name"
			}
			triggerEnable {
				target:t = "defense_air_spawn_start"
			}
		}
		else_actions {
			comment {
				value:t = "add a new battlearea rule if necessary"
			}
		}
	}
	defense_air_spawn_start {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {
			varCompareString {
				var_value:t = "@defence_team_variable"
				value:t = "teamA"
				comparasion_func:t = "equal"
			}
		}
		actions {
			varSetString {
				value:t = "t1_air_spawn_arcade"
				var:t = "t1_air_spawn_str"
			}
			unitMoveTo {
				object_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				target:t = "@battlearea_name"
				target_var_name:t = ""
				target_var_comp_op:t = "equal"
				target_var_value:i = 0
				target_marking:i = 0
				waypointReachedDist:r = 10
				recalculatePathDist:r = -1
				follow_target:b = false
				fastClimb:b = true
				destTimeMode:b = false
				teleportHeightType:t = "absolute"
				useUnitHeightForTele:b = true
				shouldKeepFormation:b = false
				teleportHeightValue:r = 1000
				horizontalDirectionForTeleport:b = true
				shouldKeepAirFormation:b = true
				object:t = "defense_air_spawn_structure"
				move_type:t = "teleport"
				lookat:t = "@t1_air_spawn_str"
			}
			duplicateAreaAtPos {
				area:t = "@t1_air_spawn_str"
				target:t = "defense_air_spawn_structure"
				var_out:t = "t1_air_spawn_str"
				posOffsetVar:t = "defense_air_spawn_defense_pos"
				turnOffset:r = 180
				spawnOffsetSpace:t = "object"
			}
			missionMarkAsRespawnPoint {
				loc_name:t = "missions/air_spawn"
				spawnEffect:b = false
				radius:r = -1
				target:t = "@t1_air_spawn_str"
				team:t = "A"
				spawnArrangeTo:t = "@battlearea_name"
				isStrictSpawn:b = false
				resetStrictSpawnIndex:b = false
				isAirfield:b = false
				isUnit:b = false
				forceCreate:b = false
				useExisting:b = false
				ignoreTeamsOnReuse:b = false
				isIndividual:b = false
				onlyOnePlayerPerSpawnPoint:b = false
				removeAreas:b = false
				replaceAreas:b = false
				canSpawnOnNeutral:b = false
				showOnMap:b = true
				tags {
					type_strike_ucav:b = false
					helicopter:b = false
					type_attack_helicopter:b = false
					type_utility_helicopter:b = false
					tank:b = false
					artillery:b = false
					aaa:b = false
					ship:b = false
				}
			}
			varSetString {
				value:t = "t2_air_spawn_hardcore"
				var:t = "t2_air_spawn_str"
			}
			unitMoveTo {
				object_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				target:t = "@battlearea_name"
				target_var_name:t = ""
				target_var_comp_op:t = "equal"
				target_var_value:i = 0
				target_marking:i = 0
				waypointReachedDist:r = 10
				recalculatePathDist:r = -1
				follow_target:b = false
				fastClimb:b = false
				destTimeMode:b = false
				teleportHeightType:t = "absolute"
				useUnitHeightForTele:b = true
				shouldKeepFormation:b = false
				teleportHeightValue:r = 1000
				horizontalDirectionForTeleport:b = true
				shouldKeepAirFormation:b = true
				object:t = "defense_air_spawn_structure"
				move_type:t = "teleport"
				lookat:t = "@t2_air_spawn_str"
			}
			duplicateAreaAtPos {
				area:t = "@t2_air_spawn_str"
				target:t = "defense_air_spawn_structure"
				var_out:t = "t2_air_spawn_str"
				posOffsetVar:t = "defense_air_spawn_attack_pos"
				turnOffset:r = 180
				spawnOffsetSpace:t = "object"
			}
			missionMarkAsRespawnPoint {
				loc_name:t = "missions/air_spawn"
				spawnEffect:b = false
				radius:r = -1
				target:t = "@t2_air_spawn_str"
				team:t = "B"
				spawnArrangeTo:t = "@battlearea_name"
				isStrictSpawn:b = false
				resetStrictSpawnIndex:b = false
				isAirfield:b = false
				isUnit:b = false
				forceCreate:b = false
				useExisting:b = false
				ignoreTeamsOnReuse:b = false
				isIndividual:b = false
				onlyOnePlayerPerSpawnPoint:b = false
				removeAreas:b = false
				replaceAreas:b = false
				canSpawnOnNeutral:b = false
				showOnMap:b = true
				tags {
					type_strike_ucav:b = false
					helicopter:b = false
					type_attack_helicopter:b = false
					type_utility_helicopter:b = false
					tank:b = false
					artillery:b = false
					aaa:b = false
					ship:b = false
				}
			}
			triggerEnable {
				target:t = "airfields_init"
			}
		}
		else_actions {
			varSetString {
				value:t = "t2_air_spawn_arcade"
				var:t = "t2_air_spawn_str"
			}
			unitMoveTo {
				object_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				target:t = "@battlearea_name"
				target_var_name:t = ""
				target_var_comp_op:t = "equal"
				target_var_value:i = 0
				target_marking:i = 0
				waypointReachedDist:r = 10
				recalculatePathDist:r = -1
				follow_target:b = false
				fastClimb:b = false
				destTimeMode:b = false
				teleportHeightType:t = "absolute"
				useUnitHeightForTele:b = true
				shouldKeepFormation:b = false
				teleportHeightValue:r = 1000
				horizontalDirectionForTeleport:b = true
				shouldKeepAirFormation:b = true
				object:t = "defense_air_spawn_structure"
				move_type:t = "teleport"
				shipTurnRadius:r = 100
				lookat:t = "@t2_air_spawn_str"
			}
			duplicateAreaAtPos {
				area:t = "@t2_air_spawn_str"
				target:t = "defense_air_spawn_structure"
				var_out:t = "t2_air_spawn_str"
				posOffsetVar:t = "defense_air_spawn_defense_pos"
				turnOffset:r = 180
				spawnOffsetSpace:t = "object"
			}
			missionMarkAsRespawnPoint {
				loc_name:t = "missions/air_spawn"
				spawnEffect:b = false
				radius:r = -1
				target:t = "@t2_air_spawn_str"
				team:t = "B"
				spawnArrangeTo:t = "@battlearea_name"
				isStrictSpawn:b = false
				resetStrictSpawnIndex:b = false
				isAirfield:b = false
				isUnit:b = false
				forceCreate:b = false
				useExisting:b = false
				ignoreTeamsOnReuse:b = false
				isIndividual:b = false
				onlyOnePlayerPerSpawnPoint:b = false
				removeAreas:b = false
				replaceAreas:b = false
				canSpawnOnNeutral:b = false
				showOnMap:b = true
				tags {
					type_strike_ucav:b = false
					helicopter:b = false
					type_attack_helicopter:b = false
					type_utility_helicopter:b = false
					tank:b = false
					artillery:b = false
					aaa:b = false
					ship:b = false
				}
			}
			varSetString {
				value:t = "t1_air_spawn_hardcore"
				var:t = "t1_air_spawn_str"
			}
			unitMoveTo {
				object_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				target:t = "@battlearea_name"
				target_var_name:t = ""
				target_var_comp_op:t = "equal"
				target_var_value:i = 0
				target_marking:i = 0
				waypointReachedDist:r = 10
				recalculatePathDist:r = -1
				follow_target:b = false
				fastClimb:b = false
				destTimeMode:b = false
				teleportHeightType:t = "absolute"
				useUnitHeightForTele:b = true
				shouldKeepFormation:b = false
				teleportHeightValue:r = 1000
				horizontalDirectionForTeleport:b = true
				shouldKeepAirFormation:b = true
				object:t = "defense_air_spawn_structure"
				move_type:t = "teleport"
				lookat:t = "@t1_air_spawn_str"
			}
			duplicateAreaAtPos {
				area:t = "@t1_air_spawn_str"
				target:t = "defense_air_spawn_structure"
				var_out:t = "t1_air_spawn_str"
				posOffsetVar:t = "defense_air_spawn_attack_pos"
				turnOffset:r = 180
				spawnOffsetSpace:t = "object"
			}
			missionMarkAsRespawnPoint {
				loc_name:t = "missions/air_spawn"
				spawnEffect:b = false
				radius:r = -1
				target:t = "@t1_air_spawn_str"
				team:t = "A"
				spawnArrangeTo:t = "@battlearea_name"
				isStrictSpawn:b = false
				resetStrictSpawnIndex:b = false
				isAirfield:b = false
				isUnit:b = false
				forceCreate:b = false
				useExisting:b = false
				ignoreTeamsOnReuse:b = false
				isIndividual:b = false
				onlyOnePlayerPerSpawnPoint:b = false
				removeAreas:b = false
				replaceAreas:b = false
				canSpawnOnNeutral:b = false
				showOnMap:b = true
				tags {
					type_strike_ucav:b = false
					helicopter:b = false
					type_attack_helicopter:b = false
					type_utility_helicopter:b = false
					tank:b = false
					artillery:b = false
					aaa:b = false
					ship:b = false
				}
			}
			triggerEnable {
				target:t = "airfields_init"
			}
		}
	}
	rb_only_bombers_air_spawn {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {

		}
		actions {
			comment {
				value:t = "non-simulator mode - spawn in the air"
			}
			missionMarkAsRespawnPoint {
				loc_name:t = "missions/bombers_spawn"
				spawnEffect:b = false
				radius:r = -1
				target:t = "t1_bombers_spawn_arcade"
				team:t = "A"
				isStrictSpawn:b = false
				resetStrictSpawnIndex:b = false
				isAirfield:b = false
				isUnit:b = false
				forceCreate:b = false
				useExisting:b = false
				ignoreTeamsOnReuse:b = false
				isIndividual:b = false
				onlyOnePlayerPerSpawnPoint:b = false
				removeAreas:b = false
				replaceAreas:b = false
				canSpawnOnNeutral:b = false
				showOnMap:b = true
				tags {
					type_longrange_bomber:b = true
					type_strike_ucav:b = false
					airfield_take_off:b = false
					tank:b = false
					artillery:b = false
					aaa:b = false
					ship:b = false
				}
			}
			missionMarkAsRespawnPoint {
				loc_name:t = "missions/bombers_spawn"
				spawnEffect:b = false
				radius:r = -1
				target:t = "t2_bombers_spawn_arcade"
				team:t = "B"
				isStrictSpawn:b = false
				resetStrictSpawnIndex:b = false
				isAirfield:b = false
				isUnit:b = false
				forceCreate:b = false
				useExisting:b = false
				ignoreTeamsOnReuse:b = false
				isIndividual:b = false
				onlyOnePlayerPerSpawnPoint:b = false
				removeAreas:b = false
				replaceAreas:b = false
				canSpawnOnNeutral:b = false
				showOnMap:b = true
				tags {
					type_longrange_bomber:b = true
					type_strike_ucav:b = false
					airfield_take_off:b = false
					tank:b = false
					artillery:b = false
					aaa:b = false
					ship:b = false
				}
			}
			missionMarkAsRespawnPoint {
				loc_name:t = "missions/air_spawn"
				spawnEffect:b = false
				radius:r = -1
				target:t = "t1_air_spawn_arcade"
				team:t = "A"
				isStrictSpawn:b = false
				resetStrictSpawnIndex:b = false
				isAirfield:b = false
				isUnit:b = false
				forceCreate:b = false
				useExisting:b = false
				ignoreTeamsOnReuse:b = false
				isIndividual:b = false
				onlyOnePlayerPerSpawnPoint:b = false
				removeAreas:b = false
				replaceAreas:b = false
				canSpawnOnNeutral:b = false
				showOnMap:b = true
				tags {
					type_bomber:b = true
					type_longrange_bomber:b = false
					type_strike_ucav:b = false
					airfield_take_off:b = false
					tank:b = false
					artillery:b = false
					aaa:b = false
					ship:b = false
				}
			}
			missionMarkAsRespawnPoint {
				loc_name:t = "missions/air_spawn"
				spawnEffect:b = false
				radius:r = -1
				target:t = "t2_air_spawn_arcade"
				team:t = "B"
				isStrictSpawn:b = false
				resetStrictSpawnIndex:b = false
				isAirfield:b = false
				isUnit:b = false
				forceCreate:b = false
				useExisting:b = false
				ignoreTeamsOnReuse:b = false
				isIndividual:b = false
				onlyOnePlayerPerSpawnPoint:b = false
				removeAreas:b = false
				replaceAreas:b = false
				canSpawnOnNeutral:b = false
				showOnMap:b = true
				tags {
					type_bomber:b = true
					type_longrange_bomber:b = false
					type_strike_ucav:b = false
					airfield_take_off:b = false
					tank:b = false
					artillery:b = false
					aaa:b = false
					ship:b = false
				}
			}
			varSetString {
				value:t = "t1_air_spawn_arcade"
				var:t = "t1_air_spawn_str"
			}
			varSetString {
				value:t = "t2_air_spawn_arcade"
				var:t = "t2_air_spawn_str"
			}
			triggerEnable {
				target:t = "airfields_init"
			}
		}
		else_actions {

		}
	}
	enable_airfields_part {
		isCategory:b = true
		is_enabled:b = true
		airfields_init {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				initMission {

				}
			}
			conditions {

			}
			actions {
				varSetString {
					value:t = "t1_airfield_aaa_squad"
					var:t = "t1_airfield_aa_str"
				}
				varSetString {
					value:t = "t2_airfield_aaa_squad"
					var:t = "t2_airfield_aa_str"
				}
				varSetString {
					value:t = "t1_airfield"
					var:t = "t1_airfield_str"
				}
				varSetString {
					value:t = "t2_airfield"
					var:t = "t2_airfield_str"
				}
				triggerEnable {
					target:t = "airfields_disable_check"
				}
			}
			else_actions {

			}
		}
		airfields_disable_check {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				initMission {

				}
			}
			conditions {
				varCompareBool {
					var_value:t = "disableAirfields"
					value:b = true
					comparasion_func:t = "equal"
				}
			}
			actions {
				comment {
					value:t = "airfields not allowed"
				}
				triggerEnable {
					target:t = "airfields_hide"
				}
			}
			else_actions {
				comment {
					value:t = "airfields allowed"
				}
				triggerEnable {
					target:t = "airfields_spawn"
				}
			}
		}
		airfields_hide {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				initMission {

				}
			}
			conditions {
				objectExists {
					target:t = "@t1_airfield_str"
					type:t = "objectGroup"
				}
				objectExists {
					target:t = "@t2_airfield_str"
					type:t = "objectGroup"
				}
				objectExists {
					target:t = "@t1_airfield_aa_str"
					type:t = "squad"
				}
				objectExists {
					target:t = "@t2_airfield_aa_str"
					type:t = "squad"
				}
			}
			actions {
				unitPutToSleep {
					target:t = "@t1_airfield_str"
					target:t = "@t2_airfield_str"
					target:t = "@t1_airfield_aa_str"
					target:t = "@t2_airfield_aa_str"
				}
				airfieldSetVisibility {
					target:t = "@t1_airfield_str"
					target:t = "@t2_airfield_str"
					team:t = "None"
				}
			}
			else_actions {

			}
		}
		airfields_spawn {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				initMission {

				}
			}
			conditions {

			}
			actions {
				missionMarkAsRespawnPoint {
					loc_name:t = "missions/airfield_spawn"
					spawnEffect:b = false
					radius:r = -1
					target:t = "@t1_airfield_str"
					team:t = "A"
					isStrictSpawn:b = false
					resetStrictSpawnIndex:b = false
					isAirfield:b = true
					isUnit:b = false
					forceCreate:b = false
					useExisting:b = false
					ignoreTeamsOnReuse:b = false
					isIndividual:b = false
					onlyOnePlayerPerSpawnPoint:b = false
					removeAreas:b = false
					replaceAreas:b = false
					canSpawnOnNeutral:b = false
					showOnMap:b = true
					tags {
						type_strike_ucav:b = false
						helicopter:b = false
						type_attack_helicopter:b = false
						type_utility_helicopter:b = false
						tank:b = false
						artillery:b = false
						aaa:b = false
						ship:b = false
					}
				}
				missionMarkAsRespawnPoint {
					loc_name:t = "missions/airfield_spawn"
					spawnEffect:b = false
					radius:r = -1
					target:t = "@t2_airfield_str"
					team:t = "B"
					isStrictSpawn:b = false
					resetStrictSpawnIndex:b = false
					isAirfield:b = true
					isUnit:b = false
					forceCreate:b = false
					useExisting:b = false
					ignoreTeamsOnReuse:b = false
					isIndividual:b = false
					onlyOnePlayerPerSpawnPoint:b = false
					removeAreas:b = false
					replaceAreas:b = false
					canSpawnOnNeutral:b = false
					showOnMap:b = true
					tags {
						type_strike_ucav:b = false
						helicopter:b = false
						type_attack_helicopter:b = false
						type_utility_helicopter:b = false
						tank:b = false
						artillery:b = false
						aaa:b = false
						ship:b = false
					}
				}
				comment {
					value:t = "aaa placement"
				}
				triggerEnable {
					target:t = "airfields_aaa_placement"
				}
			}
			else_actions {

			}
		}
		airfields_aaa_placement {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				periodicEvent {
					time:r = 1
				}
			}
			conditions {
				objectExists {
					target:t = "@t1_airfield_aa_str"
					type:t = "squad"
				}
				objectExists {
					target:t = "@t2_airfield_aa_str"
					type:t = "squad"
				}
			}
			actions {
				unitSpawnOnObjectGroup {
					type:t = "air_def"
					object:t = "@t1_airfield_aa_str"
					target:t = "@t1_airfield_str"
				}
				unitSpawnOnObjectGroup {
					type:t = "air_def"
					object:t = "@t2_airfield_aa_str"
					target:t = "@t2_airfield_str"
				}
			}
			else_actions {

			}
		}
	}
	heli_spawn_logic {
		isCategory:b = true
		is_enabled:b = true
		helipad_start {
			is_enabled:b = true
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ANY"
				enableAfterComplete:b = false
			}
			events {
				initMission {

				}
			}
			conditions {

			}
			actions {
				varSetBool {
					value:b = false
					var:t = "disableHelipads"
					fromDescriptor:t = "disableHelipads"
				}
				varSetString {
					value:t = "t1_helipad_farspawn"
					var:t = "t1_helipad_farspawn"
				}
				varSetString {
					value:t = "t2_helipad_farspawn"
					var:t = "t2_helipad_farspawn"
				}
				varSetString {
					value:t = "t1_helipad"
					var:t = "t1_helipad_str"
				}
				varSetString {
					value:t = "t2_helipad"
					var:t = "t2_helipad_str"
				}
				triggerEnable {
					target:t = "helipad_check_exist"
					target:t = "helipad_defence_exist"
				}
			}
			else_actions {

			}
		}
		helipad_check_exist {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				initMission {

				}
			}
			conditions {
				objectExists {
					target:t = "@t1_helipad_farspawn"
					type:t = "objectGroup"
				}
				objectExists {
					target:t = "@t2_helipad_farspawn"
					type:t = "objectGroup"
				}
				objectExists {
					target:t = "@t1_helipad_str"
					type:t = "objectGroup"
				}
				objectExists {
					target:t = "@t2_helipad_str"
					type:t = "objectGroup"
				}
			}
			actions {
				unitPutToSleep {
					target:t = "@t1_helipad_str"
					target:t = "@t2_helipad_str"
					target:t = "@t1_helipad_farspawn"
					target:t = "@t2_helipad_farspawn"
				}
				triggerEnable {
					target:t = "helipad_disable_check"
				}
			}
			else_actions {

			}
		}
		helipad_disable_check {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				initMission {

				}
			}
			conditions {
				varCompareBool {
					var_value:t = "disableHelipads"
					value:b = true
					comparasion_func:t = "equal"
				}
			}
			actions {
				comment {
					value:t = "helipads not allowed"
				}
			}
			else_actions {
				comment {
					value:t = "helipads allowed"
				}
				triggerEnable {
					target:t = "helipad_farspawn_init"
					target:t = "helipad_init"
				}
			}
		}
		helipad_farspawn_init {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				initMission {

				}
			}
			conditions {

			}
			actions {
				unitWakeUp {
					target:t = "@t1_helipad_farspawn"
					target:t = "@t2_helipad_farspawn"
				}
				unitSetProperties {
					object:t = "@t1_helipad_farspawn"
					object:t = "@t2_helipad_farspawn"
					object_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object_var_value:i = 0
					calmDetection:b = true
				}
				missionMarkAsRespawnPoint {
					loc_name:t = "missions/helipad_spawn1"
					spawnEffect:b = false
					radius:r = -1
					target:t = "@t1_helipad_farspawn"
					team:t = "A"
					isStrictSpawn:b = false
					resetStrictSpawnIndex:b = false
					isAirfield:b = true
					isUnit:b = false
					forceCreate:b = false
					useExisting:b = false
					ignoreTeamsOnReuse:b = false
					isIndividual:b = false
					onlyOnePlayerPerSpawnPoint:b = false
					removeAreas:b = false
					replaceAreas:b = false
					canSpawnOnNeutral:b = false
					showOnMap:b = true
					tags {
						type_strike_ucav:b = false
						helicopter:b = true
						type_attack_helicopter:b = true
						type_utility_helicopter:b = true
						tank:b = false
						artillery:b = false
						aaa:b = false
						ship:b = false
					}
				}
				missionMarkAsRespawnPoint {
					loc_name:t = "missions/helipad_spawn1"
					spawnEffect:b = false
					radius:r = -1
					target:t = "@t2_helipad_farspawn"
					team:t = "B"
					isStrictSpawn:b = false
					resetStrictSpawnIndex:b = false
					isAirfield:b = true
					isUnit:b = false
					forceCreate:b = false
					useExisting:b = false
					ignoreTeamsOnReuse:b = false
					isIndividual:b = false
					onlyOnePlayerPerSpawnPoint:b = false
					removeAreas:b = false
					replaceAreas:b = false
					canSpawnOnNeutral:b = false
					showOnMap:b = true
					tags {
						type_strike_ucav:b = false
						helicopter:b = true
						type_attack_helicopter:b = true
						type_utility_helicopter:b = true
						tank:b = false
						artillery:b = false
						aaa:b = false
						ship:b = false
					}
				}
			}
			else_actions {

			}
		}
		helipad_init {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				initMission {

				}
			}
			conditions {

			}
			actions {
				unitWakeUp {
					target:t = "@t1_helipad_str"
					target:t = "@t2_helipad_str"
				}
				unitSetProperties {
					object:t = "@t1_helipad_str"
					object:t = "@t2_helipad_str"
					object_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object_var_value:i = 0
					calmDetection:b = true
				}
				missionMarkAsRespawnPoint {
					loc_name:t = "missions/helipad_spawn2"
					spawnEffect:b = false
					radius:r = -1
					target:t = "@t1_helipad_str"
					team:t = "A"
					isStrictSpawn:b = false
					resetStrictSpawnIndex:b = false
					isAirfield:b = true
					isUnit:b = false
					forceCreate:b = false
					useExisting:b = false
					ignoreTeamsOnReuse:b = false
					isIndividual:b = false
					onlyOnePlayerPerSpawnPoint:b = false
					removeAreas:b = false
					replaceAreas:b = false
					canSpawnOnNeutral:b = false
					showOnMap:b = true
					tags {
						type_strike_ucav:b = false
						helicopter:b = true
						type_attack_helicopter:b = true
						type_utility_helicopter:b = true
						tank:b = false
						artillery:b = false
						aaa:b = false
						ship:b = false
					}
				}
				missionMarkAsRespawnPoint {
					loc_name:t = "missions/helipad_spawn2"
					spawnEffect:b = false
					radius:r = -1
					target:t = "@t2_helipad_str"
					team:t = "B"
					isStrictSpawn:b = false
					resetStrictSpawnIndex:b = false
					isAirfield:b = true
					isUnit:b = false
					forceCreate:b = false
					useExisting:b = false
					ignoreTeamsOnReuse:b = false
					isIndividual:b = false
					onlyOnePlayerPerSpawnPoint:b = false
					removeAreas:b = false
					replaceAreas:b = false
					canSpawnOnNeutral:b = false
					showOnMap:b = true
					tags {
						type_strike_ucav:b = false
						helicopter:b = true
						type_attack_helicopter:b = true
						type_utility_helicopter:b = true
						tank:b = false
						artillery:b = false
						aaa:b = false
						ship:b = false
					}
				}
			}
			else_actions {

			}
		}
		helipad_defence_exist {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				initMission {

				}
			}
			conditions {
				objectExists {
					target:t = "t1_helipad_aaa_squad"
					type:t = "squad"
				}
				objectExists {
					target:t = "t2_helipad_aaa_squad"
					type:t = "squad"
				}
			}
			actions {
				unitPutToSleep {
					target:t = "t1_helipad_aaa_squad"
					target:t = "t2_helipad_aaa_squad"
				}
				__triggerEnable {
					target:t = "helipad_defence_check_difficult"
				}
			}
			else_actions {

			}
		}
		helipad_defence_check_difficult {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				initMission {

				}
			}
			conditions {
				gameWhenDifficulty {
					difficulty:t = "arcade"
					is:t = "notEqual"
				}
				varCompareBool {
					var_value:t = "disableHelipads"
					value:b = false
					comparasion_func:t = "equal"
				}
			}
			actions {
				comment {
					value:t = "wake up only 01 and 02 aa guns (without damage)"
				}
				unitWakeUp {
					target:t = "t1_helipad_defence_01"
					target:t = "t1_helipad_defence_02"
					target:t = "t2_helipad_defence_01"
					target:t = "t2_helipad_defence_02"
				}
				unitSetProperties {
					object:t = "t1_helipad_aaa_squad"
					object_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object_var_value:i = 0
					army:i = 1
					stealthRadius:r = 3000
				}
				unitSetProperties {
					object:t = "t2_helipad_aaa_squad"
					object_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object_var_value:i = 0
					army:i = 2
					stealthRadius:r = 3000
				}
				triggerEnable {
					target:t = "t1_restore_heli_defence"
					target:t = "t2_restore_heli_defence"
				}
			}
			else_actions {

			}
		}
		t1_restore_heli_defence {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = true
			}
			events {
				periodicEvent {
					time:r = 20
				}
			}
			conditions {
				unitWhenStatus {
					object_type:t = "isKilled"
					check_objects:t = "any"
					object_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object_var_value:i = 0
					target_type:t = "isAlive"
					check_period:r = 1
					object:t = "t1_helipad_aaa_squad"
				}
			}
			actions {
				unitRestore {
					ressurectIfDead:b = true
					fullRestore:b = true
					target_marking:i = 0
					target:t = "t1_helipad_aaa_squad"
					useForTriggerFiltered:b = true
				}
			}
			else_actions {

			}
		}
		t2_restore_heli_defence {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = true
			}
			events {
				periodicEvent {
					time:r = 20
				}
			}
			conditions {
				unitWhenStatus {
					object_type:t = "isKilled"
					check_objects:t = "any"
					object_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object_var_value:i = 0
					target_type:t = "isAlive"
					check_period:r = 1
					object:t = "t2_helipad_aaa_squad"
				}
			}
			actions {
				unitRestore {
					ressurectIfDead:b = true
					fullRestore:b = true
					target_marking:i = 0
					target:t = "t2_helipad_aaa_squad"
					useForTriggerFiltered:b = true
				}
			}
			else_actions {

			}
		}
	}
	ucav_spawn_logic {
		isCategory:b = true
		is_enabled:b = true
		ucav_spawn_init {
			is_enabled:b = true
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				initMission {

				}
			}
			conditions {

			}
			actions {
				varSetInt {
					value:i = 26
					var:t = "ucav_min_mrank"
					fromDescriptor:t = "minMRankForUcav"
				}
				varSetBool {
					value:b = false
					var:t = "ucav_disable_spawn"
					fromDescriptor:t = "disableUcavSpawn"
				}
				triggerEnable {
					target:t = "ucav_spawn_check"
				}
			}
			else_actions {

			}
		}
		ucav_spawn_check {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				initMission {

				}
			}
			conditions {
				varCompareInt {
					var_value:t = "session_rank"
					value:i = 0
					comparasion_func:t = "notLess"
					var_value_other:t = "ucav_min_mrank"
				}
				varCompareBool {
					var_value:t = "ucav_disable_spawn"
					value:b = false
					comparasion_func:t = "equal"
				}
			}
			actions {
				triggerEnable {
					target:t = "ucav_spawn_near"
				}
			}
			else_actions {

			}
		}
		ucav_spawn_near {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				initMission {

				}
			}
			conditions {
				objectExists {
					target:t = "@t1_helipad_str"
					type:t = "objectGroup"
				}
				objectExists {
					target:t = "@t2_helipad_str"
					type:t = "objectGroup"
				}
			}
			actions {
				duplicateAreaAtPos {
					area:t = "spawn_ucav"
					target:t = "@t1_helipad_str"
					var_out:t = "ucav_spawn_name"
					posOffset:p3 = 6000, 3000, 0
					turnOffset:r = 180
					spawnOffsetSpace:t = "object"
				}
				missionMarkAsRespawnPoint {
					loc_name:t = "missions/ucav_spawn1"
					spawnEffect:b = false
					radius:r = -1
					target:t = "@ucav_spawn_name"
					team:t = "A"
					isStrictSpawn:b = false
					resetStrictSpawnIndex:b = false
					isAirfield:b = false
					isUnit:b = false
					forceCreate:b = false
					useExisting:b = false
					ignoreTeamsOnReuse:b = false
					isIndividual:b = false
					onlyOnePlayerPerSpawnPoint:b = false
					removeAreas:b = false
					replaceAreas:b = false
					canSpawnOnNeutral:b = false
					showOnMap:b = true
					tags {
						type_strike_ucav:b = true
						helicopter:b = false
						tank:b = false
						artillery:b = false
						aaa:b = false
						ship:b = false
					}
				}
				duplicateAreaAtPos {
					area:t = "spawn_ucav"
					target:t = "@t2_helipad_str"
					var_out:t = "ucav_spawn_name"
					posOffset:p3 = 6000, 3000, 0
					turnOffset:r = 180
					spawnOffsetSpace:t = "object"
				}
				missionMarkAsRespawnPoint {
					loc_name:t = "missions/ucav_spawn1"
					spawnEffect:b = false
					radius:r = -1
					target:t = "@ucav_spawn_name"
					team:t = "B"
					isStrictSpawn:b = false
					resetStrictSpawnIndex:b = false
					isAirfield:b = false
					isUnit:b = false
					forceCreate:b = false
					useExisting:b = false
					ignoreTeamsOnReuse:b = false
					isIndividual:b = false
					onlyOnePlayerPerSpawnPoint:b = false
					removeAreas:b = false
					replaceAreas:b = false
					canSpawnOnNeutral:b = false
					showOnMap:b = true
					tags {
						type_strike_ucav:b = true
						helicopter:b = false
						tank:b = false
						artillery:b = false
						aaa:b = false
						ship:b = false
					}
				}
			}
			else_actions {

			}
		}
		ucav_spawn_far {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				initMission {

				}
			}
			conditions {
				objectExists {
					target:t = "@t1_air_spawn_str"
					type:t = "area"
				}
				objectExists {
					target:t = "@t2_air_spawn_str"
					type:t = "area"
				}
			}
			actions {
				duplicateAreaAtPos {
					area:t = "spawn_ucav"
					target:t = "@t1_air_spawn_str"
					var_out:t = "ucav_spawn_name"
					posOffset:p3 = -7.5, 7.5, 0
					spawnOffsetSpace:t = "object"
				}
				missionMarkAsRespawnPoint {
					loc_name:t = "missions/ucav_spawn2"
					spawnEffect:b = false
					radius:r = -1
					target:t = "@ucav_spawn_name"
					team:t = "A"
					isStrictSpawn:b = false
					resetStrictSpawnIndex:b = false
					isAirfield:b = false
					isUnit:b = false
					forceCreate:b = false
					useExisting:b = false
					ignoreTeamsOnReuse:b = false
					isIndividual:b = false
					onlyOnePlayerPerSpawnPoint:b = false
					removeAreas:b = false
					replaceAreas:b = false
					canSpawnOnNeutral:b = false
					showOnMap:b = true
					tags {
						type_strike_ucav:b = true
						helicopter:b = false
						tank:b = false
						artillery:b = false
						aaa:b = false
						ship:b = false
					}
				}
				duplicateAreaAtPos {
					area:t = "spawn_ucav"
					target:t = "@t2_air_spawn_str"
					var_out:t = "ucav_spawn_name"
					posOffset:p3 = -7.5, 7.5, 0
					spawnOffsetSpace:t = "object"
				}
				missionMarkAsRespawnPoint {
					loc_name:t = "missions/ucav_spawn2"
					spawnEffect:b = false
					radius:r = -1
					target:t = "@ucav_spawn_name"
					team:t = "B"
					isStrictSpawn:b = false
					resetStrictSpawnIndex:b = false
					isAirfield:b = false
					isUnit:b = false
					forceCreate:b = false
					useExisting:b = false
					ignoreTeamsOnReuse:b = false
					isIndividual:b = false
					onlyOnePlayerPerSpawnPoint:b = false
					removeAreas:b = false
					replaceAreas:b = false
					canSpawnOnNeutral:b = false
					showOnMap:b = true
					tags {
						type_strike_ucav:b = true
						helicopter:b = false
						tank:b = false
						artillery:b = false
						aaa:b = false
						ship:b = false
					}
				}
			}
			else_actions {

			}
		}
	}
	air_detection_areas {
		isCategory:b = true
		is_enabled:b = true
		ada__init {
			is_enabled:b = true
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				initMission {

				}
			}
			conditions {
				gameWhenDifficulty {
					difficulty:t = "realistic"
					is:t = "equal"
				}
			}
			actions {
				triggerEnable {
					target:t = "ada__air_spawn__check_dist"
				}
			}
			else_actions {
				triggerDisable {
					target:t = "ada__init"
				}
			}
		}
		ada__air_spawn__check_dist {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ANY"
				enableAfterComplete:b = false
			}
			events {
				initMission {

				}
			}
			conditions {
				areaOrObjectGroupDistanceBetween {
					value:r = 0
					math:t = "2D"
					object:t = "@t1_air_spawn_str"
					target:t = "@t2_air_spawn_str"
					var:t = "near_spawn_dist_max"
				}
			}
			actions {
				varSetString {
					value:t = "air_detection_area_small"
					var:t = "air_detection_area_name"
				}
				triggerEnable {
					target:t = "ada__air_spawn__create_areas"
				}
			}
			else_actions {
				varSetString {
					value:t = "air_detection_area_big"
					var:t = "air_detection_area_name"
				}
				triggerEnable {
					target:t = "ada__air_spawn__create_areas"
				}
			}
		}
		ada__air_spawn__create_areas {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				initMission {

				}
			}
			conditions {
				objectExists {
					target:t = "@t1_air_spawn_str"
					type:t = "area"
				}
				objectExists {
					target:t = "@t2_air_spawn_str"
					type:t = "area"
				}
			}
			actions {
				duplicateAreaAtPos {
					area:t = "@air_detection_area_name"
					target:t = "@t1_air_spawn_str"
					var_out:t = "air_detection_area_dup_name"
				}
				missionBattleArea {
					air:b = true
					ground:b = false
					mapArea:b = false
					killArea:b = false
					killOutOfBattleArea:b = false
					detectionArea:b = true
					airMapArea:b = false
					area:t = "@air_detection_area_dup_name"
					newGridHorizontalCellCount:i = 0
					team:t = "B"
				}
				duplicateAreaAtPos {
					area:t = "@air_detection_area_name"
					target:t = "@t2_air_spawn_str"
					var_out:t = "air_detection_area_dup_name"
				}
				missionBattleArea {
					air:b = true
					ground:b = false
					mapArea:b = false
					killArea:b = false
					killOutOfBattleArea:b = false
					detectionArea:b = true
					airMapArea:b = false
					area:t = "@air_detection_area_dup_name"
					newGridHorizontalCellCount:i = 0
					team:t = "A"
				}
				triggerEnable {
					target:t = "ada__helipad__check_dist"
				}
			}
			else_actions {
				triggerEnable {
					target:t = "ada__helipad__check_dist"
				}
			}
		}
		ada__helipad__check_dist {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ANY"
				enableAfterComplete:b = false
			}
			events {
				initMission {

				}
			}
			conditions {
				areaOrObjectGroupDistanceBetween {
					value:r = 0
					math:t = "2D"
					object:t = "@t1_helipad_str"
					target:t = "@t2_helipad_str"
					var:t = "near_spawn_dist_max"
				}
			}
			actions {
				varSetString {
					value:t = "air_detection_area_small"
					var:t = "air_detection_area_name"
				}
				triggerEnable {
					target:t = "ada__helipad__create_areas"
				}
			}
			else_actions {
				varSetString {
					value:t = "air_detection_area_big"
					var:t = "air_detection_area_name"
				}
				triggerEnable {
					target:t = "ada__helipad__create_areas"
				}
			}
		}
		ada__helipad__create_areas {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = false
			}
			events {
				initMission {

				}
			}
			conditions {
				objectExists {
					target:t = "@t1_helipad_str"
					type:t = "objectGroup"
				}
				objectExists {
					target:t = "@t2_helipad_str"
					type:t = "objectGroup"
				}
			}
			actions {
				duplicateAreaAtPos {
					area:t = "@air_detection_area_name"
					target:t = "@t1_helipad_str"
					var_out:t = "air_detection_area_dup_name"
				}
				missionBattleArea {
					air:b = true
					ground:b = false
					mapArea:b = false
					killArea:b = false
					killOutOfBattleArea:b = false
					detectionArea:b = true
					airMapArea:b = false
					area:t = "@air_detection_area_dup_name"
					newGridHorizontalCellCount:i = 0
					team:t = "B"
				}
				duplicateAreaAtPos {
					area:t = "@air_detection_area_name"
					target:t = "@t2_helipad_str"
					var_out:t = "air_detection_area_dup_name"
				}
				missionBattleArea {
					air:b = true
					ground:b = false
					mapArea:b = false
					killArea:b = false
					killOutOfBattleArea:b = false
					detectionArea:b = true
					airMapArea:b = false
					area:t = "@air_detection_area_dup_name"
					newGridHorizontalCellCount:i = 0
					team:t = "A"
				}
				triggerEnable {
					target:t = "ada__helipad_far__check_dist"
				}
			}
			else_actions {
				triggerEnable {
					target:t = "ada__helipad_far__check_dist"
				}
			}
		}
		ada__helipad_far__check_dist {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ANY"
				enableAfterComplete:b = false
			}
			events {
				initMission {

				}
			}
			conditions {
				areaOrObjectGroupDistanceBetween {
					value:r = 0
					math:t = "2D"
					object:t = "@t1_helipad_farspawn"
					target:t = "@t2_helipad_farspawn"
					var:t = "near_spawn_dist_max"
				}
			}
			actions {
				varSetString {
					value:t = "air_detection_area_small"
					var:t = "air_detection_area_name"
				}
				triggerEnable {
					target:t = "ada__helipad_far__create_areas"
				}
			}
			else_actions {
				varSetString {
					value:t = "air_detection_area_big"
					var:t = "air_detection_area_name"
				}
				triggerEnable {
					target:t = "ada__helipad_far__create_areas"
				}
			}
		}
		ada__helipad_far__create_areas {
			is_enabled:b = false
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ANY"
				enableAfterComplete:b = false
			}
			events {
				initMission {

				}
			}
			conditions {
				objectExists {
					target:t = "@t1_helipad_farspawn"
					type:t = "objectGroup"
				}
				objectExists {
					target:t = "@t2_helipad_farspawn"
					type:t = "objectGroup"
				}
			}
			actions {
				duplicateAreaAtPos {
					area:t = "@air_detection_area_name"
					target:t = "@t1_helipad_farspawn"
					var_out:t = "air_detection_area_dup_name"
				}
				missionBattleArea {
					air:b = true
					ground:b = false
					mapArea:b = false
					killArea:b = false
					killOutOfBattleArea:b = false
					detectionArea:b = true
					airMapArea:b = false
					area:t = "@air_detection_area_dup_name"
					newGridHorizontalCellCount:i = 0
					team:t = "B"
				}
				duplicateAreaAtPos {
					area:t = "@air_detection_area_name"
					target:t = "@t2_helipad_farspawn"
					var_out:t = "air_detection_area_dup_name"
				}
				missionBattleArea {
					air:b = true
					ground:b = false
					mapArea:b = false
					killArea:b = false
					killOutOfBattleArea:b = false
					detectionArea:b = true
					airMapArea:b = false
					area:t = "@air_detection_area_dup_name"
					newGridHorizontalCellCount:i = 0
					team:t = "A"
				}
			}
			else_actions {
				triggerDisable {
					target:t = "ada__helipad_far__create_areas"
				}
			}
		}
	}
}
mission_objectives {
	isCategory:b = true
	is_enabled:b = true
}
variables {
	t1_airfield_str:t = ""
	t2_airfield_str:t = ""
	t1_airfield_aa_str:t = ""
	t2_airfield_aa_str:t = ""
	t1_air_spawn_str:t = ""
	t2_air_spawn_str:t = ""
	t1_bombers_spawn_str:t = ""
	t2_bombers_spawn_str:t = ""
	t1_helipad_str:t = ""
	t2_helipad_str:t = ""
	t1_helipad_farspawn:t = ""
	t2_helipad_farspawn:t = ""
	defence_team_variable:t = "defenseMissionTeam"
	disableAirfields:b = false
	disableHelipads:b = false
	force_plane_airfield_spawn:b = false
	battlearea_name:t = ""
	session_rank:i = 0
	ucav_spawn_name:t = ""
	ucav_min_mrank:i = 0
	ucav_disable_spawn:b = false
	defense_air_spawn_attack_pos:p3 = 0, 0, 0
	defense_air_spawn_defense_pos:p3 = 0, 0, 0
	near_spawn_dist_max:r = 15000
	air_detection_area_name:t = ""
	air_detection_area_dup_name:t = ""
}
dialogs {

}
airfields {

}
effects {

}
units {
	structures {
		name:t = "defense_air_spawn_structure"
		tm:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [1000.0, 233.0, 0.0]]
		unit_class:t = "dummy"
		objLayer:i = 1
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 1
			formation_type:t = "rows"
			formation_div:i = 3
			formation_step:p2 = 2.5, 2
			formation_noise:p2 = 0.1, 0.1
			stealthRadius:r = 0.01
			setStealth:b = true
		}
		way {

		}
	}
}
areas {
	spawn_ucav {
		type:t = "Sphere"
		tm:m = [[20.0, 0.0, 0.0] [0.0, 20.0, 0.0] [0.0, 0.0, 20.0] [0.0, 0.0, 0.0]]
		objLayer:i = 0
		props {

		}
	}
	air_detection_area_small {
		type:t = "Cylinder"
		tm:m = [[2000.0, 0.0, 0.0] [0.0, 500.0, 0.0] [0.0, 0.0, 2000.0] [0.0, 0.0, 0.0]]
		objLayer:i = 0
		props {

		}
	}
	air_detection_area_big {
		type:t = "Cylinder"
		tm:m = [[5000.0, 0.0, 0.0] [0.0, 500.0, 0.0] [0.0, 0.0, 5000.0] [0.0, 0.0, 0.0]]
		objLayer:i = 0
		props {

		}
	}
}
objLayers {
	layer {
		enabled:b = true
	}
	layer {
		enabled:b = true
	}
	layer {
		enabled:b = true
	}
	layer {
		enabled:b = true
	}
	layer {
		enabled:b = true
	}
	layer {
		enabled:b = false
	}
	layer {
		enabled:b = false
	}
}
wayPoints {

}