selected_tag:t = ""
bin_dump_file:t = ""
mission_settings {
	atmosphere {
		pressure:r = 760
		temperature:r = 30
	}
	player {
		army:i = 1
	}
	player_teamB {
		army:i = 2
	}
	mission {
		level:t = "levels/water.bin"
		type:t = "domination"
		restoreType:t = "attempts"
		optionalTakeOff:b = false
		environment:t = "Day"
		weather:t = "clear"
		scoreLimit:i = 6400
		timeLimit:i = 25
		deathPenaltyMul:r = 0
	}
	spectator_points {

	}
}
imports {
	import_record {
		file:t = "gameData/missions/templates/ww_no_attackers_template.blk"
		importAreas:b = true
		importUnits:b = true
		importTriggers:b = true
		importMissionObjectives:b = true
		importWayPoints:b = true
		showAreas:b = true
		showUnits:b = true
		showTriggers:b = true
		showMissionObjectives:b = true
		showWayPoints:b = true
		excludes {

		}
	}
}
triggers {
	isCategory:b = true
	is_enabled:b = true
	coastdef_init {
		is_enabled:b = true
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {

		}
		actions {
			missionCreateRespawnBasesByTemplate {
				loc_name:t = "missions/spawn"
				spawnEffect:b = false
				isStrictSpawn:b = false
				isAirfield:b = false
				isUnit:b = false
				createRandomBase:b = true
				useExisting:b = false
				isIndividual:b = true
				removeAreas:b = false
				canSpawnOnNeutral:b = false
				showOnMap:b = true
				offset:p3 = 0, 0, 0
				radius:r = -1
				target:t = "t2_tanks_spawn"
				postfix:t = ""
				maxBasesCount:i = 4
				team:t = "B"
				tags {
					tank:b = true
				}
			}
			missionMarkAsRespawnPoint {
				loc_name:t = "missions/air_spawn"
				spawnEffect:b = false
				isStrictSpawn:b = false
				resetStrictSpawnIndex:b = false
				isAirfield:b = false
				isUnit:b = false
				useExisting:b = false
				isIndividual:b = false
				onlyOnePlayerPerSpawnPoint:b = false
				removeAreas:b = false
				replaceAreas:b = false
				canSpawnOnNeutral:b = false
				showOnMap:b = true
				radius:r = -1
				forceCreate:b = false
				target:t = "t2_air_spawn"
				spawnArrangeTo:t = "t1_air_spawn"
				team:t = "B"
				tags {
					tank:b = false
					ship:b = false
				}
			}
			missionMarkAsRespawnPoint {
				loc_name:t = "missions/air_spawn"
				spawnEffect:b = false
				isStrictSpawn:b = false
				resetStrictSpawnIndex:b = false
				isAirfield:b = false
				isUnit:b = false
				useExisting:b = false
				isIndividual:b = false
				onlyOnePlayerPerSpawnPoint:b = false
				removeAreas:b = false
				replaceAreas:b = false
				canSpawnOnNeutral:b = false
				showOnMap:b = true
				radius:r = -1
				forceCreate:b = false
				target:t = "t1_air_spawn"
				spawnArrangeTo:t = "t2_air_spawn"
				team:t = "A"
				tags {
					tank:b = false
					ship:b = false
				}
			}
			varSetString {
				value:t = "battle_area"
				var:t = "battle_area_name"
			}
			wait {
				time:r = 5
			}
			moAddMissionObjective {
				target:t = "avg_coastdef_objective_def"
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
			}
			moAddMissionObjective {
				target:t = "avg_coastdef_objective_att"
				object_var_comp_op:t = "equal"
				object_var_name:t = ""
			}
			comment {
				value:t = ""
			}
			varSetInt {
				value:i = 0
				var:t = "coastdef_timer_from_desc"
				fromDescriptor:t = "mission_timer"
			}
			triggerEnable {
				target:t = "set_coastdef_timer"
				target:t = "coastdef_set_ticket_var"
			}
		}
		else_actions {

		}
	}
	coastdef_check_battle_area_exist {
		is_enabled:b = true
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {
			objectExists {
				target:t = "@battle_area_name"
				type:t = "area"
			}
		}
		actions {
			missionBattleArea {
				air:b = false
				ground:b = true
				mapArea:b = true
				killOutOfBattleArea:b = true
				target:t = "@battle_area_name"
				newGridHorizontalCellCount:i = 0
				killArea:b = false
				detectionArea:b = false
				airMapArea:b = false
				area:t = "@battle_area_name"
			}
		}
		else_actions {

		}
	}
	coastdef_set_ticket_var {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "coastdef_timer_from_desc"
				value:i = 0
				comparasion_func:t = "more"
			}
		}
		actions {
			varSetInt {
				value:i = 0
				var:t = "t1_tickets_for_1_sec"
				source_var:t = "mpTi1"
			}
			varModify {
				operator:t = "divAB"
				value:r = 1
				var:t = "t1_tickets_for_1_sec"
				use_variable:b = true
				var_value:t = "coastdef_timer_from_desc"
			}
			varModify {
				operator:t = "mul"
				value:r = -1
				var:t = "t1_tickets_for_1_sec"
			}
		}
		else_actions {

		}
	}
	set_coastdef_timer {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			timeExpires {
				time:r = 0
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "coastdef_timer_from_desc"
				value:i = 0
				comparasion_func:t = "more"
			}
		}
		actions {
			varSetInt {
				value:i = 0
				var:t = "coastdef_cur_timer"
				input_var:t = "coastdef_timer_from_desc"
			}
			triggerEnable {
				target:t = "coastdef_timer"
				target:t = "coastdef_timer_end"
			}
		}
		else_actions {
			varSetInt {
				value:i = 0
				var:t = "coastdef_cur_timer"
				input_var:t = "coastdef_timer"
			}
			triggerEnable {
				target:t = "coastdef_timer"
				target:t = "coastdef_timer_end"
			}
		}
	}
	coastdef_timer {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {

		}
		actions {
			varModify {
				operator:t = "add"
				value:r = -1
				var:t = "coastdef_cur_timer"
			}
			missionSetTimeIndicator {
				var:t = "coastdef_cur_timer"
			}
			gameMPChangeScore {
				value:i = 1
				valueSystem:t = "amount"
				var:t = "t1_tickets_for_1_sec"
				team:t = "A"
			}
		}
		else_actions {

		}
	}
	coastdef_timer_end {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 1
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "coastdef_cur_timer"
				value:i = 1
				comparasion_func:t = "less"
			}
		}
		actions {
			triggerEnable {
				target:t = "coastdef_t2_win"
			}
		}
		else_actions {

		}
	}
	coastdef_t2_win {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 0.5
			}
		}
		conditions {

		}
		actions {
			gameMPChangeScore {
				value:i = -20
				valueSystem:t = "percentage"
				team:t = "A"
			}
		}
		else_actions {

		}
	}
}
mission_objectives {
	isCategory:b = true
	is_enabled:b = true
	avg_coastdef_objective_def {
		is_enabled:b = false
		comments:t = ""
		type:t = "abstractMissionObjective"
		props {
			isPrimary:b = true
			timeLimit:i = 3600
			team:t = "B"
		}
		onSuccess {

		}
		onFailed {

		}
	}
	avg_coastdef_objective_att {
		is_enabled:b = false
		comments:t = ""
		type:t = "abstractMissionObjective"
		props {
			isPrimary:b = true
			timeLimit:i = 3600
			team:t = "A"
		}
		onSuccess {

		}
		onFailed {

		}
	}
}
variables {
	coastdef_timer:i = 900
	coastdef_cur_timer:i = 0
	coastdef_timer_from_desc:i = 0
	battle_area_name:t = ""
	t1_tickets_for_1_sec:i = 0
}
dialogs {

}
airfields {

}
effects {

}
units {

}
areas {

}
objLayers {
	layer {
		enabled:b = true
	}
	layer {
		enabled:b = true
	}
	layer {
		enabled:b = true
	}
	layer {
		enabled:b = true
	}
}
wayPoints {

}