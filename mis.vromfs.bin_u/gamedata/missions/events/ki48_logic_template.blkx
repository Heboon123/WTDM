selected_tag:t = ""
bin_dump_file:t = ""
mission_settings {
	player {
		army:i = 1
	}
	player_teamB {
		army:i = 2
	}
	mission {
		type:t = "singleMission"
		level:t = "levels/water.bin"
		environment:t = "Day"
		weather:t = "hazy"
	}
}
imports {

}
triggers {
	isCategory:b = true
	is_enabled:b = true
	init {
		is_enabled:b = true
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			initMission {

			}
		}
		conditions {

		}
		actions {
			unitRespawn {
				delay:r = 1
				offset:p3 = 0, 0, 0
				object:t = "player"
				target:t = "player_respawn_pt"
			}
			playerOptions {
				allowBailout:b = false
			}
			playerControls {
				setStatus:t = "disable"
				control:t = "ALL"
			}
			triggerEnable {
				target:t = "target_random_spawn"
				target:t = "player_lock_control"
			}
		}
		else_actions {

		}
	}
	player_lock_control {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			unitSetControls {
				controls:t = "rudder"
				value:r = 0
				force:b = true
				objects:t = "player"
			}
			unitSetControls {
				controls:t = "power"
				value:r = 0.32
				force:b = true
				objects:t = "player"
			}
		}
		else_actions {

		}
	}
	target_random_spawn {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			varSetRandomInt {
				var:t = "random_int_d11"
				from:i = 1
				to_not_including:i = 13
			}
			varSetString {
				value:t = "target_spawn_pt_"
				var:t = "target_spawn_area_name"
			}
			varAddString {
				value:t = ""
				digits:i = 2
				var:t = "target_spawn_area_name"
				input_var:t = "random_int_d11"
			}
			unitRespawn {
				delay:r = 1
				offset:p3 = 0, 0, 0
				object:t = "ship_target"
				target:t = "@target_spawn_area_name"
			}
			triggerEnable {
				target:t = "check_skip_check"
			}
		}
		else_actions {

		}
	}
	check_skip_check {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			varCompareBool {
				var_value:t = "skip_controls_check"
				value:b = true
				comparasion_func:t = "equal"
			}
		}
		actions {
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			hudElementSelectionShade {
				object:t = "ship_target"
				element:t = ""
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "AXIS_WEAPON_AIM_HEADING"
				control:t = "AXIS_WEAPON_AIM_PITCH"
			}
			triggerEnable {
				target:t = "up_down_done"
			}
		}
		else_actions {
			varSetBool {
				value:b = false
				var:t = "is_control_checked_left"
				var:t = "is_control_checked_right"
				var:t = "is_control_checked_up"
				var:t = "is_control_checked_down"
			}
			triggerEnable {
				target:t = "rocket_check_init"
			}
		}
	}
	rocket_check_init {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			wait {
				time:r = 2
			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			hudElementSelectionShade {
				object:t = "ship_target"
				element:t = ""
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/ki_148_missile/controls_check_init"
				action:t = "show"
				shouldFadeOut:b = false
				isOverFade:b = false
				time:r = -1
				priority:i = 0
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
			}
			triggerEnable {
				target:t = "rocket_check_controls"
			}
		}
		else_actions {

		}
	}
	rocket_check_controls {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			playHint {
				hintType:t = "standard"
				name:t = "hints/ki_148_missile/controls_check_left_right"
				action:t = "show"
				shouldFadeOut:b = false
				isOverFade:b = false
				time:r = -1
				priority:i = 0
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "AXIS_WEAPON_AIM_HEADING"
			}
			triggerEnable {
				target:t = "check_left"
				target:t = "check_right"
				target:t = "left_right_done"
			}
		}
		else_actions {

		}
	}
	check_left {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerAxisValueReached {
				value:r = 0
				func:t = "less"
				axis:t = "AXIS_WEAPON_AIM_HEADING"
			}
		}
		actions {
			varSetBool {
				value:b = true
				var:t = "is_control_checked_left"
			}
		}
		else_actions {

		}
	}
	check_right {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerAxisValueReached {
				value:r = 0
				func:t = "more"
				axis:t = "AXIS_WEAPON_AIM_HEADING"
			}
		}
		actions {
			varSetBool {
				value:b = true
				var:t = "is_control_checked_right"
			}
		}
		else_actions {

		}
	}
	left_right_done {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			varCompareBool {
				var_value:t = "is_control_checked_left"
				value:b = true
				comparasion_func:t = "equal"
			}
			varCompareBool {
				var_value:t = "is_control_checked_right"
				value:b = true
				comparasion_func:t = "equal"
			}
		}
		actions {
			wait {
				time:r = 1
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/ki_148_missile/controls_check_up_down"
				action:t = "show"
				shouldFadeOut:b = false
				isOverFade:b = false
				time:r = -1
				priority:i = 0
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "AXIS_WEAPON_AIM_PITCH"
			}
			triggerEnable {
				target:t = "check_up"
				target:t = "check_down"
				target:t = "up_down_done"
			}
		}
		else_actions {

		}
	}
	check_up {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerAxisValueReached {
				value:r = 0
				func:t = "more"
				axis:t = "AXIS_WEAPON_AIM_PITCH"
			}
		}
		actions {
			varSetBool {
				value:b = true
				var:t = "is_control_checked_up"
			}
		}
		else_actions {

		}
	}
	check_down {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerAxisValueReached {
				value:r = 0
				func:t = "less"
				axis:t = "AXIS_WEAPON_AIM_PITCH"
			}
		}
		actions {
			varSetBool {
				value:b = true
				var:t = "is_control_checked_down"
			}
		}
		else_actions {

		}
	}
	up_down_done {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ANY"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			varCompareBool {
				var_value:t = "is_control_checked_up"
				value:b = true
				comparasion_func:t = "equal"
			}
			varCompareBool {
				var_value:t = "is_control_checked_down"
				value:b = true
				comparasion_func:t = "equal"
			}
		}
		actions {
			wait {
				time:r = 1
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/ki_148_missile/launch"
				action:t = "show"
				shouldFadeOut:b = false
				isOverFade:b = false
				time:r = 10
				priority:i = 0
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ID_AGM"
			}
			triggerEnable {
				target:t = "rocket_launched"
			}
		}
		else_actions {

		}
	}
	rocket_launched {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_AGM"
			}
		}
		actions {
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = true
			}
			hudElementSelectionShade {
				element:t = ""
			}
			playHint {
				hintType:t = "standard"
				name:t = "hints/ki_148_missile/destroy_target"
				action:t = "show"
				shouldFadeOut:b = false
				isOverFade:b = false
				time:r = 10
				priority:i = 0
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
			}
			playerControls {
				setStatus:t = "enable"
				control:t = "ALL"
			}
			playerControls {
				setStatus:t = "disable"
				control:t = "AXIS_AILERONS"
				control:t = "AXIS_ELEVATOR"
				control:t = "AXIS_THROTTLE"
			}
			wait {
				time:r = 1
			}
			triggerEnable {
				target:t = "target_hit"
				target:t = "time_out_timer"
				target:t = "target_missed"
			}
			wait {
				time:r = 6
			}
			playHint {
				hintType:t = "standard"
				name:t = "missions/tutorial_destroyer_battle/zoom"
				action:t = "show"
				shouldFadeOut:b = false
				isOverFade:b = false
				time:r = -1
				priority:i = 0
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
			}
		}
		else_actions {

		}
	}
	target_hit {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.5
			}
		}
		conditions {
			unitWhenPartHp {
				func:t = "less"
				check_objects:t = "any"
				check_parts:t = "any"
				value:r = 0.66
				object:t = "ship_target"
				planePart:t = "body_dm"
				tankPart:t = "body_dm"
			}
		}
		actions {
			triggerDisable {
				target:t = "target_missed"
				target:t = "time_out_timer"
				target:t = "rocket_launched"
			}
			unitDamage {
				power:r = 1
				useEffect:b = false
				countEffects:i = 1
				delay:p2 = 1, 1
				offset:p3 = 0, 0, 0
				radiusOffset:p2 = 10, 15
				target:t = "ship_target"
				doExplosion:b = true
			}
			triggerEnable {
				target:t = "mission_completed"
			}
		}
		else_actions {

		}
	}
	time_out_timer {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			wait {
				time:r = 30
			}
			triggerActivate {
				target:t = "target_missed"
				activate_type:t = "ignoreConditions"
				check_trigger_status:b = false
				after_activation:t = "disable"
			}
		}
		else_actions {

		}
	}
	target_missed {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.5
			}
		}
		conditions {
			unitWhenStatus {
				object_type:t = "noMissilesInWorld"
				check_objects:t = "any"
				object_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				target_type:t = "isAlive"
				check_period:r = 1
				object:t = "player"
			}
		}
		actions {
			wait {
				time:r = 1
			}
			triggerDisable {
				target:t = "target_hit"
				target:t = "time_out_timer"
				target:t = "rocket_launched"
			}
			missionSetTimeSpeed {
				speed:r = 0
				realtimeTriggers:b = true
			}
			hudElementSelectionShade {
				object:t = "ship_target"
				element:t = ""
			}
			varSetInt {
				value:i = 15
				var:t = "mission_end_time"
			}
			triggerEnable {
				target:t = "mission_end_timer"
				target:t = "mission_restart"
			}
		}
		else_actions {

		}
	}
	mission_end_timer {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = true
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			varCompareInt {
				var_value:t = "mission_end_time"
				value:i = 0
				comparasion_func:t = "notMore"
			}
		}
		actions {
			triggerDisable {
				target:t = "mission_restart"
			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = true
			}
			hudElementSelectionShade {
				element:t = ""
			}
			playHint {
				hintType:t = "standard"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				isOverFade:b = false
				time:r = -1
				priority:i = 0
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
			}
			triggerEnable {
				target:t = "mission_failed"
			}
		}
		else_actions {
			playHint {
				hintType:t = "standard"
				name:t = "hints/ki_148_missile/try_again"
				action:t = "show"
				shouldFadeOut:b = false
				isOverFade:b = false
				time:r = -1
				priority:i = 0
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
				var_name:t = "mission_end_time"
			}
			varModify {
				operator:t = "add"
				value:r = -1
				var:t = "mission_end_time"
			}
			wait {
				time:r = 1
			}
		}
	}
	mission_restart {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {
			playerShortcutPressed {
				control:t = "ID_CONTINUE"
			}
		}
		actions {
			triggerDisable {
				target:t = "mission_end_timer"
			}
			missionSetTimeSpeed {
				speed:r = 1
				realtimeTriggers:b = true
			}
			hudElementSelectionShade {
				element:t = ""
			}
			playHint {
				hintType:t = "standard"
				name:t = ""
				action:t = "hideCur"
				shouldFadeOut:b = false
				isOverFade:b = false
				time:r = -1
				priority:i = 0
				target_marking:i = 0
				object_var_name:t = ""
				object_var_comp_op:t = "equal"
				object_var_value:i = 0
			}
			missionSetFade {
				mode:t = "fadeOut"
				color:p3 = 0, 0, 0
				time:r = 1
			}
			wait {
				time:r = 1
			}
			unitSetProperties {
				object:t = "player"
				speed:r = 300
			}
			unitRespawn {
				delay:r = 1
				offset:p3 = 0, 0, 0
				object:t = "player"
				target:t = "player_respawn_pt"
			}
			playerControls {
				setStatus:t = "disable"
				control:t = "ALL"
			}
			wait {
				time:r = 0.1
			}
			playerCenterMouseAim {

			}
			missionSetFade {
				mode:t = "fadeIn"
				color:p3 = 0, 0, 0
				time:r = 1
			}
			varSetBool {
				value:b = true
				var:t = "skip_controls_check"
			}
			triggerEnable {
				target:t = "target_random_spawn"
			}
		}
		else_actions {

		}
	}
	mission_completed {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionCompleted {
				timer:b = false
				debriefingTimer:i = 5
			}
		}
		else_actions {

		}
	}
	mission_failed {
		is_enabled:b = false
		comments:t = ""
		props {
			actionsType:t = "PERFORM_ONE_BY_ONE"
			conditionsType:t = "ALL"
			enableAfterComplete:b = false
		}
		events {
			periodicEvent {
				time:r = 0.01
			}
		}
		conditions {

		}
		actions {
			missionFailed {
				debriefingTimer:i = 5
				timer:b = false
			}
		}
		else_actions {

		}
	}
	debug {
		isCategory:b = true
		is_enabled:b = true
		debug_respawn {
			is_enabled:b = true
			comments:t = ""
			props {
				actionsType:t = "PERFORM_ONE_BY_ONE"
				conditionsType:t = "ALL"
				enableAfterComplete:b = true
			}
			events {
				periodicEvent {
					time:r = 0.01
				}
			}
			conditions {
				unitWhenStatus {
					object_type:t = "isInactive"
					check_objects:t = "any"
					object_marking:i = 0
					object_var_name:t = ""
					object_var_comp_op:t = "equal"
					object_var_value:i = 0
					target_type:t = "isAlive"
					check_period:r = 1
					object:t = "player"
				}
			}
			actions {
				unitRespawn {
					delay:r = 1
					offset:p3 = 0, 0, 0
					object:t = "player"
					target:t = "player_respawn_pt"
				}
				wait {
					time:r = 1
				}
			}
			else_actions {

			}
		}
	}
}
mission_objectives {
	isCategory:b = true
	is_enabled:b = true
}
variables {
	random_int_d11:i = 0
	target_spawn_area_name:t = ""
	is_control_checked_left:b = false
	is_control_checked_right:b = false
	is_control_checked_up:b = false
	is_control_checked_down:b = false
	mission_end_time:i = 0
	skip_controls_check:b = false
}
dialogs {

}
airfields {

}
effects {

}
units {
	structures {
		name:t = "ship_target"
		tm:m = [[0.813934, 0.0, -0.580958] [0.0, 1.0, 0.0] [0.580958, 0.0, 0.813934] [1819.7, -2.99902, 1682.75]]
		unit_class:t = "ship_target_1_char"
		objLayer:i = 1
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 2
			count:i = 1
			formation_type:t = "rows"
			formation_div:i = 3
			formation_step:p2 = 2.5, 2
			formation_noise:p2 = 0.1, 0.1
		}
		way {

		}
	}
	ships {
		name:t = "ship_carrier"
		tm:m = [[-0.793354, 0.0, -0.608761] [0.0, 1.0, 0.0] [0.608761, 0.0, -0.793354] [4911.45, -3.00146, 3623.92]]
		unit_class:t = "ijn_cv_soryu"
		objLayer:i = 1
		closed_waypoints:b = false
		isShipSpline:b = false
		shipTurnRadius:r = 100
		weapons:t = ""
		bullets0:t = ""
		bullets1:t = ""
		bullets2:t = ""
		bullets3:t = ""
		bulletsCount0:i = 0
		bulletsCount1:i = 0
		bulletsCount2:i = 0
		bulletsCount3:i = 0
		crewSkillK:r = 0
		applyAllMods:b = false
		props {
			army:i = 1
			count:i = 1
			formation_type:t = "rows"
			formation_div:i = 3
			formation_step:p2 = 2.5, 2
			formation_noise:p2 = 0.1, 0.1
		}
		way {

		}
	}
}
areas {
	area_01 {
		type:t = "Sphere"
		tm:m = [[317.793, 0.0, -508.928] [0.0, 600.0, 0.0] [508.928, 0.0, 317.793] [1702.86, -3.00146, 1604.84]]
		objLayer:i = 0
		props {

		}
	}
	player_respawn_pt {
		type:t = "Sphere"
		tm:m = [[-5.44901, 0.0, -8.385] [0.0, 10.0, 0.0] [8.385, 0.0, -5.44901] [3103.89, 59.9985, 3692.12]]
		objLayer:i = 0
		props {

		}
	}
	area_02 {
		type:t = "Sphere"
		tm:m = [[4149.19, 0.0, -2790.02] [0.0, 5000.0, 0.0] [2790.02, 0.0, 4149.19] [1709.13, -3.00146, 1617.36]]
		objLayer:i = 0
		props {

		}
	}
	target_spawn_pt_01 {
		type:t = "Sphere"
		tm:m = [[66.9961, 0.0, -43.5375] [0.0, 79.8999, 0.0] [43.5375, 0.0, 66.9961] [1875.75, -3.00146, 1426.31]]
		objLayer:i = 0
		props {

		}
	}
	target_spawn_pt_02 {
		type:t = "Sphere"
		tm:m = [[-66.9961, 0.0, 43.5375] [0.0, 79.8999, 0.0] [-43.5375, 0.0, -66.9961] [1779.69, -3.00146, 1373.99]]
		objLayer:i = 0
		props {

		}
	}
	target_spawn_pt_03 {
		type:t = "Sphere"
		tm:m = [[66.9961, 0.0, -43.5375] [0.0, 79.8999, 0.0] [43.5375, 0.0, 66.9961] [1838.45, -3.00097, 1519.26]]
		objLayer:i = 0
		props {

		}
	}
	target_spawn_pt_04 {
		type:t = "Sphere"
		tm:m = [[-68.8315, 0.0, 40.5738] [0.0, 79.8999, 0.0] [-40.5738, 0.0, -68.8315] [1490.61, -3.00146, 1690.76]]
		objLayer:i = 0
		props {

		}
	}
	target_spawn_pt_05 {
		type:t = "Sphere"
		tm:m = [[-66.9961, 0.0, 43.5375] [0.0, 79.8999, 0.0] [-43.5375, 0.0, -66.9961] [1547.94, -3.00146, 1785.62]]
		objLayer:i = 0
		props {

		}
	}
	target_spawn_pt_06 {
		type:t = "Sphere"
		tm:m = [[66.9961, 0.0, -43.5375] [0.0, 79.8999, 0.0] [43.5375, 0.0, 66.9961] [1459.82, -3.00048, 1587.71]]
		objLayer:i = 0
		props {

		}
	}
	target_spawn_pt_07 {
		type:t = "Sphere"
		tm:m = [[66.9961, 0.0, -43.5375] [0.0, 79.8999, 0.0] [43.5375, 0.0, 66.9961] [1587.75, -2.99877, 1693.29]]
		objLayer:i = 0
		props {

		}
	}
	target_spawn_pt_08 {
		type:t = "Sphere"
		tm:m = [[66.9961, 0.0, -43.5375] [0.0, 79.8999, 0.0] [43.5375, 0.0, 66.9961] [1642.56, -3.00146, 1848.47]]
		objLayer:i = 0
		props {

		}
	}
	target_spawn_pt_09 {
		type:t = "Sphere"
		tm:m = [[66.9961, 0.0, -43.5375] [0.0, 79.8999, 0.0] [43.5375, 0.0, 66.9961] [1945.04, -2.99902, 1626.73]]
		objLayer:i = 0
		props {

		}
	}
	target_spawn_pt_10 {
		type:t = "Sphere"
		tm:m = [[-66.9961, 0.0, 43.5376] [0.0, 79.8999, 0.0] [-43.5376, 0.0, -66.9961] [1935.75, -2.99976, 1517.89]]
		objLayer:i = 0
		props {

		}
	}
	target_spawn_pt_11 {
		type:t = "Sphere"
		tm:m = [[-66.9961, 0.0, 43.5375] [0.0, 79.8999, 0.0] [-43.5375, 0.0, -66.9961] [1489.24, -3.00146, 1490.07]]
		objLayer:i = 0
		props {

		}
	}
	target_spawn_pt_12 {
		type:t = "Sphere"
		tm:m = [[66.9961, 0.0, -43.5375] [0.0, 79.8999, 0.0] [43.5375, 0.0, 66.9961] [1685.78, -3.00146, 1363.45]]
		objLayer:i = 0
		props {

		}
	}
}
objLayers {
	layer {
		enabled:b = true
	}
	layer {
		enabled:b = true
	}
	layer {
		enabled:b = true
	}
	layer {
		enabled:b = true
	}
}
wayPoints {

}