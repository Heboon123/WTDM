import:t = "%wtlibs/templates/essentials.blk"
unit_repair {
	repair_system_remaining_repair_time:r = -1
	repair_system_delay_time_to_repair:r = -1
	repair_system_auto_check_delay:r = 0
	repair_system_speed_multiplier_base:r = 1
	repair_system_speed_multiplier:r = 1
	repair_system_toolkit_count:i = 0
	repair_system_toolkit_count_max:i = -1
	repair_system_scheduled_bot_repair_time:r = -1
	repair_system_repair_hp_multiplier:r = 1
	repair_system_trailer_repair_progress:r = -1
	repair_system_trailer_repair_time:r = 20
	repair_system_state:u32 {

	}
	repair_system_parts_state:list<u32> {

	}
	repair_system_parts_id {

	}
	repair_system_parts_speed_mult:list<r> {

	}
	repair_system_parts_hp:list<p4> {

	}
}
unit_fire_and_extinguish {
	extinguish_system_next_extinguisher_time:r = -1
	extinguish_system_last_extinguish_time:r = -1
	extinguish_system_extinguish_time_start:r = -1
	extinguish_system_extinguish_time_end:r = -1
	extinguish_system_crew_busy_time:r = -1
	extinguish_system_crew_busy_time_end:r = -1
	extinguish_system_extinguisher_time_min:r = 0
	extinguish_system_extinguisher_time_max:r = 0
	extinguish_system_cooldown:r = 0
	extinguish_system_extinguisher_count:i = 0
	extinguish_system_extinguisher_count_max:i = 0
	extinguish_system_penalty_without_mod:b = false
	extinguish_system_auto_extinguisher:b = false
	extinguish_system_is_assisting:b = false
	extinguish_system_require_net_sync:b = false
}
unit_fire_damage {
	fire_system_require_net_sync:b = false
	fire_damage__isBurn:b = false
	fire_damage__updateBurnInterval:r = 1
	fire_damage__nextUpdateTime:r = 0
	fire_damage__offender:eid {

	}
	fire_data__packedPartId:list<u32> {

	}
	fire_data__nodeId:list<i> {

	}
	fire_data__fireParamsId:list<i> {

	}
	fire_data__offset:list<p3> {

	}
	fire_data__radius:list<p2> {

	}
	fire_data__initiatorId:list<u32> {

	}
	fire_data__startTime:list<r> {

	}
	fire_data__extinguishProgress:list<r> {

	}
	fire_data__underwaterTimer:list<r> {

	}
}
unit_fire_fx {
	fire_fx__id:list<i> {

	}
	fire_fx__fxId:list<i> {

	}
	fire_fx__paramsId:list<i> {

	}
}
unit_proximity_damage {
	proximity_damage__pos:list<p3> {

	}
	proximity_damage__parts:dm::PartIdList {

	}
	proximity_damage__partGlobalId:list<i16> {

	}
	proximity_damage__visualNum:list<i> {

	}
}
unit_ammo_stowage {
	_hide:b = true
	ammo_stowage__dpAmmo:ip3 = -1, -1, -1
	ammo_stowage__dpTorpedo:ip3 = -1, -1, -1
	ammo_stowage__dpDepthCharge:ip3 = -1, -1, -1
	ammo_stowage__timeAmmoFire:r = -1
	ammo_stowage__numAmmoFsForHud:i = 0
	ammo_stowage__ammoLost:i = 0
	ammo_stowage__combustionTime:r = 10
	ammo_stowage__detonateProb:r = 0.1
	ammo_stowage__fatalDetonatePortion:p2 = 0.3, 0.6
	ammo_stowage__nonFatalDetonatePortion:p2 = 1, 1
	ammo_stowage__fxEvAmmoFireId:i = -1
	ammo_stowage__ammoState:u32 {

	}
	ammo_stowage__explosiveProperties {

	}
	ammo_stowage__splashProperties {

	}
	ammo_stowage__delayedOffender {

	}
	ammo_stowage__ammoTypeRemap:list<ip4> {

	}
	ammo_stowage__weaponsIds:list<i> {

	}
	ammo_stowage__ammoTypeToMask:list<u32> {

	}
	ammo_stowage__partIdRemap:list<ip4> {

	}
	ammo_stowage__weaponsRemap:list<i16> {

	}
	ammo_per_type_data__state:list<u32> {

	}
	ammo_per_type_data__numAmmoFs:list<i> {

	}
	ammo_per_type_data__numAmmoFsSync:list<i> {

	}
	ammo_stowages__state:list<u32> {

	}
	ammo_stowages__bulletsCartridge:list<i> {

	}
	ammo_stowages__replenishmentStartEnd:list<p2> {

	}
	ammo_stowages__replenishmentTime:list<p2> {

	}
	ammo_stowages__powderMassToSplash {

	}
	ammo_stowages__floodedAmmoReloadMult:list<r> {

	}
	ammo_stowages__clustersRange:list<ip2> {

	}
	ammo_stowages__weaponTriggersRange:list<ip2> {

	}
	ammo_stowages__cachedAmmoHash:list<u32> {

	}
	ammo_stowage__weaponTriggers:list<i> {

	}
	ammo_clusters__typeAndStage:list<u16> {

	}
	ammo_clusters__state:list<u32> {

	}
	ammo_clusters__fireEvtId:list<i> {

	}
	ammo_clusters__fireParamsId:list<i> {

	}
	ammo_clusters__explosionEvtId:list<i> {

	}
	ammo_clusters__damageEffectPresetId:list<i> {

	}
	ammo_clusters__reloadTimeMult:list<r> {

	}
	ammo_clusters__ammoClassConstraints:list<u32> {

	}
	ammo_clusters__splashConstraints:list<p3> {

	}
	ammo_clusters__shatterConstraints:list<p3> {

	}
	ammo_clusters__fireSplashConstraints:list<p3> {

	}
	ammo_clusters__entityMunition:list<t> {

	}
	ammo_clusters__slotsRange:list<ip2> {

	}
	ammo_clusters__wreckageRange:list<ip2> {

	}
	ammo_clusters__relatedPartsRange:list<ip2> {

	}
	ammo_stowage__wreckageIds:list<i> {

	}
	ammo_stowage__relatedPartsIds {

	}
	ammo_slots__state:list<u32> {

	}
	ammo_slots__ammoMaskAndType:list<u32> {

	}
	ammo_slots__partId {

	}
	ammo_slots__numAmmo:list<ip2> {

	}
	ammo_slots__node {

	}
}
tank_engine {
	_use:t = "replicating"
	tank_engine__startSoundDelayTimer:r = -1
	tank_engine__stopSoundDelayTimer:r = -1
	tank_engine__startDelayTimer:r = -1
	tank_engine__stopDelayTimer:r = -1
	tank_engine__commandSent:b = false
	tank_engine__startDelay:r = 0
	tank_engine__stopDelay:r = 0
	tank_engine__stopSoundDelay:r = -1
	tank_engine__startSoundDelay:r = -1
	tank_engine__soundStarted:b = false
	_group {
		_replicate:b = true
		tank_engine__overheat:b = false
		tank_engine__isWorking:b = true
	}
	_group {
		_tags:t = "server"
		tank_engine__overheatDelay:r = 0
		tank_engine__overheatDamage:r = 0
		tank_engine__overheatDamageType:i = -1
		tank_engine__overheatDamageCooldown:r = 0
		tank_engine__overheatDamageTime:r = -1
		tank_engine__brokenRadiatorFxEventId:i = -1
		tank_engine__engine_parts {

		}
		tank_engine__radiator_parts {

		}
		tank_engine__overheatOffender {

		}
	}
	tank_engine__stage:u8 {
		value:i = 3
	}
}
tank_phys_tracks {
	physical_tracks_enabled:b = true
	physical_tracks__meshName:t = ""
	physical_tracks__nonSymmetric:b = false
	physical_tracks__trackCount:i = 0
	physical_tracks {
		_tags:t = "render"
	}
	physical_tracks__isLeft:list<b> {
		_tags:t = "render"
	}
	physical_tracks_force_update:b {
		_tags:t = "render"
		value:b = true
	}
}
ship_cover_parts {
	ship_cover_parts__disableDeadParts:b = true
	ship_cover_parts__partId {

	}
	ship_cover_parts__compartmentId:list<i> {

	}
	ship_cover_parts__water:list<p4> {

	}
	ship_cover_parts__weight:list<r> {

	}
	ship_cover_parts__pos:list<p3> {

	}
	ship_cover_parts__innerPartsRange:list<ip2> {

	}
	ship_cover_parts__innerPartsId {

	}
	ship_cover_parts__innerPartsCriticalWater:list<r> {

	}
	ship_compartments__coverPartsRange:list<ip2> {

	}
}
ship_breaches {
	ship_breaches__nextId:i = 0
	ship_flooding__waterLeftSide:r = 0
	ship_flooding__waterRightSide:r = 0
	ship_flooding__floodStep:i = 1
	ship_breaches__fatalPartId {

	}
	ship_breaches__id:list<i> {

	}
	ship_breaches__pos:list<p3> {

	}
	ship_breaches__normal:list<p3> {

	}
	ship_breaches__size:list<r> {

	}
	ship_breaches__amountToRepair:list<r> {

	}
	ship_breaches__depthScale:list<r> {

	}
	ship_breaches__nextCheck:list<r> {

	}
	ship_breaches__partId {

	}
	ship_breaches__coverId:list<i> {

	}
	ship_breaches__leakedAmount:list<r> {

	}
	ship_breaches__offender {

	}
}
ship_phys_proxy {
	ship_phys_proxy__velocitySq:r = 0
	ship_phys_proxy__groundCollision:b = false
	ship_phys_proxy__additionalWater:r = 0
	ship_phys_proxy__waterLeaking:b = false
	ship_phys_proxy__avgBreachPos:p3 = 0, 0, 0
}
ship_repair {
	ship_repair__partIdx:i = -1
	ship_repair__partRemainingTime:r = -1
	_group {
		_replicate:b = true
		ship__repairBreachesRemainingTime:r = 1
	}
	ship_repair__partsPartId:list<i> {

	}
	ship_repair__partsTime:list<r> {

	}
	ship_repair__partsHp:list<r> {

	}
}
ship_unwatering {
	ship__waterMassVelMult:r = 1
	_group {
		_replicate:b = true
		ship__unwateringRemainingTime:r = -1
	}
	ship__pumpsPartId:list<i> {

	}
}
ship_damage_control {
	_use:t = "ship_cover_parts"
	_use:t = "ship_breaches"
	_use:t = "ship_phys_proxy"
	_use:t = "ship_repair"
	_use:t = "ship_unwatering"
	ship__modernDamageControl:b = false
	ship_damage_control__cooldownTime:r = 30
	ship_damage_control__cooldownEndTime:r = 0
	ship_damage_control__timePenalty:p3 = 1, 1.5, 2
	ship_damage_control__repairSpeedMult:r = 1
	ship_damage_control__extinguishSpeedMult:r = 1
	ship_damage_control__unwateringSpeedMult:r = 1
	ship_damage_control__priorities:u32 {

	}
	ship_damage_control__presets:u32 {

	}
}
gm_engine_sound {
	_tags:t = "sound"
	gm_engine_sound__event_name:t = ""
	gm_engine_sound__event_inside_name:t = ""
	gm_engine_sound__start_event_name:t = ""
	gm_engine_sound__stop_event_name:t = ""
	gm_engine_sound__start_inside_name:t = ""
	gm_engine_sound__stop_inside_name:t = ""
	gm_engine_sound__load_smooth:r = 0
	gm_engine_sound__update_interval:r = 0
	gm_engine_sound__is_inside:b = false
	gm_engine_sound__pos:p3 = 0, 0, 0
	gm_engine_sound__pos_offset:p3 = 0, 0, 0
	gm_engine_sound__is_playing:b = false
	gm_engine_sound__should_play:b = true
	gm_engine_sound__load:r = 0
	gm_engine_sound__loadswitch:b = false
	gm_engine_sound__event:SoundEvent {

	}
	gm_engine_sound__event_inside:SoundEvent {

	}
	gm_engine_sound__start_event:SoundEvent {

	}
	gm_engine_sound__stop_event:SoundEvent {

	}
	gm_engine_sound__start_inside_event:SoundEvent {

	}
	gm_engine_sound__stop_inside_event:SoundEvent {

	}
	gm_engine_sound__cached_params:list<r> {

	}
}
gm_additional_engine_sound {
	_tags:t = "sound"
	gm_additional_engine_sound__event_name:t = ""
	gm_additional_engine_sound__pos:p3 = 0, 0, 0
	gm_additional_engine_sound__pos_offset:p3 = 0, 0, 0
	gm_additional_engine_sound__event:SoundEvent {

	}
}
gm_sub_vechicle_track_sound {
	_tags:t = "sound"
	gm_sub_vechicle_track_sound__event_name:t = ""
	gm_sub_vechicle_track_sound__pos:p3 = 0, 0, 0
	gm_sub_vechicle_track_sound__idx:i = -1
	gm_sub_vechicle_track_sound__event:SoundEvent {

	}
	gm_sub_vechicle_track_sound__cached_params:list<r> {

	}
}
controlled_hero {
	controlledHero:tag {

	}
	hero:tag {

	}
}
controllable_hero_item {
	item__owned_controllable_hero:tag {

	}
}
watched_hero {
	watchedHero:tag {

	}
	watchedByPlr:eid {

	}
}
watched_by_player_item {
	watchedPlayerItem:tag {

	}
}
player_unit {
	playerUnit:tag {

	}
}
dead_unit {
	_use:t = "replicating"
	unit_tag__dead:tag {

	}
	_group {
		dead_unit__player_id:i = -1
		_replicate:b = true
	}
}
unit_init_params {
	_use:t = "unit_init_params_ext"
	_tags:t = "server"
	unit_params__skinName:t = ""
	unit_params__isDelayed:b = false
	unit_params__isPlayersOwnedUnit:b = false
	unit_params__supportUnitIdx:i = -1
	unit_params__initUnitVersion:i = 0
	unit_params__fireType:i = -1
	unit_params__cloneCount:i = 1
	unit_params__behTreeName:t = ""
}
unit_transferred_data {
	_singleton:b = true
	unit_transferred_data__componentsList:list<t> {
		name:t = "unit__isAlwaysReplicated"
		name:t = "killerEid"
		name:t = "canChangeUnit"
		name:t = "unit_target_list"
		name:t = "unit_current_route__routeEid"
		name:t = "unit_current_route__curWayPoint"
		name:t = "loot_carrier__rage"
	}
	unit_transferred_data__subTemplatesList:list<t> {
		name:t = "unit_current_route"
		name:t = "unit_target_list"
	}
}
base_unit {
	_use:t = "root"
	_use:t = "replicating"
	_use:t = "base_unit_ext"
	_use:t = "ecs_no_debug"
	_use:t = "unit_init_params"
	_use:t = "unit_proximity_damage"
	uid:i = -1
	transform:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [0.0, 0.0, 0.0]]
	unit__className:t = ""
	unit__playerId:i = -1
	is_local:b = false
	unitVersion:i = 0
	unitType:i = -1
	canChangeUnit:b = false
	unit__missionName:t = ""
	team:i = -1
	_replicated:t = "uid"
	_replicated:t = "unitVersion"
	_tracked:t = "unit__playerId"
	_tracked:t = "unitVersion"
	_replicated:t = "ownedByPlr"
	_tracked:t = "ownedByPlr"
	_replicated:t = "supportForPlr"
	_tracked:t = "supportForPlr"
	_replicated:t = "team"
	_tracked:t = "team"
	unit__isReplicated:b = false
	unit__isAlwaysReplicated:b = false
	_tracked:t = "unit__isReplicated"
	_tracked:t = "unit__isAlwaysReplicated"
	unit__ref {

	}
	ownedByPlr:eid {

	}
	supportForPlr:eid {

	}
	killerEid:eid {

	}
	replicate_custom:tag {

	}
}
shell_start_fx {
	shell_start_fx__timeFx:r = 0
	shell_start_fx__offset:m = [[1.0, 0.0, 0.0] [0.0, 1.0, 0.0] [0.0, 0.0, 1.0] [0.0, 0.0, 0.0]]
	shell_start_fx__fx:EffectRef {
		_tags:t = "render"
	}
	shell_start_fx__fxFlags:u32 {

	}
}
base_damage_model_ai_points {
	_tags:t = "server"
	dm_ai__pointsYRange:p2 = 0, 0
	dm_ai__points:list<p3> {

	}
	dm_ai__pointsInfo:list<ip2> {

	}
	dm_ai__filters:shared:array {
		filter:object {
			type:t = "TRACK"
			mask:t = "track_*"
			max:i = 4
		}
		filter:object {
			type:t = "WHEEL"
			mask:t = "wheel_l_*"
			max:i = 8
		}
		filter:object {
			type:t = "WHEEL"
			mask:t = "wheel_r_*"
			max:i = 8
		}
		filter:object {
			type:t = "ENGINE"
			mask:t = "engine_*"
			max:i = 1
			merge:b = true
		}
		filter:object {
			type:t = "ENGINE"
			mask:t = "transmission_*"
			max:i = 1
			merge:b = true
		}
		filter:object {
			type:t = "TURRET"
			mask:t = "turret_$"
			max:i = 8
		}
		filter:object {
			type:t = "TURRET"
			mask:t = "aa_turret_#"
			max:i = 8
		}
		filter:object {
			type:t = "TURRET"
			mask:t = "main_caliber_turret_#"
			max:i = 8
		}
		filter:object {
			type:t = "BARREL"
			mask:t = "gun_barrel_$"
			max:i = 4
		}
		filter:object {
			type:t = "BARREL"
			mask:t = "aa_gun_#"
			max:i = 4
		}
		filter:object {
			type:t = "BARREL"
			mask:t = "main_caliber_gun_#"
			max:i = 4
		}
		filter:object {
			type:t = "CREW"
			mask:t = "driver_*"
			max:i = 1
		}
		filter:object {
			type:t = "CREW"
			mask:t = "loader_*"
			max:i = 1
		}
		filter:object {
			type:t = "CREW"
			mask:t = "gunner_*"
			max:i = 8
		}
		filter:object {
			type:t = "CREW"
			mask:t = "commander_*"
			max:i = 1
		}
		filter:object {
			type:t = "CREW"
			mask:t = "machine_gunner_*"
			max:i = 8
		}
	}
}
aircraft {
	_use:t = "base_unit"
	_use:t = "aircraft_ext"
	agent_dangers__tag:t = "plane"
	ai_target__noiseLevel:r = 0
	unit_storage__aircraft {

	}
	plane_net_phys {

	}
	unit_tag__aircraft:tag {

	}
	shell_start_fx_eids:list<eid> {
		_tags:t = "render"
	}
	ai_target {
		_tags:t = "server"
	}
	unitAiTargetPos:tag {

	}
	aircraft__troubleScore:r {
		value:r = 0
		_tags:t = "server"
	}
}
barrage_ballon {
	_use:t = "base_unit"
	_use:t = "barrage_ballon_ext"
	unit_storage__barrage_balloon {

	}
	unit_tag__barrage_balloon:tag {

	}
	unit_tag__gm:tag {

	}
}
ground_unit {
	_use:t = "base_unit"
	_use:t = "ground_unit_ext"
	move_sys__maxDecel:r = 0
	_use:t = "unit_repair"
	_use:t = "unit_fire_and_extinguish"
	_use:t = "unit_fire_damage"
	_use:t = "unit_fire_fx"
	_use:t = "tank_engine"
	_use:t = "unit_ammo_stowage"
	aim_component {

	}
	unit_crew {

	}
	unit_fx {

	}
	fuel_tanks {

	}
	modEids:list<eid> {
		_replicate:b = true
	}
	shell_start_fx_eids:list<eid> {
		_tags:t = "render"
	}
}
tank {
	_use:t = "ground_unit"
	_use:t = "tank_ext"
	_use:t = "vehicle_grid_obj"
	_use:t = "base_damage_model_ai_points"
	unit__reCreateOnRespawn:b = true
	unit__shouldKeepDeadUnit:b = true
	_replicated:t = "reloadedFromAmmoBoxCount"
	_use:t = "gm_engine_sound"
	_use:t = "tank_phys_tracks"
	agent_dangers__tag:t = "vehicle"
	ai_target__noiseLevel:r = 0
	unit__forceBailoutTimer:r = -1
	unit_storage__tank {

	}
	vehicle_net_phys {

	}
	humanAdditionalCollisionChecks:tag {

	}
	unit_tag__tank:tag {

	}
	unit_tag__gm:tag {

	}
	mods:list<t> {
		mod:t = "toolkit_ecs"
		mod:t = "extinguisher_ecs"
		mod:t = "medicalkit_ecs"
		mod:t = "tank_smokescreen_ecs"
	}
	track_sound {
		_tags:t = "sound"
	}
	reloadedFromAmmoBoxCount:list<i> {
		primary:i = 0
		secondary:i = 0
		special:i = 0
	}
	canReloadFromBox:list<b> {
		primary:b = false
		secondary:b = false
		special:b = false
	}
	reloadFromBoxTriggerGroupMask:u8 {
		value:i = 0
	}
	ai_target {
		_tags:t = "server"
	}
	unitAiTargetPos:tag {

	}
}
ship {
	_use:t = "ground_unit"
	_use:t = "ship_ext"
	unit__reCreateOnRespawn:b = true
	unit__shouldKeepDeadUnit:b = true
	_use:t = "ship_damage_control"
	_use:t = "gm_engine_sound"
	unit_storage__ship {

	}
	unit_tag__ship:tag {

	}
	unit_tag__gm:tag {

	}
	mods:list<t> {
		mod:t = "ship_toolkit_ecs"
		mod:t = "ship_extinguisher_ecs"
		mod:t = "medicalkit_ecs"
		mod:t = "ship_smokescreen_ecs"
	}
	track_sound {
		_tags:t = "sound"
	}
}
walker {
	_use:t = "ground_unit"
	_use:t = "walker_ext"
	_use:t = "vehicle_grid_obj"
	unit_storage__walker {

	}
	unit_tag__walker:tag {

	}
	unit_tag__gm:tag {

	}
}
simple_ground_unit {
	_use:t = "base_unit"
	_use:t = "simple_ground_unit_ext"
	aim_component {

	}
}
simple_tank {
	_use:t = "simple_ground_unit"
	_use:t = "simple_tank_ext"
	_use:t = "vehicle_grid_obj"
	unit__reCreateOnRespawn:b = true
	unit__shouldKeepDeadUnit:b = true
	humanAdditionalCollisionChecks:tag {

	}
	unit_storage__tank {

	}
	vehicle_net_phys {

	}
	unit_tag__tank:tag {

	}
	unit_tag__gm:tag {

	}
}
simple_ship {
	_use:t = "simple_ground_unit"
	_use:t = "simple_ship_ext"
	unit__reCreateOnRespawn:b = true
	unit__shouldKeepDeadUnit:b = true
	unit_storage__ship {

	}
	unit_tag__ship:tag {

	}
	unit_tag__gm:tag {

	}
}
trailer {
	_use:t = "simple_ground_unit"
	_use:t = "trailer_ext"
	_use:t = "vehicle_grid_obj"
	unit__reCreateOnRespawn:b = true
	unit__shouldKeepDeadUnit:b = true
	track_sound {
		_tags:t = "sound"
	}
	unit_storage__tank {

	}
	vehicle_net_phys {

	}
	unit_tag__tank:tag {

	}
	unit_tag__tank_trailer:tag {

	}
	unit_tag__gm:tag {

	}
}
simple_trailer {
	_use:t = "trailer"
}
human {
	_use:t = "base_unit"
	_use:t = "human_ext"
	_use:t = "human_grid_obj"
	restricted_area_timer:r = -1
	agent_dangers__tag:t = "human"
	human_net_phys {

	}
	unit_storage__human {

	}
	unit_tag__human:tag {

	}
	unit_tag__gm:tag {

	}
}
light_vehicle {
	_use:t = "simple_ground_unit"
	_use:t = "light_vehicle_ext"
	_use:t = "vehicle_grid_obj"
	unit_storage__light_vehicle {

	}
	unit_tag__light_vehicle:tag {

	}
	unit_tag__gm:tag {

	}
}
fortification {
	_use:t = "simple_ground_unit"
	_use:t = "fortification_ext"
	unit_storage__fortification {

	}
	unit_tag__fortification:tag {

	}
	unit_tag__gm:tag {

	}
}
infantry_troop {
	_use:t = "simple_ground_unit"
	_use:t = "infantry_troop_ext"
	_use:t = "vehicle_grid_obj"
	unit_storage__infantry_troop {

	}
	unit_tag__infantry_troop:tag {

	}
}
expendable_mod {
	_use:t = "replicating"
	_use:t = "ecs_no_debug"
	mod__enabled_without_mod:b = false
	mod__count_effects_mod:b = false
	mod__send_economic_spend:b = true
	mod__name:t = ""
	mod__type_name:t = ""
	_use:t = "replicate_early"
	mod__ownerEid:eid {

	}
	_group {
		_replicate:b = true
		mod__total_count:i = 0
		mod__count:i = 0
	}
}