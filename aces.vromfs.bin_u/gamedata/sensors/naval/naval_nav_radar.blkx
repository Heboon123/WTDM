type:t = "radar"
transivers {
	search {
		power:r = 100
		band:i = 8
		rcs:r = 100
		range:r = 40000
		rangeMax:r = 50000
		antenna {
			azimuth {
				angleHalfSens:r = 3
				sideLobesSensitivity:r = -30
			}
			elevation {
				angleHalfSens:r = 15
				sideLobesSensitivity:r = -30
			}
		}
	}
}
scanPatterns {
	search {
		type:t = "cylinder"
		azimuthLimits:p2 = -180, 180
		elevationLimits:p2 = -20, 0
		yawStabLimit:r = 180
		pitchStabLimit:r = 20
		rollStabLimit:r = 20
		period:r = 1
		barHeight:r = 15
		barsCount:i = 1
		rowMajor:b = true
	}
}
signals {
	search {
		aircraftAsTarget:b = true
		groundVehiclesAsTarget:b = false
		groundClutter:b = false
		distance {
			presents:b = true
			minValue:r = 300
			maxValue:r = 50000
		}
	}
}
scanPatternSets {
	search {
		scanPattern1:t = "search"
	}
}
scopeRangeSets {
	search {
		range1:r = 10000
		range2:r = 25000
		range3:r = 50000
	}
}
fsms {
	main {
		stateInit:t = "init"
		actionsTemplates {
			init {
				setEnabled {
					value:b = false
				}
				setCenterAzimuth {
					source:t = "constant"
					value:r = 0
				}
				setCenterElevation {
					source:t = "constant"
					value:r = 0
				}
				setScanPatternSet {
					scanPatternSet:t = "search"
				}
				setScopeRangeSet {
					scopeRangeSet:t = "search"
				}
				setTransiver {
					transiver:t = "search"
				}
				setSignal {
					signal:t = "search"
				}
				setCenterElevation {
					source:t = "constant"
					value:r = 0
				}
				setTargetDesignationRange {
					azimuthRange:p2 = -180, 180
					distanceRange:p2 = 0, 40000
				}
			}
			setStandbyMode {
				setModeName {
					name:t = "standby"
				}
				setEnabled {
					value:b = false
				}
			}
			resetStandbyMode {

			}
			setSearchMode {
				setModeName {
					name:t = "search"
				}
				setEnabled {
					value:b = true
				}
				setFsmActive {
					fsm:t = "search"
					active:b = true
				}
				setCueEnabled {
					value:b = true
				}
			}
			resetSearchMode {
				clearTargets {

				}
				setFsmActive {
					fsm:t = "search"
					active:b = false
				}
				setCueEnabled {
					value:b = false
				}
			}
		}
		transitions {
			init {
				stateFrom:t = "init"
				event:t = "init"
				stateTo:t = "standby"
				actions {
					init {

					}
					setStandbyMode {

					}
				}
			}
			switchOn {
				stateFrom:t = "standby"
				command:t = "switch"
				event:t = "enable"
				stateTo:t = "search"
				actions {
					setSearchMode {

					}
				}
			}
			switchOff {
				stateFrom:t = "search"
				command:t = "switch"
				event:t = "disable"
				stateTo:t = "standby"
				actions {
					resetSearchMode {

					}
					setStandbyMode {

					}
				}
			}
			switchScanPattern {
				stateFrom:t = "standby"
				stateFrom:t = "search"
				command:t = "scanPatternSwitch"
				actions {
					setNextScanPattern {

					}
				}
			}
			switchScopeRange {
				command:t = "rangeSwitch"
				actions {
					setNextScopeRange {

					}
				}
			}
		}
	}
	search {
		search {
			stateInit:t = "search"
			transitions {
				scan {
					event:t = "update"
					actions {
						scan {

						}
					}
				}
				detect {
					event:t = "targetInSight"
					actions {
						setDistGatePos {
							source:t = "continuousScale"
							width:r = 0
						}
						setRelSpeedGatePos {
							source:t = "continuousScale"
							width:r = 0
						}
						detectTarget {

						}
					}
				}
				addTarget {
					event:t = "targetDetected"
					actions {
						addTarget {

						}
						updateActiveDetectedTarget {

						}
					}
				}
				switchSelectedTarget {
					command:t = "switchTarget"
					actions {
						setNextDetectedTargetActive {

						}
					}
				}
				setCueAzimuth {
					command:t = "cueAxisX"
					actions {
						setCueAzimuth {

						}
					}
				}
				setCueDist {
					command:t = "cueAxisY"
					actions {
						setCueDist {

						}
					}
				}
				setCueElevation {
					command:t = "cueAxisZ"
					actions {
						setCueElevation {

						}
					}
				}
				setSelectedTarget {
					command:t = "switchToTarget"
					actions {
						setDetectedTargetActive {

						}
					}
				}
				designateTarget {
					command:t = "selectTarget"
					actions {
						designateActiveDetectedTarget {
							type:t = "target"
							sensorIndex:i = 1
						}
						designateTargetUnderCue {
							type:t = "cue"
							sensorIndex:i = 1
						}
					}
				}
			}
		}
	}
}