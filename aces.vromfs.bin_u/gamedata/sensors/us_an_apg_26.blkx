type:t = "radar"
name:t = "AN/APG-26"
transivers {
	track {
		sideLobesAttenuation:r = -20
		pulsePower:r = 50000
		pulseWidth:r = 0.0000004
		prf:r = 2450
		band:i = 8
		rcs:r = 3
		range:r = 10000
		rangeMax:r = 4000
		multipathEffect:p4 = 0, 1, 60, 0
		antenna {
			angleHalfSens:r = 4.7
			sideLobesSensitivity:r = -26
		}
	}
}
scanPatterns {
	lock {
		type:t = "cone"
		azimuthLimits:p2 = -60, 60
		elevationLimits:p2 = -60, 60
		period:r = 0.25
		width:r = 4.7
		indicate:b = true
	}
	track {
		type:t = "no"
		azimuthLimits:p2 = -60, 60
		elevationLimits:p2 = -60, 60
	}
}
signals {
	track {
		groundClutter:b = true
		aircraftAsTarget:b = true
		angularAccuracy:r = 0.08
		distanceAccuracy:r = 22
		track:b = true
		distance {
			presents:b = true
			minValue:r = 150
			maxValue:r = 4000
		}
	}
}
fsms {
	main {
		stateInit:t = "init"
		actionsTemplates {
			init {
				setEnabled {
					value:b = false
				}
				setTransiver {
					transiver:t = "track"
				}
				setSignal {
					signal:t = "track"
				}
			}
			setStandbyMode {
				setModeName {
					name:t = "standby"
				}
				setEnabled {
					value:b = false
				}
				setScanPattern {
					scanPattern:t = "lock"
				}
				setCenterAzimuth {
					source:t = "constant"
					value:r = 0
				}
				clearTargetsOfInterest {

				}
			}
			setLockMode {
				setModeName {
					name:t = "ACM"
				}
				setEnabled {
					value:b = true
				}
				setScanPattern {
					scanPattern:t = "lock"
				}
				resetScanPhase {

				}
				setCenterAzimuth {
					source:t = "constant"
					value:r = 0
				}
				clearTargetsOfInterest {

				}
				setFsmActive {
					fsm:t = "lock"
					active:b = true
				}
				setCenterElevation {
					source:t = "constant"
					value:r = 0
				}
				setDistGatePos {
					source:t = "constRange"
					pos:r = 2000
					width:r = 4000
				}
			}
			setTrackMode {
				setModeName {
					name:t = "track"
				}
				setEnabled {
					value:b = true
				}
				setWeaponDetectionAllowance {
					source:t = "const"
					value:b = true
				}
				setDesignatedTarget {
					set:b = false
				}
				setScanPattern {
					scanPattern:t = "track"
				}
				clearTargetsOfInterest {

				}
				addTargetOfInterest {

				}
				setLastTargetOfInterestActive {

				}
				updateActiveTargetOfInterest {

				}
				setCenterAzimuth {
					source:t = "activeTargetOfInterest"
				}
				setCenterElevation {
					source:t = "activeTargetOfInterest"
				}
				setDistGatePos {
					source:t = "activeTargetOfInterest"
					width:r = 0
				}
				setFsmActive {
					fsm:t = "track"
					active:b = true
				}
			}
		}
		transitions {
			switchOn {
				stateFrom:t = "init"
				event:t = "init"
				stateTo:t = "standby"
				actions {
					init {

					}
					setStandbyMode {

					}
				}
			}
			lock {
				stateFrom:t = "standby"
				command:t = "selectTarget"
				command:t = "acmSwitch"
				stateTo:t = "lock"
				actions {
					setLockMode {

					}
				}
			}
			track {
				stateFrom:t = "lock"
				event:t = "targetDetected"
				stateTo:t = "track"
				actions {
					setFsmActive {
						fsm:t = "lock"
						active:b = false
					}
					setTrackMode {

					}
				}
			}
			finishedTrack {
				stateFrom:t = "track"
				event:t = "targetsOfInterestCleanup"
				stateTo:t = "lock"
				actions {
					setFsmActive {
						fsm:t = "track"
						active:b = false
					}
					setLockMode {

					}
				}
			}
			track {
				stateFrom:t = "lock"
				stateFrom:t = "track"
				command:t = "selectTarget"
				command:t = "acmSwitch"
				event:t = "disable"
				stateTo:t = "standby"
				actions {
					setFsmActive {
						fsm:t = "lock"
						active:b = false
					}
					setFsmActive {
						fsm:t = "track"
						active:b = false
					}
					setStandbyMode {

					}
				}
			}
		}
	}
	lock {
		stateInit:t = "lock"
		transitions {
			scan {
				event:t = "update"
				actions {
					scan {

					}
				}
			}
			detect {
				event:t = "targetInSight"
				actions {
					detectTarget {
						ignoreOwnWeapon:b = true
						rangeMult:r = 1
					}
				}
			}
		}
	}
	track {
		stateInit:t = "track"
		transitions {
			detect {
				event:t = "update"
				actions {
					detectTarget {
						ignoreOwnWeapon:b = true
						rangeMult:r = 1
					}
				}
			}
			track {
				event:t = "targetDetected"
				actions {
					updateActiveTargetOfInterest {

					}
					setCenterAzimuth {
						source:t = "activeTargetOfInterest"
					}
					setCenterElevation {
						source:t = "activeTargetOfInterest"
					}
					setDistGatePos {
						source:t = "activeTargetOfInterest"
						width:r = 0
					}
				}
			}
			extrapolate {
				event:t = "targetNotDetected"
				actions {
					extrapolateTargetsOfInterest {

					}
					clearTargetsOfInterest {
						timeOut:r = 1
						dirRateLim:r = 1
					}
					setCenterAzimuth {
						source:t = "activeTargetOfInterest"
					}
					setCenterElevation {
						source:t = "activeTargetOfInterest"
					}
					setDistGatePos {
						source:t = "activeTargetOfInterest"
						width:r = 0
					}
				}
			}
		}
	}
}