type:t = "radar"
name:t = "AI Mk.4"
transivers {
	search {
		pulsePower:r = 450
		pulseWidth:r = 0.000001
		prf:r = 750
		band:i = 0
		range:r = 6100
		rangeMax:r = 6100
		antenna {
			angleHalfSens:r = 120
			sideLobesSensitivity:r = -10
		}
	}
}
scanPatterns {
	search {
		azimuthLimits:p2 = -60, 60
		elevationLimits:p2 = -60, 60
		type:t = "no"
	}
}
signals {
	search {
		groundClutter:b = true
		dynamicRange:p2 = 30, 3
		distance {
			presents:b = true
			minValue:r = 120
			maxValue:r = 6100
			maxUnambiguousValue:r = 220000
		}
	}
}
scopeRanges {
	range1:r = 6100
}
fsms {
	main {
		stateInit:t = "init"
		actionsTemplates {
			init {
				setEnabled {
					value:b = false
				}
				setTransiver {
					transiver:t = "search"
				}
				setTargetDesignationRange {
					azimuthRange:p2 = -30, 30
					distanceRange:p2 = 0, 6100
				}
			}
			setStandbyMode {
				setModeName {
					name:t = "standby"
				}
				setEnabled {
					value:b = false
				}
				setSignal {
					signal:t = "search"
				}
				setScanPattern {
					scanPattern:t = "search"
				}
			}
			setSearchMode {
				setModeName {
					name:t = "search"
				}
				setEnabled {
					value:b = true
				}
				setFsmActive {
					fsm:t = "search"
					active:b = true
				}
			}
		}
		transitions {
			init {
				stateFrom:t = "init"
				event:t = "init"
				stateTo:t = "standby"
				actions {
					init {

					}
					setStandbyMode {

					}
				}
			}
			switchOn {
				stateFrom:t = "standby"
				command:t = "switch"
				event:t = "enable"
				stateTo:t = "search"
				actions {
					setSearchMode {

					}
				}
			}
			switchOff {
				stateFrom:t = "search"
				command:t = "switch"
				event:t = "disable"
				stateTo:t = "standby"
				actions {
					setStandbyMode {

					}
				}
			}
			switchScopeRange {
				command:t = "rangeSwitch"
				actions {
					setNextScopeRange {

					}
				}
			}
		}
	}
	search {
		stateInit:t = "search"
		transitions {
			scan {
				event:t = "update"
				actions {
					scan {

					}
				}
			}
			detect {
				event:t = "targetInSight"
				actions {
					setDistGatePos {
						source:t = "continuousScale"
						width:r = 0
					}
					setRelSpeedGatePos {
						source:t = "continuousScale"
						width:r = 0
					}
					detectTarget {

					}
				}
			}
			addTarget {
				event:t = "targetDetected"
				actions {
					addTarget {

					}
				}
			}
		}
	}
}