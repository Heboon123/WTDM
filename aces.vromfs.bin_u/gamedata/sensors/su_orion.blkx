type:t = "radar"
name:t = "Orion"
transivers {
	surfaceSearch {
		sideLobesAttenuation:r = -22
		power:r = 500
		band:i = 8
		rcs:r = 40
		range:r = 7500
		rangeMax:r = 15000
		multipathEffect:p4 = 0, 1, 60, 0
		antenna {
			azimuth {
				angleHalfSens:r = 1.5
				sideLobesSensitivity:r = -35
			}
			elevation {
				angleHalfSens:r = 5
				sideLobesSensitivity:r = -35
			}
		}
	}
	surfaceMicroSearch {
		sideLobesAttenuation:r = -22
		power:r = 500
		band:i = 10
		rcs:r = 40
		range:r = 7500
		rangeMax:r = 15000
		multipathEffect:p4 = 0, 1, 60, 0
		antenna {
			azimuth {
				angleHalfSens:r = 0.35
				sideLobesSensitivity:r = -40
			}
			elevation {
				angleHalfSens:r = 1
				sideLobesSensitivity:r = -40
			}
		}
	}
	airSearch {
		sideLobesAttenuation:r = -22
		power:r = 500
		band:i = 8
		rcs:r = 10
		range:r = 25000
		rangeMax:r = 50000
		multipathEffect:p4 = 0, 1, 60, 0
		antenna {
			azimuth {
				angleHalfSens:r = 1.5
				sideLobesSensitivity:r = -35
			}
			elevation {
				angleHalfSens:r = 5
				sideLobesSensitivity:r = -35
			}
		}
	}
}
scanPatterns {
	search {
		type:t = "pyramide"
		azimuthLimits:p2 = -40, 40
		elevationLimits:p2 = -30, 30
		pitchStabLimit:r = 30
		rollStabLimit:r = 45
		period:r = 1
		width:r = 40
		barHeight:r = 5
		barsCount:i = 1
		rowMajor:b = true
		centerElevation:r = 5
	}
	microSearch {
		type:t = "pyramide"
		azimuthLimits:p2 = -40, 40
		elevationLimits:p2 = -30, 30
		pitchStabLimit:r = 30
		rollStabLimit:r = 45
		period:r = 1
		width:r = 40
		barHeight:r = 1
		barsCount:i = 1
		rowMajor:b = true
		centerElevation:r = 1
	}
}
signals {
	surfaceMicroSearch {
		groundClutter:b = false
		aircraftAsTarget:b = false
		groundVehiclesAsTarget:b = true
		distance {
			presents:b = true
			minValue:r = 300
			maxValue:r = 10000
		}
	}
	surfaceMtiSearch {
		groundClutter:b = false
		aircraftAsTarget:b = false
		groundVehiclesAsTarget:b = true
		distance {
			presents:b = true
			minValue:r = 300
			maxValue:r = 200000
		}
		dopplerSpeed {
			presents:b = true
			minValue:r = 2.5
			maxValue:r = 1000
			signalWidthMin:r = 2.5
			width:r = 0
		}
	}
	airSearch {
		groundClutter:b = true
		aircraftAsTarget:b = true
		groundVehiclesAsTarget:b = false
		distance {
			presents:b = true
			minValue:r = 300
			maxValue:r = 200000
		}
	}
}
scanPatternSets {
	search {
		scanPattern1:t = "search"
	}
	microSearch {
		scanPattern1:t = "microSearch"
	}
}
scopeRangeSets {
	search {
		range1:r = 25000
		range2:r = 75000
		range3:r = 150000
	}
	microSearch {
		range1:r = 10000
	}
}
fsms {
	main {
		stateInit:t = "init"
		actionsTemplates {
			init {
				setEnabled {
					value:b = false
				}
				setCenterAzimuth {
					source:t = "constant"
					value:r = 0
				}
				setCenterElevation {
					source:t = "constant"
					value:r = 0
				}
				setTransiver {
					transiver:t = "surfaceSearch"
				}
				setSignal {
					signal:t = "surfaceMtiSearch"
				}
				setFsmActive {
					fsm:t = "mode"
					active:b = true
				}
			}
			setStandbyMode {
				setEnabled {
					value:b = false
				}
				setFsmActive {
					fsm:t = "mode"
					active:b = false
				}
			}
			resetStandbyMode {

			}
			setSearchMode {
				setEnabled {
					value:b = true
				}
				setFsmActive {
					fsm:t = "search"
					active:b = true
				}
				setCueEnabled {
					value:b = true
				}
				setFsmActive {
					fsm:t = "mode"
					active:b = true
				}
			}
			resetSearchMode {
				clearTargets {

				}
				setFsmActive {
					fsm:t = "search"
					active:b = false
				}
				setCueEnabled {
					value:b = false
				}
			}
		}
		transitions {
			init {
				stateFrom:t = "init"
				event:t = "init"
				stateTo:t = "standby"
				actions {
					init {

					}
					setStandbyMode {

					}
				}
			}
			switchOn {
				stateFrom:t = "standby"
				command:t = "switch"
				event:t = "enable"
				stateTo:t = "search"
				actions {
					setSearchMode {

					}
				}
			}
			switchOff {
				stateFrom:t = "search"
				command:t = "switch"
				event:t = "disable"
				stateTo:t = "standby"
				actions {
					resetSearchMode {

					}
					setStandbyMode {

					}
				}
			}
			switchScanPattern {
				stateFrom:t = "standby"
				stateFrom:t = "search"
				command:t = "scanPatternSwitch"
				actions {
					setNextScanPattern {

					}
				}
			}
			switchScopeRange {
				command:t = "rangeSwitch"
				actions {
					setNextScopeRange {

					}
				}
			}
		}
	}
	search {
		stateInit:t = "search"
		transitions {
			scan {
				event:t = "update"
				actions {
					scan {

					}
					setCenterAzimuth {
						source:t = "constant"
						value:r = 0
					}
					setCenterAzimuth {
						source:t = "designationCue"
					}
					setCenterElevation {
						source:t = "constant"
						value:r = 0
					}
					setCenterElevation {
						source:t = "designationCue"
					}
				}
			}
			detect {
				event:t = "targetInSight"
				actions {
					setDistGatePos {
						source:t = "continuousScale"
						width:r = 0
					}
					setRelSpeedGatePos {
						source:t = "continuousScale"
						width:r = 0
					}
					detectTarget {

					}
				}
			}
			addTarget {
				event:t = "targetDetected"
				actions {
					addTarget {

					}
					updateActiveDetectedTarget {

					}
				}
			}
			switchSelectedTarget {
				command:t = "switchTarget"
				actions {
					setNextDetectedTargetActive {

					}
				}
			}
			setCueAzimuth {
				command:t = "cueAxisX"
				actions {
					setCueAzimuth {

					}
				}
			}
			setCueDist {
				command:t = "cueAxisY"
				actions {
					setCueDist {

					}
				}
			}
			setCueElevation {
				command:t = "cueAxisZ"
				actions {
					setCueElevation {

					}
				}
			}
			setSelectedTarget {
				command:t = "switchToTarget"
				actions {
					setDetectedTargetActive {

					}
				}
			}
			designateTarget {
				command:t = "selectTarget"
				actions {
					designateActiveDetectedTarget {
						type:t = "target"
						sensorIndex:i = 1
					}
					designateActiveDetectedTarget {
						type:t = "target"
						self:b = true
						sensorIndex:i = 0
					}
				}
			}
			centerZone {
				command:t = "directionAxesReset"
				actions {
					setCueToBoresight {

					}
					setCenterAzimuth {
						source:t = "designationCue"
					}
					setCenterElevation {
						source:t = "designationCue"
					}
					updateActiveDetectedTarget {

					}
				}
			}
		}
	}
	mode {
		stateInit:t = "init"
		actionsTemplates {
			setSurfaceMtiSearchMode {
				setModeName {
					name:t = "MTI search"
				}
				setTransiver {
					transiver:t = "surfaceSearch"
				}
				setSignal {
					signal:t = "surfaceMtiSearch"
				}
				setScanPatternSet {
					scanPatternSet:t = "search"
				}
				setScopeRangeSet {
					scopeRangeSet:t = "search"
				}
				setTargetDesignationRange {
					azimuthRange:p2 = -40, 40
					azmithWidth:r = 3
					elevationRange:p2 = -30, 30
					distanceRange:p2 = 500, 75000
				}
			}
			setSurfaceMicroSearchMode {
				setModeName {
					name:t = "ground_search"
				}
				setTransiver {
					transiver:t = "surfaceMicroSearch"
				}
				setSignal {
					signal:t = "surfaceMicroSearch"
				}
				setScanPatternSet {
					scanPatternSet:t = "microSearch"
				}
				setScopeRangeSet {
					scopeRangeSet:t = "microSearch"
				}
				setTargetDesignationRange {
					azimuthRange:p2 = -40, 40
					azmithWidth:r = 1
					elevationRange:p2 = -30, 30
					distanceRange:p2 = 500, 10000
				}
			}
			setAirSearchMode {
				setModeName {
					name:t = "search"
				}
				setTransiver {
					transiver:t = "airSearch"
				}
				setSignal {
					signal:t = "airSearch"
				}
				setScanPatternSet {
					scanPatternSet:t = "search"
				}
				setScopeRangeSet {
					scopeRangeSet:t = "search"
				}
				setTargetDesignationRange {
					azimuthRange:p2 = -40, 40
					azmithWidth:r = 3
					elevationRange:p2 = -30, 30
					distanceRange:p2 = 500, 75000
				}
			}
		}
		transitions {
			init {
				stateFrom:t = "init"
				event:t = "fsmActivate"
				stateTo:t = "surfaceMtiSearch"
				actions {
					setSurfaceMtiSearchMode {

					}
					clearTargets {

					}
				}
			}
			showSurfaceMtiSearch {
				stateFrom:t = "surfaceMtiSearch"
				event:t = "fsmActivate"
				stateTo:t = "surfaceMtiSearch"
				actions {
					setSurfaceMtiSearchMode {

					}
					clearTargets {

					}
				}
			}
			showSurfaceMicroSearch {
				stateFrom:t = "surfaceMicroSearch"
				event:t = "fsmActivate"
				stateTo:t = "surfaceMicroSearch"
				actions {
					setSurfaceMicroSearchMode {

					}
					clearTargets {

					}
				}
			}
			showAirSearch {
				stateFrom:t = "airSearch"
				event:t = "fsmActivate"
				stateTo:t = "airSearch"
				actions {
					setAirSearchMode {

					}
					clearTargets {

					}
				}
			}
			surfaceMtiSearchToSurfaceMicroSearch {
				stateFrom:t = "surfaceMtiSearch"
				command:t = "modeSwitch"
				stateTo:t = "surfaceMicroSearch"
				actions {
					setSurfaceMicroSearchMode {

					}
					clearTargets {

					}
				}
			}
			surfaceMtiSearchToAirSearch {
				stateFrom:t = "surfaceMicroSearch"
				command:t = "modeSwitch"
				stateTo:t = "airSearch"
				actions {
					setAirSearchMode {

					}
					clearTargets {

					}
				}
			}
			airSearchtoSurfaceMtiSearch {
				stateFrom:t = "airSearch"
				command:t = "modeSwitch"
				stateTo:t = "surfaceMtiSearch"
				actions {
					setSurfaceMtiSearchMode {

					}
					clearTargets {

					}
				}
			}
		}
	}
}