selector {
	name:t = "defaultCTABot"
	selectStrategy:t = "ordered"
	reaction {
		event:t = "groundAhead"
		parallel {
			turnToEvasiveDir {

			}
			stayAtSpeed {
				speedMode:t = "boostOn"
			}
		}
	}
	reaction {
		event:t = "collisionAhead"
		parallel {
			turnToEvasiveDir {

			}
			stayAtSpeed {
				speedMode:t = "boostOn"
			}
		}
	}
	reaction {
		event:t = "outsideBattleField"
		flyToPos {
			speed:r = 550
			dist:r = -1
			minAlt:r = 100
			destType:t = "battleField"
		}
	}
	selector {
		selectStrategy:t = "ordered"
		name:t = "taxi_and_takeoff"
		reaction {
			event:t = "groundAhead"
		}
		reaction {
			event:t = "collisionAhead"
		}
		reaction {
			event:t = "outsideBattleField"
		}
		sequencer {
			isOnAirfield {

			}
			findClosestAirfield {

			}
			waitForAirfieldClearance {

			}
			taxiOnAirfield {

			}
			takeoff {

			}
		}
		waitOnLand {

		}
	}
	reaction {
		event:t = "almostBeenHit"
		setNodeWithName {
			nodeName:t = "doPanic"
		}
	}
	reaction {
		event:t = "almostBeenHitFront"
		setNodeWithName {
			nodeName:t = "doFrontalPanic"
		}
	}
	selector {
		selectStrategy:t = "random"
		sequencer {
			reaction {
				event:t = "regularCheck"
				sequencer {
					not {
						isInOuterFightArea {

						}
					}
					recalculateTree {

					}
				}
			}
			setSuitableFightArea {
				tagToCheck:t = "fighter"
				innerRad:r = 2500
				outerRad:r = 4000
			}
			stayInFightArea {

			}
			findUnit {
				searchForAir:b = false
				searchForGround:b = true
				onlyMissionTargets:b = false
				radius:r = 100000
			}
			selector {
				selectStrategy:t = "ordered"
				torpedoTarget {

				}
				bombTarget {

				}
				fighterAttackGround {

				}
			}
		}
		sequencer {
			reaction {
				event:t = "regularCheck"
				sequencer {
					not {
						isInOuterFightArea {

						}
					}
					recalculateTree {

					}
				}
			}
			setSuitableFightArea {
				tagToCheck:t = "fighter"
				innerRad:r = 2500
				outerRad:r = 4000
			}
			stayInFightArea {

			}
			parallel {
				updateTarget {
					searchForAir:b = true
					onlyMissionTargets:b = false
					radius:r = 100000
					distanceDifferenceToMaxSpeedRatio:r = 9
				}
				ifThenElse {
					or {
						isTargetType {
							type:t = "fighter"
						}
						isTargetType {
							type:t = "bomber"
						}
					}
					selector {
						fighterAttackFighter {
							allowSpeedCheat:b = false
						}
					}
					fighterAttackGround {

					}
				}
			}
		}
	}
	sequencer {
		orbitHere {
			speed:r = 260
			rollFactor:r = 0.2
			alt:r = 3000
			maxTime:r = 10
		}
	}
	selector {
		name:t = "doPanic"
		rollManeuver {

		}
		bellManeuver {

		}
		roll180Man {

		}
		waveout {

		}
		sinus {

		}
		zigzagSplit {

		}
	}
	selector {
		name:t = "doFrontalPanic"
		rollManeuver {

		}
		roll180Man {

		}
		sinus {

		}
		turn {
			direction:t = "right"
			maxRoll:r = 60
			timeToTurn:r = 1.3
		}
		turn {
			direction:t = "left"
			maxRoll:r = 60
			timeToTurn:r = 1.3
		}
		turn {
			direction:t = "right"
			maxRoll:r = 60
			timeToTurn:r = 0.4
		}
		turn {
			direction:t = "left"
			maxRoll:r = 60
			timeToTurn:r = 0.4
		}
		turn {
			direction:t = "right"
			maxRoll:r = 60
			timeToTurn:r = 0.5
		}
		turn {
			direction:t = "left"
			maxRoll:r = 60
			timeToTurn:r = 0.5
		}
	}
}
selector {
	name:t = "assaultBot"
	selectStrategy:t = "ordered"
	reaction {
		event:t = "groundAhead"
		parallel {
			turnToEvasiveDir {

			}
			stayAtSpeed {
				speedMode:t = "boostOn"
			}
		}
	}
	reaction {
		event:t = "collisionAhead"
		parallel {
			turnToEvasiveDir {

			}
			stayAtSpeed {
				speedMode:t = "boostOn"
			}
		}
	}
	reaction {
		event:t = "outsideBattleField"
		flyToPos {
			speed:r = 550
			dist:r = -1
			minAlt:r = 100
			destType:t = "battleField"
		}
	}
	selector {
		selectStrategy:t = "ordered"
		name:t = "taxi_and_takeoff"
		reaction {
			event:t = "groundAhead"
		}
		reaction {
			event:t = "collisionAhead"
		}
		reaction {
			event:t = "outsideBattleField"
		}
		sequencer {
			isOnAirfield {

			}
			findClosestAirfield {

			}
			waitForAirfieldClearance {

			}
			taxiOnAirfield {

			}
			takeoff {

			}
		}
		waitOnLand {

		}
	}
	sequencer {
		findUnit {
			searchForAir:b = false
			searchForGround:b = true
			onlyMissionTargets:b = false
			radius:r = 100000
		}
		selector {
			selectStrategy:t = "ordered"
			torpedoTarget {

			}
			bombTarget {

			}
			fighterAttackGround {

			}
		}
	}
	parallel {
		updateTarget {
			searchForAir:b = true
			onlyMissionTargets:b = false
			radius:r = 100000
			distanceDifferenceToMaxSpeedRatio:r = 9
		}
		ifThenElse {
			or {
				isTargetType {
					type:t = "fighter"
				}
				isTargetType {
					type:t = "bomber"
				}
			}
			selector {
				fighterAttackFighter {
					allowSpeedCheat:b = false
				}
			}
			fighterAttackGround {

			}
		}
	}
}
selector {
	name:t = "captureBot"
	selectStrategy:t = "ordered"
	reaction {
		event:t = "groundAhead"
		parallel {
			turnToEvasiveDir {

			}
			stayAtSpeed {
				speedMode:t = "boostOn"
			}
		}
	}
	reaction {
		event:t = "collisionAhead"
		parallel {
			turnToEvasiveDir {

			}
			stayAtSpeed {
				speedMode:t = "boostOn"
			}
		}
	}
	reaction {
		event:t = "outsideBattleField"
		flyToPos {
			speed:r = 550
			dist:r = -1
			minAlt:r = 100
			destType:t = "battleField"
		}
	}
	selector {
		selectStrategy:t = "ordered"
		name:t = "taxi_and_takeoff"
		reaction {
			event:t = "groundAhead"
		}
		reaction {
			event:t = "collisionAhead"
		}
		reaction {
			event:t = "outsideBattleField"
		}
		sequencer {
			isOnAirfield {

			}
			findClosestAirfield {

			}
			waitForAirfieldClearance {

			}
			taxiOnAirfield {

			}
			takeoff {

			}
		}
		waitOnLand {

		}
	}
	reaction {
		event:t = "almostBeenHit"
		setNodeWithName {
			nodeName:t = "doPanic"
		}
	}
	reaction {
		event:t = "almostBeenHitFront"
		setNodeWithName {
			nodeName:t = "doFrontalPanic"
		}
	}
	sequencer {
		ifThenElse {
			and {
				checkCaptureZone {
					varName:t = "zoneToCapture"
					cond:t = "landOnly"
				}
				findAirportAtCZ {
					varName:t = "zoneToCapture"
				}
			}
			sequencer {
				findApproachPos {
					dist:r = 2600
				}
				flyToPos {
					speed:r = 350
					dist:r = 1250
					minAlt:r = 100
				}
				findApproachPos {
					dist:r = 900
				}
				flyToPos {
					speed:r = 200
					dist:r = 350
					minAlt:r = 20
				}
				sequencer {
					reaction {
						event:t = "groundAhead"
					}
					reaction {
						event:t = "collisionAhead"
					}
					land {

					}
					afterLanding {

					}
				}
			}
			sequencer {
				setCaptureZoneAsDestination {
					varName:t = "zoneToCapture"
				}
				flyToPos {
					speed:r = 350
					dist:r = 350
					minAlt:r = 200
				}
			}
		}
	}
	selector {
		name:t = "doPanic"
		rollManeuver {

		}
		bellManeuver {

		}
		roll180Man {

		}
		waveout {

		}
		sinus {

		}
		zigzagSplit {

		}
	}
	selector {
		name:t = "doFrontalPanic"
		rollManeuver {

		}
		roll180Man {

		}
		sinus {

		}
		turn {
			direction:t = "right"
			maxRoll:r = 60
			extremeElevator:b = true
			timeToTurn:r = 1.3
		}
		turn {
			direction:t = "left"
			maxRoll:r = 60
			extremeElevator:b = true
			timeToTurn:r = 1.3
		}
		turn {
			direction:t = "right"
			maxRoll:r = 60
			extremeElevator:b = true
			timeToTurn:r = 0.4
		}
		turn {
			direction:t = "left"
			maxRoll:r = 60
			extremeElevator:b = true
			timeToTurn:r = 0.4
		}
		turn {
			direction:t = "right"
			maxRoll:r = 60
			extremeElevator:b = true
			timeToTurn:r = 0.5
		}
		turn {
			direction:t = "left"
			maxRoll:r = 60
			extremeElevator:b = true
			timeToTurn:r = 0.5
		}
	}
}
selector {
	name:t = "assistCaptureBot"
	selectStrategy:t = "ordered"
	reaction {
		event:t = "groundAhead"
		parallel {
			turnToEvasiveDir {

			}
			stayAtSpeed {
				speedMode:t = "boostOn"
			}
		}
	}
	reaction {
		event:t = "collisionAhead"
		parallel {
			turnToEvasiveDir {

			}
			stayAtSpeed {
				speedMode:t = "boostOn"
			}
		}
	}
	reaction {
		event:t = "outsideBattleField"
		flyToPos {
			speed:r = 550
			dist:r = -1
			minAlt:r = 100
			destType:t = "battleField"
		}
	}
	selector {
		selectStrategy:t = "ordered"
		name:t = "taxi_and_takeoff"
		reaction {
			event:t = "groundAhead"
		}
		reaction {
			event:t = "collisionAhead"
		}
		reaction {
			event:t = "outsideBattleField"
		}
		sequencer {
			isOnAirfield {

			}
			findClosestAirfield {

			}
			waitForAirfieldClearance {

			}
			taxiOnAirfield {

			}
			takeoff {

			}
		}
		waitOnLand {

		}
	}
	reaction {
		event:t = "almostBeenHit"
		setNodeWithName {
			nodeName:t = "doPanic"
		}
	}
	reaction {
		event:t = "almostBeenHitFront"
		setNodeWithName {
			nodeName:t = "doFrontalPanic"
		}
	}
	setAsLeader {
		varName:t = "planeToAssist"
	}
	sequencer {
		reaction {
			event:t = "regularCheck"
			sequencer {
				or {
					isTargetDist {
						useTarget:b = false
						op:t = "greater"
						dist:r = 2000
					}
					isTargetDist {
						useTarget:b = true
						op:t = "greater"
						dist:r = 2000
					}
				}
				recalculateTree {

				}
			}
		}
		isTargetDist {
			useTarget:b = false
			op:t = "less"
			dist:r = 2000
		}
		findUnit {
			searchForAir:b = true
			onlyMissionTargets:b = false
			radius:r = 2000
			degreesToCheck:r = 50
		}
		selector {
			fighterAttackFighter {
				allowSpeedCheat:b = false
			}
		}
	}
	reaction {
		event:t = "regularCheck"
		isTargetDist {
			useTarget:b = true
			op:t = "greater"
			dist:r = 2000
		}
		findUnit {
			searchForAir:b = true
			onlyMissionTargets:b = false
			radius:r = 2000
			degreesToCheck:r = 50
		}
		recalculateTree {

		}
	}
	followTarget {
		offset:p3 = -20, 10, 30
		useTarget:b = false
	}
	selector {
		name:t = "doPanic"
		rollManeuver {

		}
		bellManeuver {

		}
		roll180Man {

		}
		waveout {

		}
		sinus {

		}
		zigzagSplit {

		}
	}
	selector {
		name:t = "doFrontalPanic"
		rollManeuver {

		}
		roll180Man {

		}
		sinus {

		}
		turn {
			direction:t = "right"
			maxRoll:r = 60
			extremeElevator:b = true
			timeToTurn:r = 1.3
		}
		turn {
			direction:t = "left"
			maxRoll:r = 60
			extremeElevator:b = true
			timeToTurn:r = 1.3
		}
		turn {
			direction:t = "right"
			maxRoll:r = 60
			extremeElevator:b = true
			timeToTurn:r = 0.4
		}
		turn {
			direction:t = "left"
			maxRoll:r = 60
			extremeElevator:b = true
			timeToTurn:r = 0.4
		}
		turn {
			direction:t = "right"
			maxRoll:r = 60
			extremeElevator:b = true
			timeToTurn:r = 0.5
		}
		turn {
			direction:t = "left"
			maxRoll:r = 60
			extremeElevator:b = true
			timeToTurn:r = 0.5
		}
	}
}
selector {
	name:t = "defenderBot"
	selectStrategy:t = "ordered"
	reaction {
		event:t = "groundAhead"
		parallel {
			turnToEvasiveDir {

			}
			stayAtSpeed {
				speedMode:t = "boostOn"
			}
		}
	}
	reaction {
		event:t = "collisionAhead"
		parallel {
			turnToEvasiveDir {

			}
			stayAtSpeed {
				speedMode:t = "boostOn"
			}
		}
	}
	reaction {
		event:t = "outsideBattleField"
		flyToPos {
			speed:r = 550
			dist:r = -1
			minAlt:r = 100
			destType:t = "battleField"
		}
	}
	selector {
		selectStrategy:t = "ordered"
		name:t = "taxi_and_takeoff"
		reaction {
			event:t = "groundAhead"
		}
		reaction {
			event:t = "collisionAhead"
		}
		reaction {
			event:t = "outsideBattleField"
		}
		sequencer {
			isOnAirfield {

			}
			findClosestAirfield {

			}
			waitForAirfieldClearance {

			}
			taxiOnAirfield {

			}
			takeoff {

			}
		}
		waitOnLand {

		}
	}
	reaction {
		event:t = "almostBeenHit"
		setNodeWithName {
			nodeName:t = "doPanic"
		}
	}
	reaction {
		event:t = "almostBeenHitFront"
		setNodeWithName {
			nodeName:t = "doFrontalPanic"
		}
	}
	setCaptureZoneAsDestination {
		varName:t = "zoneToDefend"
	}
	selector {
		selectStrategy:t = "ordered"
		sequencer {
			reaction {
				event:t = "regularCheck"
				sequencer {
					or {
						isDistToDest {
							op:t = "greater"
							dist:r = 4000
						}
						isTargetDist {
							useTarget:b = true
							op:t = "greater"
							dist:r = 6000
						}
					}
					recalculateTree {

					}
				}
			}
			isDistToDest {
				op:t = "less"
				dist:r = 2000
			}
			or {
				findEnemyInZone {

				}
				findUnit {
					searchForAir:b = true
					onlyMissionTargets:b = false
					radius:r = 2000
				}
			}
			selector {
				fighterAttackFighter {
					allowSpeedCheat:b = false
				}
			}
		}
		sequencer {
			flyToPos {
				speed:r = 750
				dist:r = 1500
				minAlt:r = 200
				maxTime:r = 5
			}
			setCaptureZoneAsDestination {
				varName:t = "zoneToDefend"
			}
			flyToPos {
				speed:r = 260
				dist:r = 50
				minAlt:r = 200
				maxTime:r = 5
			}
		}
	}
	selector {
		name:t = "doPanic"
		rollManeuver {

		}
		bellManeuver {

		}
		roll180Man {

		}
		waveout {

		}
		sinus {

		}
		zigzagSplit {

		}
	}
	selector {
		name:t = "doFrontalPanic"
		rollManeuver {

		}
		roll180Man {

		}
		sinus {

		}
		turn {
			direction:t = "right"
			maxRoll:r = 60
			extremeElevator:b = true
			timeToTurn:r = 1.3
		}
		turn {
			direction:t = "left"
			maxRoll:r = 60
			extremeElevator:b = true
			timeToTurn:r = 1.3
		}
		turn {
			direction:t = "right"
			maxRoll:r = 60
			extremeElevator:b = true
			timeToTurn:r = 0.4
		}
		turn {
			direction:t = "left"
			maxRoll:r = 60
			extremeElevator:b = true
			timeToTurn:r = 0.4
		}
		turn {
			direction:t = "right"
			maxRoll:r = 60
			extremeElevator:b = true
			timeToTurn:r = 0.5
		}
		turn {
			direction:t = "left"
			maxRoll:r = 60
			extremeElevator:b = true
			timeToTurn:r = 0.5
		}
	}
}
selector {
	name:t = "seekerBot"
	selectStrategy:t = "ordered"
	reaction {
		event:t = "groundAhead"
		parallel {
			turnToEvasiveDir {

			}
			stayAtSpeed {
				speedMode:t = "boostOn"
			}
		}
	}
	reaction {
		event:t = "collisionAhead"
		parallel {
			turnToEvasiveDir {

			}
			stayAtSpeed {
				speedMode:t = "boostOn"
			}
		}
	}
	reaction {
		event:t = "outsideBattleField"
		flyToPos {
			speed:r = 550
			dist:r = -1
			minAlt:r = 100
			destType:t = "battleField"
		}
	}
	selector {
		selectStrategy:t = "ordered"
		name:t = "taxi_and_takeoff"
		reaction {
			event:t = "groundAhead"
		}
		reaction {
			event:t = "collisionAhead"
		}
		reaction {
			event:t = "outsideBattleField"
		}
		sequencer {
			isOnAirfield {

			}
			findClosestAirfield {

			}
			waitForAirfieldClearance {

			}
			taxiOnAirfield {

			}
			takeoff {

			}
		}
		waitOnLand {

		}
	}
	reaction {
		event:t = "almostBeenHit"
		setNodeWithName {
			nodeName:t = "doPanic"
		}
	}
	reaction {
		event:t = "almostBeenHitFront"
		setNodeWithName {
			nodeName:t = "doFrontalPanic"
		}
	}
	parallel {
		updateTarget {
			searchForAir:b = true
			onlyMissionTargets:b = false
			radius:r = 200000
			distanceDifferenceToMaxSpeedRatio:r = 9
		}
		ifThenElse {
			or {
				isTargetType {
					type:t = "fighter"
				}
				isTargetType {
					type:t = "bomber"
				}
			}
			selector {
				fighterAttackFighter {
					allowSpeedCheat:b = false
				}
			}
			fighterAttackGround {

			}
		}
	}
	orbitHere {
		speed:r = 260
		rollFactor:r = 0.2
		alt:r = 3000
		maxTime:r = 10
	}
	selector {
		name:t = "doPanic"
		rollManeuver {

		}
		bellManeuver {

		}
		roll180Man {

		}
		waveout {

		}
		sinus {

		}
		zigzagSplit {

		}
	}
	selector {
		name:t = "doFrontalPanic"
		rollManeuver {

		}
		roll180Man {

		}
		sinus {

		}
		turn {
			direction:t = "right"
			maxRoll:r = 60
			timeToTurn:r = 1.3
		}
		turn {
			direction:t = "left"
			maxRoll:r = 60
			timeToTurn:r = 1.3
		}
		turn {
			direction:t = "right"
			maxRoll:r = 60
			timeToTurn:r = 0.4
		}
		turn {
			direction:t = "left"
			maxRoll:r = 60
			timeToTurn:r = 0.4
		}
		turn {
			direction:t = "right"
			maxRoll:r = 60
			timeToTurn:r = 0.5
		}
		turn {
			direction:t = "left"
			maxRoll:r = 60
			timeToTurn:r = 0.5
		}
	}
}
selector {
	name:t = "idleBot"
	selectStrategy:t = "ordered"
	reaction {
		event:t = "groundAhead"
		parallel {
			turnToEvasiveDir {

			}
			stayAtSpeed {
				speedMode:t = "boostOn"
			}
		}
	}
	reaction {
		event:t = "collisionAhead"
		parallel {
			turnToEvasiveDir {

			}
			stayAtSpeed {
				speedMode:t = "boostOn"
			}
		}
	}
	reaction {
		event:t = "outsideBattleField"
		flyToPos {
			speed:r = 550
			dist:r = -1
			minAlt:r = 100
			destType:t = "battleField"
		}
	}
	selector {
		selectStrategy:t = "ordered"
		name:t = "taxi_and_takeoff"
		reaction {
			event:t = "groundAhead"
		}
		reaction {
			event:t = "collisionAhead"
		}
		reaction {
			event:t = "outsideBattleField"
		}
		sequencer {
			isOnAirfield {

			}
			findClosestAirfield {

			}
			waitForAirfieldClearance {

			}
			taxiOnAirfield {

			}
			takeoff {

			}
		}
		waitOnLand {

		}
	}
	sequencer {
		findCaptureZone {
			zoneType:t = "enemy"
			varName:t = "zoneToCapture"
		}
		setCaptureZoneAsDestination {
			varName:t = "zoneToCapture"
		}
		flyToPos {
			speed:r = 350
			dist:r = 350
			minAlt:r = 200
		}
	}
}
selector {
	name:t = "rearmingBot"
	selectStrategy:t = "ordered"
	reaction {
		event:t = "groundAhead"
		parallel {
			turnToEvasiveDir {

			}
			stayAtSpeed {
				speedMode:t = "boostOn"
			}
		}
	}
	reaction {
		event:t = "collisionAhead"
		parallel {
			turnToEvasiveDir {

			}
			stayAtSpeed {
				speedMode:t = "boostOn"
			}
		}
	}
	reaction {
		event:t = "outsideBattleField"
		flyToPos {
			speed:r = 550
			dist:r = -1
			minAlt:r = 100
			destType:t = "battleField"
		}
	}
	selector {
		selectStrategy:t = "ordered"
		name:t = "taxi_and_takeoff"
		reaction {
			event:t = "groundAhead"
		}
		reaction {
			event:t = "collisionAhead"
		}
		reaction {
			event:t = "outsideBattleField"
		}
		sequencer {
			isOnAirfield {

			}
			findClosestAirfield {

			}
			waitForAirfieldClearance {

			}
			taxiOnAirfield {

			}
			takeoff {

			}
		}
		waitOnLand {

		}
	}
	sequencer {
		orbitHere {
			speed:r = 260
			rollFactor:r = 0.2
			alt:r = 1500
			maxTime:r = 60
		}
		restore {
			rearm:b = true
		}
	}
}
selector {
	name:t = "tankBot"
	selectStrategy:t = "ordered"
	sequencer {
		selector {
			selectStrategy:t = "ordered"
			selectOnSuccess:b = true
			setCapturePointAsDest {
				dist:r = 20
			}
			selectExplicitDestination {
				minDist:r = 20
			}
		}
		driveToPos {
			dist:r = 10
		}
	}
}
selector {
	name:t = "shipMissionUnit"
	selectStrategy:t = "ordered"
	selector {
		selectStrategy:t = "ordered"
		selectOnSuccess:b = true
		sequencer {
			findShipLeader {

			}
			followShipLeader {

			}
		}
		sequencer {
			doesntHaveLeader {

			}
			selector {
				selectStrategy:t = "ordered"
				selectOnSuccess:b = true
				transferLeader {

				}
				findNextShipWaypoint {

				}
				checkIfShipHasDestination {

				}
				recalculatePathToTarget {

				}
			}
			shipSail {

			}
		}
	}
	stopShipEngine {

	}
}
parallel {
	name:t = "shipBot"
	selector {
		selectStrategy:t = "ordered"
		selector {
			selectStrategy:t = "ordered"
			selectOnSuccess:b = true
			sequencer {
				findShipLeader {

				}
				followShipLeader {

				}
			}
			sequencer {
				doesntHaveLeader {

				}
				selector {
					selectStrategy:t = "ordered"
					selectOnSuccess:b = true
					transferLeader {

					}
					findNextShipWaypoint {

					}
					checkIfShipHasDestination {

					}
					recalculatePathToTarget {

					}
					findCapturePointToSail {
						canCapture:b = true
					}
				}
				shipSail {

				}
			}
		}
		stopShipEngine {

		}
	}
	sendSupportAircraft {
		timeOutRange:p2 = 10, 30
		attackersPerTargetMax:i = 1
		attacksMax:i = 3
	}
}